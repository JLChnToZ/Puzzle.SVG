{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.ts","webpack:///./src/index.ts","webpack:///./src/puzzle-generator.ts","webpack:///./src/drag-handler.ts","webpack:///./src/xml-clone.ts","webpack:///./src/certificate.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","NS_SVG","NS_XHTML","round","Math","Number","EPSILON","getUrl","blob","Promise","resolve","reject","reader","FileReader","readAsDataURL","addEventListener","result","Error","getImageDimensions","src","img","Image","width","naturalWidth","height","naturalHeight","clearChildren","node","hasChildNodes","removeChild","firstChild","formatNumber","digits","toString","padStart","formatTime","time","absTime","abs","floor","formatDateTime","date","Date","yr","getFullYear","mo","getMonth","dy","getDate","hr","getHours","mi","getMinutes","se","getSeconds","getSeed","seed","hash","length","imul","charCodeAt","pathIdMatcher","MainHandler","root","document","baseTime","theshold","_xc","_yc","querySelector","classList","remove","this","Document","ownerDocument","defsElement","uiGroup","pathGroup","instanceGroup","timeDisp","dataElement","menuGroup","menuForm","onMenuSubmit","onMenuReset","imageSelector","onImageSelected","colSelector","onColChange","rowSelector","onRowChange","imagePreview","menu","save","imageElement","imageUrl","href","baseVal","window","onWindowResize","assign","registerDraggable","onDrag","onDrop","load","Blob","max","sqrt","oldMask","querySelectorAll","hideCetificate","startTime","calculateTheshold","endTime","resumeTime","textContent","timer","clearInterval","paths","JigsawGenerator","undefined","toSvgElements","viewWidth","viewHeight","setAttribute","path","mask","appendChild","createElementNS","id","add","maskPath","instance","base","decoPath","exec","w","h","transform","appendItem","createSVGTransform","setTranslate","random","parseInt","element","setInterval","updateTime","state","target","parentNode","x","y","checkAndMerge","childElementCount","lastElement","removeItem","showCertificate","current","next","other","closest","isDragging","t1","numberOfItems","t2","m1","getItem","matrix","m2","e","f","currentIsGroup","contains","otherIsGroup","child","Array","from","childNodes","newGroup","now","getTime","data","JSON","parse","xCount","yCount","stringify","downloadDocument","beforeSave","files","file","item","updateImage","valueAsNumber","startsWith","URL","revokeObjectURL","createObjectURL","preventDefault","init","reset","viewBox","scale","innerWidth","innerHeight","setScale","svgArgsCount","M","L","H","V","v","C","S","Q","q","T","A","a","z","tabSize","jitter","radius","strokes","Map","b","flip","trunc","MAX_SAFE_INTEGER","min","sl","sw","vertical","yi","first","xi","pushStroke","generateStroke","points","inst","cells","stroke","getNormalizedStroke","clear","parent","row","elm","push","reverse","p0l","p0w","p1l","p1w","p2l","p2w","p3l","p3w","p4l","p4w","p5l","p5w","p6l","p6w","p7l","p7w","p8l","p8w","p9l","p9w","sin","nextJitter","filp","ol","ow","set","strokeSet","Set","size","found","delete","splice","j","slice","join","draggableClass","handlerClass","draggingElements","states","onMouseStartDrag","onMouseDragging","onMouseEndDrag","onTouchStartDrag","capture","passive","onTouchDragging","onTouchEndDrag","getState","identifier","MouseEvent","button","SVGGraphicsElement","handleStartDrag","interceptEvent","ownerSVGElement","pointer","targetTouches","srcElement","ctm","getScreenCTM","inverse","SVGUseElement","instanceRoot","correspondingElement","SVGGeometryElement","touch","lp","getLocalPoint","isPointInFill","isPointInStroke","bbox","getBBox","left","right","top","bottom","matches","has","transforms","type","SVGTransform","SVG_TRANSFORM_TRANSLATE","insertItemBefore","offset","matrixTransform","offsetX","offsetY","handleDrag","changedTouches","map","includes","coord","handleEndDrag","createSVGPoint","clientX","clientY","cancelable","defaultPrevented","stopPropagation","async","treatments","implementation","createDocument","clone","importNode","replaceChild","all","resolveScript","XMLSerializer","serializeToString","download","click","script","HTMLScriptElement","removeAttribute","fetch","text","SVGScriptElement","createCDATASection","certificate","timeStartElement","timeEndElement","timeUsedElement","puzzleSizeElement","mainHandler"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const NS_SVG = 'http://www.w3.org/2000/svg';\r\nexport const NS_XHTML = 'http://www.w3.org/1999/xhtml';\r\n\r\nexport function round(n: number, c = 0) {\r\n  c = 10 ** c;\r\n  return Math.round((n + Number.EPSILON) * c) / c;\r\n}\r\n\r\nexport function getUrl(blob: Blob) {\r\n  return new Promise<string>((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(blob);\r\n    reader.addEventListener('loadend', () =>\r\n      resolve(reader.result as string));\r\n    reader.addEventListener('error', () =>\r\n      reject(new Error('Unable to get URL from blob.')));\r\n  });\r\n}\r\n\r\nexport function getImageDimensions(src: string) {\r\n  return new Promise<{ width: number; height: number; }>((resolve, reject) => {\r\n    const img = new Image();\r\n    img.src = src;\r\n    img.addEventListener('load', () => resolve({\r\n      width: img.naturalWidth,\r\n      height: img.naturalHeight,\r\n    }));\r\n    img.addEventListener('error', () =>\r\n      reject(new Error('Could not load image from src.')));\r\n  });\r\n}\r\n\r\nexport function clearChildren(node: Node) {\r\n  while(node.hasChildNodes())\r\n    node.removeChild(node.firstChild!);\r\n}\r\n\r\nexport function formatNumber(n: number, digits: number) {\r\n  return n.toString(10).padStart(digits, '0');\r\n}\r\n\r\nexport function formatTime(time: number) {\r\n  const absTime = Math.abs(time);\r\n  let result = `${\r\n    formatNumber(Math.floor(absTime / 6e4 % 60), 2)\r\n  }:${\r\n    formatNumber(Math.floor(absTime / 1e3 % 60), 2)\r\n  }`;\r\n  if(time < 36e5) return (time < 0 ? '-' : '') + result;\r\n  result = `${\r\n    formatNumber(Math.floor(absTime / 36e5 % 24), 2)\r\n  }:${result}`;\r\n  if(time < 864e5) return (time < 0 ? '-' : '') + result;\r\n  return `${\r\n    formatNumber(Math.floor(time / 864e5), 2)\r\n  }d ${result}`;\r\n}\r\n\r\nexport function formatDateTime(date: Date = new Date()) {\r\n  const yr = date.getFullYear();\r\n  const mo = date.getMonth();\r\n  const dy = date.getDate();\r\n  const hr = date.getHours();\r\n  const mi = date.getMinutes();\r\n  const se = date.getSeconds();\r\n  return `${\r\n    formatNumber(dy, 2)\r\n  }/${\r\n    formatNumber(mo + 1, 2)\r\n  }/${\r\n    formatNumber(yr, 4)\r\n  } ${\r\n    formatNumber(hr % 12 || 12, 2)\r\n  }:${\r\n    formatNumber(mi, 2)\r\n  }:${\r\n    formatNumber(se, 2)\r\n  } ${hr >= 12 ? 'PM' : 'AM'}`;\r\n}\r\n\r\nexport function getSeed(seed: any): number {\r\n  switch(typeof seed) {\r\n    case 'undefined':\r\n    case 'object':\r\n      if(seed == null)\r\n        seed = '';\r\n    default:\r\n      seed = seed.toString();\r\n    case 'string': {\r\n      let hash = 0;\r\n      for(let i = 0; i < seed.length; i++)\r\n        hash = Math.imul(31, hash) + seed.charCodeAt(i) | 0;\r\n      seed = hash;\r\n    }\r\n  }\r\n  return seed;\r\n}\r\n","import { JigsawGenerator } from './puzzle-generator';\r\nimport { registerDraggable, DraggingState } from './drag-handler';\r\nimport { formatTime, getUrl, getImageDimensions, clearChildren, NS_SVG } from './utils';\r\nimport { downloadDocument } from './xml-clone';\r\nimport { showCertificate, hideCetificate } from './certificate';\r\n\r\nconst pathIdMatcher = /^p-(\\d+)-(\\d+)/;\r\n\r\ninterface StoredData {\r\n  width: number;\r\n  height: number;\r\n  xCount: number;\r\n  yCount: number;\r\n  time: number;\r\n  startTime?: number;\r\n  endTime?: number;\r\n}\r\n\r\nexport class MainHandler {\r\n  document: Document;\r\n  root: SVGSVGElement;\r\n  defsElement: SVGDefsElement;\r\n  imageElement: SVGImageElement;\r\n  uiGroup: SVGGElement;\r\n  pathGroup: SVGGElement;\r\n  instanceGroup: SVGGElement;\r\n  timeDisp: SVGTextElement;\r\n  dataElement: SVGScriptElement;\r\n  menuGroup: SVGGElement;\r\n  menuForm: HTMLFormElement;\r\n  imageSelector: HTMLInputElement;\r\n  imagePreview: HTMLImageElement;\r\n  colSelector: HTMLInputElement;\r\n  rowSelector: HTMLInputElement;\r\n\r\n  imageUrl: string;\r\n  width: number = 1;\r\n  height: number = 1;\r\n  baseTime: number = 0;\r\n  theshold: number = 3;\r\n  time: number = 0;\r\n  startTime?: Date;\r\n  endTime?: Date;\r\n  resumeTime?: Date;\r\n  private _xc: number = 1;\r\n  private _yc: number = 1;\r\n  private timer?: number;\r\n\r\n  get xCount() {\r\n    return this._xc;\r\n  }\r\n  set xCount(value: number) {\r\n    this._xc = value;\r\n    this._yc = Math.round(value / this.width * this.height);\r\n  } \r\n\r\n  get yCount() {\r\n    return this._yc;\r\n  }\r\n  set yCount(value: number) {\r\n    this._yc = value;\r\n    this._xc = Math.round(value / this.height * this.width);\r\n  }\r\n\r\n  constructor(root: GlobalEventHandlers & ParentNode = document) {\r\n    root.querySelector('.noscript')?.classList.remove('noscript');\r\n    this.root = root.querySelector('svg')!;\r\n    this.document = root instanceof Document ? root : this.root.ownerDocument;\r\n    this.defsElement = root.querySelector('defs')!;\r\n    this.uiGroup = root.querySelector<SVGGElement>('g#ui')!;\r\n    this.pathGroup = root.querySelector<SVGGElement>('g#ps')!;\r\n    this.instanceGroup = root.querySelector<SVGGElement>('g#ins')!;\r\n    this.timeDisp = root.querySelector<SVGTextElement>('text#time')!;\r\n    this.dataElement = root.querySelector<SVGScriptElement>('script#data')!;\r\n    this.menuGroup = root.querySelector<SVGGElement>('#menu')!;\r\n    this.menuForm = root.querySelector<HTMLFormElement>('form#menuform')!;\r\n    this.menuForm.addEventListener('submit', this.onMenuSubmit.bind(this));\r\n    this.menuForm.addEventListener('reset', this.onMenuReset.bind(this));\r\n    this.imageSelector = this.menuForm.querySelector<HTMLInputElement>('input#image-input')!;\r\n    this.imageSelector.addEventListener('change', this.onImageSelected.bind(this));\r\n    this.colSelector = this.menuForm.querySelector<HTMLInputElement>('input#col-input')!;\r\n    const onColChange = this.onColChange.bind(this);\r\n    this.colSelector.addEventListener('change', onColChange);\r\n    this.colSelector.addEventListener('blur', onColChange);\r\n    this.rowSelector = this.menuForm.querySelector<HTMLInputElement>('input#row-input')!;\r\n    const onRowChange = this.onRowChange.bind(this);\r\n    this.rowSelector.addEventListener('change', onRowChange);\r\n    this.rowSelector.addEventListener('blur', onRowChange);\r\n    this.imagePreview = this.menuForm.querySelector<HTMLImageElement>('img#preview')!;\r\n    this.root.querySelector('#new-game')?.addEventListener('click', this.menu.bind(this));\r\n    this.root.querySelector('#save-game')?.addEventListener('click', this.save.bind(this));\r\n    this.imageElement = root.querySelector<SVGImageElement>('image#img')!;\r\n    this.imageUrl = this.imageElement.href.baseVal;\r\n    window.addEventListener('resize', this.onWindowResize.bind(this));\r\n    Object.assign(this, registerDraggable(\r\n      root, this.onDrag.bind(this), this.onDrop.bind(this),\r\n    ));\r\n    this.load();\r\n    this.onWindowResize();\r\n  }\r\n\r\n  async updateImage(src: string | Blob) {\r\n    if(src instanceof Blob)\r\n      src = await getUrl(src);\r\n    const { width, height } = await getImageDimensions(src);\r\n    this.imageUrl = src;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._xc = Math.round(width / 100);\r\n    this._yc = Math.round(height / 100);\r\n  }\r\n\r\n  calculateTheshold() {\r\n    this.theshold = Math.max(3, Math.sqrt((this.width / this._xc) ** 2 + (this.height / this._yc) ** 2) / 20);\r\n  }\r\n\r\n  init() {\r\n    clearChildren(this.pathGroup);\r\n    clearChildren(this.instanceGroup);\r\n    for(const oldMask of this.defsElement.querySelectorAll('mask.puzzle-mask'))\r\n      oldMask.remove();\r\n    hideCetificate();\r\n    this.time = 0;\r\n    this.baseTime = 0;\r\n    this.startTime = new Date();\r\n    this.calculateTheshold();\r\n    delete this.endTime;\r\n    delete this.resumeTime;\r\n    this.timeDisp.textContent = '--:--';\r\n    if(this.timer != null) {\r\n      clearInterval(this.timer);\r\n      delete this.timer;\r\n    }\r\n    const paths = new JigsawGenerator(\r\n      this.width, this.height,\r\n      this._xc, this._yc,\r\n      undefined, undefined, undefined,\r\n      10,\r\n    ).toSvgElements(this.document, this.pathGroup);\r\n    const viewWidth = Math.max(640, this.width * 1.5);\r\n    const viewHeight = Math.max(480, this.height * 1.5);\r\n    this.root.setAttribute('viewBox', `0 0 ${viewWidth} ${viewHeight}`);\r\n    this.imageElement.href.baseVal = this.imageUrl;\r\n    this.imageElement.setAttribute('width', this.width.toString());\r\n    this.imageElement.setAttribute('height', this.height.toString());\r\n    for(const path of paths) {\r\n      const mask = this.defsElement.appendChild(this.document.createElementNS(NS_SVG, 'mask'));\r\n      mask.id = `${path.id}-m`;\r\n      mask.classList.add('puzzle-mask');\r\n\r\n      const maskPath = mask.appendChild(this.document.createElementNS(NS_SVG, 'use'));\r\n      maskPath.href.baseVal = `#${path.id}`;\r\n      maskPath.setAttribute('fill', 'white');\r\n\r\n      const instance = this.instanceGroup.appendChild(this.document.createElementNS(NS_SVG, 'g'));\r\n      instance.id = `${path.id}-i`;\r\n      instance.classList.add('draggable');\r\n\r\n      const base = instance.appendChild(this.document.createElementNS(NS_SVG, 'use'));\r\n      base.href.baseVal = `#${this.imageElement.id}`;\r\n      base.setAttribute('mask', `url(#${mask.id})`);\r\n\r\n      const decoPath = instance.appendChild(this.document.createElementNS(NS_SVG, 'use'));\r\n      decoPath.classList.add('handler');\r\n      decoPath.href.baseVal = `#${path.id}`;\r\n      decoPath.setAttribute('stroke', 'black');\r\n      decoPath.setAttribute('fill', 'transparent');\r\n\r\n      const m = pathIdMatcher.exec(path.id);\r\n      if(m) {\r\n        const w = this.width / this._xc;\r\n        const h = this.height / this._yc;\r\n        instance.transform.baseVal.appendItem(this.root.createSVGTransform()).setTranslate(\r\n          Math.round(Math.random() * (viewWidth - w) - parseInt(m[1], 10) * w),\r\n          Math.round(Math.random() * (viewHeight - h) - parseInt(m[2], 10) * h),\r\n        );\r\n      }\r\n    }\r\n    this.onWindowResize();\r\n  }\r\n\r\n  private onDrag(element: SVGElement) {\r\n    element.classList.add('grabbing');\r\n    if(this.timer != null) return;\r\n    this.resumeTime = new Date();\r\n    this.timer = window.setInterval(this.updateTime.bind(this), 1000);\r\n    this.updateTime();\r\n  }\r\n\r\n  private onDrop(state: DraggingState) {\r\n    state.element.classList.remove('grabbing');\r\n    const { id } = state.target.parentNode as Element;\r\n    const m = pathIdMatcher.exec(id);\r\n    if(!m) return;\r\n    const x = parseInt(m[1], 10);\r\n    const y = parseInt(m[2], 10);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x + 1}-${y}-i`);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x - 1}-${y}-i`);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x}-${y + 1}-i`);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x}-${y - 1}-i`);\r\n    if(this.instanceGroup.childElementCount > 1)\r\n      return;\r\n    this.endTime = new Date();\r\n    if(this.timer != null) {\r\n      clearInterval(this.timer);\r\n      delete this.timer;\r\n    }\r\n    const lastElement = this.instanceGroup.querySelector<SVGGraphicsElement>('.draggable.group');\r\n    if(lastElement) {\r\n      lastElement.classList.remove('draggable');\r\n      lastElement.transform.baseVal.removeItem(0);\r\n    }\r\n    const viewWidth = Math.max(640, this.width + 20);\r\n    const viewHeight = Math.max(480, this.height + 40);\r\n    this.root.setAttribute('viewBox', `0 0 ${viewWidth} ${viewHeight}`);\r\n    this.onWindowResize();\r\n    showCertificate(this);\r\n  }\r\n\r\n  private checkAndMerge(current: SVGGraphicsElement, next: string) {\r\n    const other = this.instanceGroup.querySelector(next)?.closest<SVGGraphicsElement>('.draggable');\r\n    if(!other || this.isDragging(other) || other === current)\r\n      return current;\r\n    const t1 = current.transform.baseVal;\r\n    if(!t1.numberOfItems) return current;\r\n    const t2 = other.transform.baseVal;\r\n    if(!t2.numberOfItems) return current;\r\n    const m1 = t1.getItem(0).matrix;\r\n    const m2 = t2.getItem(0).matrix;\r\n    if(Math.sqrt((m1.e - m2.e) ** 2 + (m1.f - m2.f) ** 2) > this.theshold)\r\n      return current;\r\n    const currentIsGroup = current.classList.contains('group');\r\n    const otherIsGroup = other.classList.contains('group');\r\n    if(currentIsGroup) {\r\n      if(!otherIsGroup) {\r\n        other.classList.remove('draggable');\r\n        t2.removeItem(0);\r\n        current.appendChild(other);\r\n      } else if(other.childElementCount > current.childElementCount) {\r\n        for(const child of Array.from(current.childNodes))\r\n          other.appendChild(child);\r\n        current.remove();\r\n        return other;\r\n      } else {\r\n        for(const child of Array.from(other.childNodes))\r\n          current.appendChild(child);\r\n        other.remove();\r\n      }\r\n      return current;\r\n    }\r\n    if(otherIsGroup) {\r\n      current.classList.remove('draggable');\r\n      t1.removeItem(0);\r\n      other.appendChild(current);\r\n      return other;\r\n    }\r\n    const newGroup = current.parentNode!.appendChild(this.document.createElementNS(NS_SVG, 'g'));\r\n    newGroup.classList.add('draggable', 'group');\r\n    newGroup.appendChild(current);\r\n    current.classList.remove('draggable');\r\n    newGroup.appendChild(other);\r\n    other.classList.remove('draggable');\r\n    const t = t2.getItem(0);\r\n    t1.removeItem(0);\r\n    t2.removeItem(0);\r\n    newGroup.transform.baseVal.appendItem(t);\r\n    return newGroup;\r\n  }\r\n\r\n  private isDragging(element: SVGElement) {\r\n    return false;\r\n  }\r\n\r\n  private updateTime() {\r\n    this.time = Date.now() - this.resumeTime!.getTime() + this.baseTime;\r\n    this.timeDisp.textContent = formatTime(this.time);\r\n  }\r\n\r\n  private menu() {\r\n    this.menuGroup.classList.add('show');\r\n  }\r\n\r\n  private load() {\r\n    const data: StoredData | null = JSON.parse(this.dataElement.textContent || 'null');\r\n    if(data == null)\r\n      return;\r\n    this.width = data.width;\r\n    this.height = data.height;\r\n    this.baseTime = data.time;\r\n    this._xc = data.xCount;\r\n    this._yc = data.yCount;\r\n    if(data.startTime != null)\r\n      this.startTime = new Date(data.startTime);\r\n    if(data.endTime != null)\r\n      this.endTime = new Date(data.endTime);\r\n    this.calculateTheshold();\r\n  }\r\n\r\n  private save() {\r\n    if(this.resumeTime != null) this.updateTime();\r\n    this.dataElement.textContent = JSON.stringify({\r\n      width: this.width,\r\n      height: this.height,\r\n      xCount: this._xc,\r\n      yCount: this._yc,\r\n      startTime: this.startTime?.getTime(),\r\n      endTime: this.endTime?.getTime(),\r\n      time: this.time,\r\n    } as StoredData);\r\n    return downloadDocument(this.root, `puzzle-${Date.now()}.svg`, beforeSave);\r\n  }\r\n\r\n  private async onImageSelected() {\r\n    const { files } = this.imageSelector;\r\n    if(!files || !files.length) return;\r\n    const file = files.item(0)!;\r\n    await this.updateImage(file);\r\n    this.colSelector.valueAsNumber = this.xCount = Math.round(this.width / 100);\r\n    this.rowSelector.valueAsNumber = this.yCount;\r\n    if(this.imagePreview.src.startsWith('blob:'))\r\n      URL.revokeObjectURL(this.imagePreview.src);\r\n    this.imagePreview.src = URL.createObjectURL(file);\r\n  }\r\n\r\n  private onColChange() {\r\n    this.xCount = this.colSelector.valueAsNumber;\r\n    this.rowSelector.valueAsNumber = this.yCount;\r\n  }\r\n\r\n  private onRowChange() {\r\n    this.yCount = this.rowSelector.valueAsNumber;\r\n    this.colSelector.valueAsNumber = this.xCount;\r\n  }\r\n\r\n  private async onMenuSubmit(e: Event) {\r\n    e.preventDefault();\r\n    if(!this.imageUrl) return;\r\n    this.init();\r\n    this.menuForm.reset();\r\n  }\r\n\r\n  private onMenuReset() {\r\n    if(this.imagePreview.src.startsWith('blob:'))\r\n      URL.revokeObjectURL(this.imagePreview.src);\r\n    this.imagePreview.src = '';\r\n    this.menuGroup.classList.remove('show');\r\n  }\r\n\r\n  private onWindowResize() {\r\n    const viewBox = this.root.viewBox.baseVal;\r\n    const scale = Math.max(viewBox.width / window.innerWidth, viewBox.height / window.innerHeight);\r\n    this.uiGroup.transform.baseVal.getItem(0).setScale(scale, scale);\r\n  }\r\n}\r\n\r\nnew MainHandler();\r\n\r\nfunction beforeSave(root: Element) {\r\n  root.classList.add('noscript');\r\n  root.querySelector<SVGGElement>('g#ui')?.transform.baseVal.getItem(0)?.setScale(1, 1);\r\n}\r\n","import { NS_SVG, getSeed, round } from './utils';\r\n// Modified from https://gist.github.com/Draradech/35d36347312ca6d0887aa7d55f366e30\r\n// Changes: Outputs per-puzzle path instead of one for all.\r\n\r\ninterface Stroke {\r\n  points: number[];\r\n  inst: string[];\r\n}\r\n\r\nconst svgArgsCount: { [arg: string]: number; } = {\r\n  M: 2, m: 2,\r\n  L: 2, l: 2,\r\n  H: 1, h: 1,\r\n  V: 1, v: 1,\r\n  C: 6, c: 6,\r\n  S: 4, s: 4,\r\n  Q: 4, q: 4,\r\n  T: 2, t: 2,\r\n  A: 7, a: 7,\r\n  z: 0,\r\n};\r\n\r\nexport class JigsawGenerator {\r\n  cells: string[][];\r\n\r\n  private strokes = new Map<number, Stroke[]>();\r\n  private a: number = 0;\r\n  private b: number = 0;\r\n  private c: number = 0;\r\n  private d: number = 0;\r\n  private e: number = 0;\r\n  private flip: boolean = false;\r\n  private xi: number;\r\n  private yi: number;\r\n  private vertical: boolean;\r\n  private get sl() { return this.vertical ? this.height / this.yCount : this.width / this.xCount; }\r\n  private get sw() { return this.vertical ? this.width / this.xCount : this.height / this.yCount; }\r\n  private get ol() { return this.sl * (this.vertical ? this.yi : this.xi); }\r\n  private get ow() { return this.sw * (this.vertical ? this.xi : this.yi); }\r\n\r\n  constructor(\r\n    public width: number,\r\n    public height: number,\r\n    public xCount: number,\r\n    public yCount: number,\r\n    public seed?: any,\r\n    public tabSize: number = 0.1,\r\n    public jitter: number = 0.04,\r\n    public radius: number = 0,\r\n  ) {\r\n    this.seed = getSeed(seed ?? Math.trunc(Math.random() * Number.MAX_SAFE_INTEGER));\r\n    this.radius = Math.min(this.radius, this.sl, this.sw);\r\n\r\n    this.vertical = false;\r\n    for(this.yi = 1; this.yi < this.yCount; this.yi++) {\r\n      this.first();\r\n      for(this.xi = 0; this.xi < this.xCount; this.xi++) {\r\n        this.next();\r\n        this.pushStroke(this.xi + this.xCount * (this.yi - 1), this.generateStroke(true));\r\n        this.pushStroke(this.xi + this.xCount * this.yi, this.generateStroke());\r\n      }\r\n    }\r\n\r\n    this.vertical = true;\r\n    for(this.xi = 1; this.xi < this.xCount; this.xi++) {\r\n      this.first();\r\n      for(this.yi = 0; this.yi < this.yCount; this.yi++) {\r\n        this.next();\r\n        this.pushStroke(this.xi - 1 + this.xCount * this.yi, this.generateStroke());\r\n        this.pushStroke(this.xi + this.xCount * this.yi, this.generateStroke(true));\r\n      }\r\n    }\r\n\r\n    this.vertical = false;\r\n    this.pushStroke(0, {\r\n      points: [\r\n        0, round(this.sw, 3),\r\n        0, this.radius,\r\n        this.radius, this.radius, 0, 0, 1,\r\n        this.radius, 0,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.vertical = true;\r\n    this.pushStroke(this.xCount - 1, {\r\n      points: [\r\n        round(this.width - this.sw), 0,\r\n        this.width - this.radius, 0,\r\n        this.radius, this.radius, 0, 0, 1,\r\n        this.width, this.radius,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.vertical = false;\r\n    this.pushStroke(this.xCount * this.yCount - 1, {\r\n      points: [\r\n        this.width, round(this.height - this.sw, 3),\r\n        this.width, this.height - this.radius,\r\n        this.radius, this.radius, 0, 0, 1,\r\n        this.width - this.radius, this.height,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.vertical = true;\r\n    this.pushStroke(this.xCount * (this.yCount - 1), {\r\n      points: [\r\n        round(this.sw, 3), this.height,\r\n        this.radius, this.height,\r\n        this.radius, this.radius, 0, 0, 1, 0,\r\n        this.height - this.radius,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.cells = [];\r\n    for(const [i, stroke] of this.strokes) {\r\n      const y = Math.trunc(i / this.xCount);\r\n      (this.cells[y] ?? (this.cells[y] = []))[i % this.xCount] = this.getNormalizedStroke(stroke);\r\n    }\r\n\r\n    this.strokes.clear();\r\n  }\r\n\r\n  toSvgElements(document: Document, parent?: SVGElement) {\r\n    const result: SVGPathElement[] = [];\r\n    for(let y = 0; y < this.cells.length; y++) {\r\n      const row = this.cells[y];\r\n      for(let x = 0; x < row.length; x++) {\r\n        const elm = document.createElementNS(NS_SVG, 'path');\r\n        elm.setAttribute('d', row[x]);\r\n        elm.id = `p-${x}-${y}`;\r\n        result.push(elm);\r\n        parent?.appendChild(elm);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private generateStroke(reverse?: boolean): Stroke {\r\n    const { a, b, c, d, e, tabSize } = this;\r\n    const p0l = this.l(0);\r\n    const p0w = this.w(0);\r\n    const p1l = this.l(0.2);\r\n    const p1w = this.w(a);\r\n    const p2l = this.l(0.5 + b + d);\r\n    const p2w = this.w(-tabSize + c);\r\n    const p3l = this.l(0.5 - tabSize + b);\r\n    const p3w = this.w(tabSize + c);\r\n    const p4l = this.l(0.5 - 2 * tabSize + b - d);\r\n    const p4w = this.w(3 * tabSize + c);\r\n    const p5l = this.l(0.5 + 2 * tabSize + b - d);\r\n    const p5w = this.w(3 * tabSize + c);\r\n    const p6l = this.l(0.5 + tabSize + b);\r\n    const p6w = this.w(tabSize + c);\r\n    const p7l = this.l(0.5 + b + d);\r\n    const p7w = this.w(-tabSize + c);\r\n    const p8l = this.l(0.8);\r\n    const p8w = this.w(e);\r\n    const p9l = this.l(1);\r\n    const p9w = this.w(0);\r\n    return {\r\n      points: this.vertical ? reverse ? [\r\n        p9w, p9l, p8w, p8l, p7w, p7l, p6w, p6l,\r\n        p5w, p5l, p4w, p4l, p3w, p3l, p2w, p2l,\r\n        p1w, p1l, p0w, p0l,\r\n      ] : [\r\n        p0w, p0l, p1w, p1l, p2w, p2l, p3w, p3l,\r\n        p4w, p4l, p5w, p5l, p6w, p6l, p7w, p7l,\r\n        p8w, p8l, p9w, p9l,\r\n      ] : reverse ? [\r\n        p9l, p9w, p8l, p8w, p7l, p7w, p6l, p6w,\r\n        p5l, p5w, p4l, p4w, p3l, p3w, p2l, p2w,\r\n        p1l, p1w, p0l, p0w,\r\n      ] : [\r\n        p0l, p0w, p1l, p1w, p2l, p2w, p3l, p3w,\r\n        p4l, p4w, p5l, p5w, p6l, p6w, p7l, p7w,\r\n        p8l, p8w, p9l, p9w,\r\n      ],\r\n      inst: ['M', 'C', 'C', 'C'],\r\n    };\r\n  }\r\n\r\n  private random() {\r\n    const x = Math.sin(this.seed++) * 10000;\r\n    return x - Math.floor(x);\r\n  }\r\n\r\n  private nextJitter() {\r\n    return this.random() * this.jitter * 2 - this.jitter;\r\n  }\r\n\r\n  private first() {\r\n    this.e = this.nextJitter();\r\n  }\r\n\r\n  private next() {\r\n    const filp = this.flip;\r\n    this.flip = this.random() >= 0.5;\r\n    this.a = (this.flip === filp ? -this.e : this.e);\r\n    this.b = this.nextJitter();\r\n    this.c = this.nextJitter();\r\n    this.d = this.nextJitter();\r\n    this.e = this.nextJitter();\r\n  }\r\n\r\n  private l(v: number) {\r\n    return round(this.ol + this.sl * v, 3);\r\n  }\r\n\r\n  private w(v: number) {\r\n    return round(this.ow + this.sw * v * (this.flip ? -1 : 1), 3);\r\n  }\r\n\r\n  private pushStroke(i: number, stroke: Stroke) {\r\n    const strokes = this.strokes.get(i);\r\n    if(strokes)\r\n      strokes.push(stroke);\r\n    else\r\n      this.strokes.set(i, [stroke]);\r\n  }\r\n\r\n  private getNormalizedStroke(strokes: Stroke[]) {\r\n    if(strokes == null || !strokes.length)\r\n      return '';\r\n    if(strokes.length > 1) {\r\n      const strokeSet = new Set(strokes);\r\n      const result: Stroke = { points: [], inst: [] };\r\n      while(strokeSet.size) {\r\n        let found = false;\r\n        for(const other of strokeSet)\r\n          if(!result.points.length) {\r\n            result.points = other.points;\r\n            result.inst = other.inst;\r\n            found = true;\r\n            strokeSet.delete(other);\r\n            break;\r\n          } else if(\r\n            Math.abs(result.points[0] - other.points[other.points.length - 2]) < 1 &&\r\n            Math.abs(result.points[1] - other.points[other.points.length - 1]) < 1\r\n          ) {\r\n            result.points.splice(0, 2, ...other.points);\r\n            result.inst.splice(0, 1, ...other.inst);\r\n            found = true;\r\n            strokeSet.delete(other);\r\n            break;\r\n          } else if(\r\n            Math.abs(other.points[0] - result.points[result.points.length - 2]) < 1 &&\r\n            Math.abs(other.points[1] - result.points[result.points.length - 1]) < 1\r\n          ) {\r\n            other.points.splice(0, 2, ...result.points);\r\n            other.inst.splice(0, 1, ...result.inst);\r\n            result.points = other.points;\r\n            result.inst = other.inst;\r\n            found = true;\r\n            strokeSet.delete(other);\r\n            break;\r\n          }\r\n        if(!found)\r\n          break;\r\n      }\r\n      strokes = [result];\r\n    }\r\n    const { points, inst } = strokes[0];\r\n    let j = 0;\r\n    let result = '';\r\n    for(const i of inst) {\r\n      result += i;\r\n      const c = svgArgsCount[i];\r\n      if(c) result += points.slice(j, j += c).join(' ');\r\n    }\r\n    return result + 'z';\r\n  }\r\n}\r\n","export interface DraggingState {\r\n  target: SVGGraphicsElement;\r\n  element: SVGGraphicsElement;\r\n  identifier?: number;\r\n  transform: SVGTransform;\r\n  offsetX: number;\r\n  offsetY: number;\r\n}\r\n\r\nexport function registerDraggable(\r\n  root: GlobalEventHandlers = document,\r\n  onDrag?: (element: SVGElement) => void,\r\n  onDrop?: (state: DraggingState) => void,\r\n  draggableClass = '.draggable', handlerClass = '.handler',\r\n) {\r\n  const draggingElements = new Map<SVGElement, DraggingState>();\r\n  const states = new Map<number | undefined, DraggingState>();\r\n\r\n  root.addEventListener('mousedown', onMouseStartDrag, true);\r\n  root.addEventListener('mousemove', onMouseDragging);\r\n  root.addEventListener('mouseup', onMouseEndDrag);\r\n  root.addEventListener('mouseleave', onMouseEndDrag);\r\n  root.addEventListener('touchstart', onTouchStartDrag, { capture: true, passive: false });\r\n  root.addEventListener('touchmove', onTouchDragging, { passive: false });\r\n  root.addEventListener('touchend', onTouchEndDrag, { passive: false });\r\n  root.addEventListener('touchcancel', onTouchEndDrag, { passive: false });\r\n\r\n  function getState(e: MouseEvent | Touch) {\r\n    const state = states.get((e as Touch).identifier);\r\n    return state && (state.identifier == null) === (e instanceof MouseEvent) ? state : null;\r\n  }\r\n\r\n  function onMouseStartDrag(e: MouseEvent) {\r\n    if(e.button !== 0) return;\r\n    const target = (e.target as Element)?.closest?.(`${draggableClass} ${handlerClass}, ${draggableClass}${handlerClass}`);\r\n    if(!(target instanceof SVGGraphicsElement)) return;\r\n    handleStartDrag(target, e, undefined);\r\n    interceptEvent(e);\r\n  }\r\n\r\n  function onTouchStartDrag(e: TouchEvent) {\r\n    const target = (e.target as Element)?.closest?.(`${draggableClass} ${handlerClass}, ${draggableClass}${handlerClass}`);\r\n    if(!(target instanceof SVGGraphicsElement)) return;\r\n    const root = target.ownerSVGElement!;\r\n    let pointer: Touch | undefined;\r\n    let identifier: number | undefined;\r\n    const { targetTouches } = e as TouchEvent;\r\n    let srcElement: Element | null | undefined = target;\r\n    const ctm = (target.parentNode as SVGGraphicsElement)?.getScreenCTM?.()?.inverse();\r\n    while(srcElement) {\r\n      if(srcElement instanceof SVGUseElement) {\r\n        srcElement = srcElement.instanceRoot?.correspondingElement;\r\n        continue;\r\n      } if(srcElement instanceof SVGGeometryElement) {\r\n        for(let i = 0; i < targetTouches.length; i++) {\r\n          const touch = targetTouches[i];\r\n          const lp = getLocalPoint(root, touch, ctm);\r\n          if(srcElement.isPointInFill(lp) || srcElement.isPointInStroke(lp)) {\r\n            identifier = touch.identifier;\r\n            pointer = touch;\r\n            break;\r\n          }\r\n        }\r\n      } else if(srcElement instanceof SVGGraphicsElement) {\r\n        const bbox = target.getBBox();\r\n        for(let i = 0; i < targetTouches.length; i++) {\r\n          const touch = targetTouches[i];\r\n          const lp = getLocalPoint(root, touch, ctm);\r\n          if(bbox.left <= lp.x && bbox.right > lp.x &&\r\n            bbox.top <= lp.y && bbox.bottom > lp.y) {\r\n            identifier = touch.identifier;\r\n            pointer = touch;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    if(!pointer) return;\r\n    handleStartDrag(target, pointer, identifier);\r\n    interceptEvent(e);\r\n  }\r\n\r\n  function handleStartDrag(target: SVGGraphicsElement, pointer: MouseEvent | Touch, identifier: number | undefined) {\r\n    const root = target.ownerSVGElement!;\r\n    const element = target.matches(draggableClass) ? target : target?.closest<SVGGraphicsElement>(draggableClass) as SVGGraphicsElement;\r\n    if(draggingElements.has(element)) return;\r\n    const transforms = element.transform.baseVal;\r\n    if(!transforms.numberOfItems || transforms.getItem(0).type !== SVGTransform.SVG_TRANSFORM_TRANSLATE) {\r\n      const transform = root.createSVGTransform();\r\n      transform.setTranslate(0, 0);\r\n      transforms.insertItemBefore(transform, 0);\r\n    }\r\n    const transform = transforms.getItem(0);\r\n    const offset = getLocalPoint(\r\n      root, pointer, element.parentNode! as SVGGraphicsElement,\r\n    ).matrixTransform(transform.matrix.inverse());\r\n    const state: DraggingState = {\r\n      element, target, identifier, transform,\r\n      offsetX: offset.x,\r\n      offsetY: offset.y,\r\n    };\r\n    draggingElements.set(element, state);\r\n    states.set(identifier, state);\r\n    element.parentNode?.appendChild(element);\r\n    onDrag?.(element);\r\n  }\r\n\r\n  function onMouseDragging(e: MouseEvent) {\r\n    if(states.size && e.button === 0 && handleDrag(e))\r\n      interceptEvent(e); \r\n  }\r\n\r\n  function onTouchDragging(e: TouchEvent) {\r\n    if(states.size &&\r\n      e.changedTouches.length &&\r\n      Array.prototype.map.call(e.changedTouches, handleDrag).includes(true))\r\n      interceptEvent(e);\r\n  }\r\n  \r\n  function handleDrag(e: MouseEvent | Touch) {\r\n    const state = getState(e);\r\n    if(!state) return false;\r\n    const coord = getLocalPoint(\r\n      state.element.ownerSVGElement!, e,\r\n      state.element.parentNode! as SVGGraphicsElement,\r\n    );\r\n    if(!coord) return false;\r\n    state.transform.setTranslate(\r\n      coord.x - state.offsetX,\r\n      coord.y - state.offsetY,\r\n    );\r\n    return true;\r\n  }\r\n\r\n  function onMouseEndDrag(e: MouseEvent) {\r\n    if(states.size && handleEndDrag(e))\r\n      interceptEvent(e);\r\n  }\r\n\r\n  function onTouchEndDrag(e: TouchEvent) {\r\n    if(states.size &&\r\n      e.changedTouches.length &&\r\n      Array.prototype.map.call(e.changedTouches, handleEndDrag).includes(true))\r\n      interceptEvent(e);\r\n  }\r\n  \r\n  function handleEndDrag(e: MouseEvent | Touch) {\r\n    const state = getState(e);\r\n    if(!state) return false;\r\n    draggingElements.delete(state.element);\r\n    states.delete(state.identifier);\r\n    onDrop?.(state);\r\n    return true;\r\n  }\r\n\r\n  return {\r\n    isDragging(element: SVGElement) {\r\n      return draggingElements.has(element);\r\n    },\r\n  };\r\n}\r\n\r\nfunction getLocalPoint(\r\n  root: SVGSVGElement,\r\n  pointer: MouseEvent | Touch,\r\n  base?: DOMMatrix | SVGGraphicsElement | null,\r\n) {\r\n  const p = root.createSVGPoint();\r\n  p.x = pointer.clientX;\r\n  p.y = pointer.clientY;\r\n  return base != null ? p.matrixTransform(\r\n    base instanceof SVGGraphicsElement ?\r\n    base.getScreenCTM()!.inverse() :\r\n    base,\r\n  ) : p;\r\n}\r\n\r\nfunction interceptEvent(e: Event) {\r\n  if(e.cancelable && !e.defaultPrevented)\r\n    e.preventDefault();\r\n  e.stopPropagation();\r\n}","import { NS_SVG, NS_XHTML } from './utils';\r\n\r\nexport async function downloadDocument(src: Element, name: string, treatments?: (root: Element, document: Document) => (void | Promise<void>)) {\r\n  const document = src.ownerDocument;\r\n  const root = document.implementation.createDocument(NS_SVG, 'svg', null);\r\n  const clone = root.importNode(src, true);\r\n  root.replaceChild(clone, root.firstChild!);\r\n  await Promise.all(Array.prototype.map.call(clone.querySelectorAll('script'), resolveScript));\r\n  await treatments?.(clone, root);\r\n  const blob = new Blob([new XMLSerializer().serializeToString(root)], { type: 'image/svg+xml' });\r\n  const element = document.createElementNS(NS_XHTML, 'a') as HTMLAnchorElement;\r\n  element.href = URL.createObjectURL(blob);\r\n  element.download = name;\r\n  element.click();\r\n  URL.revokeObjectURL(element.href);\r\n}\r\n\r\nasync function resolveScript(script: Element) {\r\n  if(script instanceof HTMLScriptElement) {\r\n    const { src } = script;\r\n    if(!src) return;\r\n    script.removeAttribute('src');\r\n    script.textContent = await (await fetch(src)).text();\r\n  } else if(script instanceof SVGScriptElement) {\r\n    const href = script.href.baseVal;\r\n    if(!href) return;\r\n    script.removeAttribute('href');\r\n    script.appendChild(script.ownerDocument.createCDATASection(await (await fetch(href)).text()));\r\n  }\r\n}","import { MainHandler } from '.';\r\nimport { formatTime, formatDateTime } from './utils';\r\n\r\nconst certificate = document.querySelector('#certificate')!;\r\nconst timeStartElement = certificate.querySelector<SVGTextElement>('text#time-start')!;\r\nconst timeEndElement = certificate.querySelector<SVGTextElement>('text#time-end')!;\r\nconst timeUsedElement = certificate.querySelector<SVGTextElement>('text#time-used')!;\r\nconst puzzleSizeElement = certificate.querySelector<SVGTextElement>('text#puzzle-size')!;\r\n\r\nexport function showCertificate(mainHandler: MainHandler) {\r\n  certificate.classList.add('show');\r\n  certificate.setAttribute('visibility', 'visible');\r\n  certificate.setAttribute('pointer-events', 'visible');\r\n  timeStartElement.textContent = formatDateTime(mainHandler.startTime);\r\n  timeEndElement.textContent = formatDateTime(mainHandler.endTime);\r\n  timeUsedElement.textContent = formatTime(mainHandler.time);\r\n  puzzleSizeElement.textContent = `${mainHandler.xCount}×${mainHandler.yCount} (${mainHandler.xCount * mainHandler.yCount} Pieces)`;\r\n}\r\n\r\nexport function hideCetificate() {\r\n  certificate.classList.remove('show');\r\n  timeStartElement.textContent = '';\r\n  timeEndElement.textContent = '';\r\n  timeUsedElement.textContent = '';\r\n  puzzleSizeElement.textContent = '';\r\n}"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.ts","webpack:///./src/index.ts","webpack:///./src/puzzle-generator.ts","webpack:///./src/drag-handler.ts","webpack:///./src/xml-clone.ts","webpack:///./src/certificate.ts","webpack:///./src/dropzone.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","NS_SVG","NS_XHTML","round","Math","Number","EPSILON","getUrl","blob","Promise","resolve","reject","reader","FileReader","readAsDataURL","addEventListener","result","Error","getImageDimensions","src","img","Image","width","naturalWidth","height","naturalHeight","clearChildren","node","textContent","hasChildNodes","removeChild","firstChild","formatNumber","digits","toString","padStart","formatTime","time","absTime","abs","floor","formatDateTime","date","Date","yr","getFullYear","mo","getMonth","dy","getDate","hr","getHours","mi","getMinutes","se","getSeconds","getSeed","seed","hash","length","imul","charCodeAt","transferChildren","dest","childElementCount","frag","ownerDocument","createDocumentFragment","Array","from","childNodes","forEach","appendChild","interceptEvent","e","cancelable","defaultPrevented","preventDefault","stopPropagation","toPromise","thisArg","args","pathIdMatcher","MainHandler","root","document","baseTime","theshold","_xc","_yc","querySelector","classList","remove","this","registerDropZone","Document","masksElement","uiGroup","pathGroup","instanceGroup","timeDisp","dataElement","menuGroup","menuForm","onMenuSubmit","onMenuReset","onPaste","onDragDrop","imageSelector","onImageSelected","colSelector","onColChange","rowSelector","onRowChange","sizeCountDisplay","fixedPatternCheckbox","imagePreview","submitButton","menu","save","imageElement","window","onWindowResize","assign","registerDraggable","onDrag","onDrop","load","isFinite","blobOrSrc","Blob","imageUrl","xCount","valueAsNumber","yCount","onSizeChange","startsWith","URL","revokeObjectURL","createObjectURL","disabled","max","sqrt","hideCetificate","unitSize","startTime","calculateTheshold","endTime","resumeTime","timer","clearInterval","paths","JigsawGenerator","radius","min","fixedPattern","checked","toSvgElements","viewWidth","viewHeight","setAttribute","href","baseVal","defs","path","mask","createElementNS","id","maskPath","instance","add","base","decoPath","exec","w","h","transform","appendItem","createSVGTransform","setTranslate","random","parseInt","serializeToData","element","setInterval","updateTime","state","target","parentNode","x","y","checkAndMerge","lastElement","removeItem","showCertificate","current","next","other","closest","isDragging","t1","numberOfItems","t2","m1","getItem","matrix","m2","f","currentIsGroup","contains","otherIsGroup","newGroup","now","getTime","data","JSON","parse","stringify","downloadDocument","beforeSave","files","file","item","updateImage","init","reset","innerWidth","innerHeight","viewBox","viewRatio","windowRatio","scale","devicePixelRatio","setScale","clipboardData","dataTransfer","loaded","items","kind","type","getAsFile","row","getAsString","split","fetch","svgArgsCount","M","L","H","V","v","C","S","Q","q","T","A","a","z","options","strokes","Map","b","flip","tabSize","jitter","trunc","MAX_SAFE_INTEGER","sl","sw","vertical","yi","first","xi","pushStroke","generateStroke","points","inst","cells","stroke","getNormalizedStroke","clear","parent","fragment","elm","push","reverse","p0l","p0w","p1l","p1w","p2l","p2w","p3l","p3w","p4l","p4w","p5l","p5w","p6l","p6w","p7l","p7w","p8l","p8w","p9l","p9w","sin","nextJitter","filp","ol","ow","set","strokeSet","Set","size","found","delete","splice","j","slice","join","draggableClass","handlerClass","draggingElements","states","onMouseStartDrag","onMouseDragging","onMouseEndDrag","onTouchStartDrag","capture","passive","onTouchDragging","onTouchEndDrag","getState","identifier","MouseEvent","getHandlerTarget","Element","SVGGraphicsElement","button","handleStartDrag","ctrlKey","shiftKey","pointer","targetTouches","forceBringToFront","ownerSVGElement","matches","has","transforms","SVGTransform","SVG_TRANSFORM_TRANSLATE","insertItemBefore","offset","getLocalPoint","matrixTransform","inverse","offsetX","offsetY","nextSibling","bringToFrontAfter","handleDrag","changedTouches","map","includes","coord","handleEndDrag","createSVGPoint","clientX","clientY","getScreenCTM","async","treatments","implementation","createDocument","clone","importNode","replaceChild","all","querySelectorAll","resolveScript","XMLSerializer","serializeToString","download","click","script","HTMLScriptElement","removeAttribute","text","SVGScriptElement","createCDATASection","certificate","timeStartElement","timeEndElement","timeUsedElement","puzzleSizeElement","mainHandler","dropCallback","dragEnterCallback","dragOverCallback","dragLeaveCallback","dragOverFallbackHandler","defaultDragOverHandler","wrapDragEvent","callback","dropEffect"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const NS_SVG = 'http://www.w3.org/2000/svg';\r\nexport const NS_XHTML = 'http://www.w3.org/1999/xhtml';\r\n\r\nexport function round(n: number, c = 0) {\r\n  c = 10 ** c;\r\n  return Math.round((n + Number.EPSILON) * c) / c;\r\n}\r\n\r\nexport function getUrl(blob: Blob) {\r\n  return new Promise<string>((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(blob);\r\n    reader.addEventListener('loadend', () =>\r\n      resolve(reader.result as string));\r\n    reader.addEventListener('error', () =>\r\n      reject(new Error('Unable to get URL from blob.')));\r\n  });\r\n}\r\n\r\nexport function getImageDimensions(src: string) {\r\n  return new Promise<{ width: number; height: number; }>((resolve, reject) => {\r\n    const img = new Image();\r\n    img.src = src;\r\n    img.addEventListener('load', () => resolve({\r\n      width: img.naturalWidth,\r\n      height: img.naturalHeight,\r\n    }));\r\n    img.addEventListener('error', () =>\r\n      reject(new Error('Could not load image from src.')));\r\n  });\r\n}\r\n\r\nexport function clearChildren(node: Node) {\r\n  node.textContent = '';\r\n  while(node.hasChildNodes())\r\n    node.removeChild(node.firstChild!);\r\n}\r\n\r\nexport function formatNumber(n: number, digits: number) {\r\n  return n.toString(10).padStart(digits, '0');\r\n}\r\n\r\nexport function formatTime(time: number) {\r\n  const absTime = Math.abs(time);\r\n  let result = `${\r\n    formatNumber(Math.floor(absTime / 6e4 % 60), 2)\r\n  }:${\r\n    formatNumber(Math.floor(absTime / 1e3 % 60), 2)\r\n  }`;\r\n  if(time < 36e5) return (time < 0 ? '-' : '') + result;\r\n  result = `${\r\n    formatNumber(Math.floor(absTime / 36e5 % 24), 2)\r\n  }:${result}`;\r\n  if(time < 864e5) return (time < 0 ? '-' : '') + result;\r\n  return `${\r\n    formatNumber(Math.floor(time / 864e5), 2)\r\n  }d ${result}`;\r\n}\r\n\r\nexport function formatDateTime(date: Date = new Date()) {\r\n  const yr = date.getFullYear();\r\n  const mo = date.getMonth();\r\n  const dy = date.getDate();\r\n  const hr = date.getHours();\r\n  const mi = date.getMinutes();\r\n  const se = date.getSeconds();\r\n  return `${\r\n    formatNumber(dy, 2)\r\n  }/${\r\n    formatNumber(mo + 1, 2)\r\n  }/${\r\n    formatNumber(yr, 4)\r\n  } ${\r\n    formatNumber(hr % 12 || 12, 2)\r\n  }:${\r\n    formatNumber(mi, 2)\r\n  }:${\r\n    formatNumber(se, 2)\r\n  } ${hr >= 12 ? 'PM' : 'AM'}`;\r\n}\r\n\r\nexport function getSeed(seed: any): number {\r\n  switch(typeof seed) {\r\n    case 'undefined':\r\n    case 'object':\r\n      if(seed == null)\r\n        seed = '';\r\n    default:\r\n      seed = seed.toString();\r\n    case 'string': {\r\n      let hash = 0;\r\n      for(let i = 0; i < seed.length; i++)\r\n        hash = Math.imul(31, hash) + seed.charCodeAt(i) | 0;\r\n      seed = hash;\r\n    }\r\n  }\r\n  return seed;\r\n}\r\n\r\nexport function transferChildren(src: Element, dest: Element) {\r\n  if(!src.childElementCount) return;\r\n  const frag = src.ownerDocument.createDocumentFragment();\r\n  Array.from(src.childNodes).forEach(frag.appendChild, frag);\r\n  dest.appendChild(frag);\r\n}\r\n\r\nexport function interceptEvent(e: Event) {\r\n  if(e.cancelable && !e.defaultPrevented)\r\n    e.preventDefault();\r\n  e.stopPropagation();\r\n}\r\n\r\nexport function toPromise<S, T>(thisArg: S, src: (this: S, callback: (result: T) => void) => void): Promise<T>;\r\nexport function toPromise(thisArg: any, src: (...args: any[]) => void, ...args: any[]): Promise<any>;\r\nexport function toPromise(thisArg: any, src: (...args: any[]) => void, ...args: any[]) {\r\n  return new Promise(resolve => src.call(thisArg, ...args, resolve));\r\n}\r\n","import { JigsawGenerator } from './puzzle-generator';\r\nimport { registerDraggable, DraggingState } from './drag-handler';\r\nimport { formatTime, getUrl, getImageDimensions, clearChildren, NS_SVG, toPromise, interceptEvent, transferChildren } from './utils';\r\nimport { downloadDocument } from './xml-clone';\r\nimport { showCertificate, hideCetificate } from './certificate';\r\nimport { registerDropZone } from './dropzone';\r\n\r\nconst pathIdMatcher = /^p-(\\d+)-(\\d+)/;\r\n\r\ninterface StoredData {\r\n  width: number;\r\n  height: number;\r\n  xCount: number;\r\n  yCount: number;\r\n  time: number;\r\n  startTime?: number;\r\n  endTime?: number;\r\n}\r\n\r\nexport class MainHandler {\r\n  document: Document;\r\n  root: SVGSVGElement;\r\n  masksElement: SVGGElement;\r\n  imageElement: SVGImageElement;\r\n  uiGroup: SVGGElement;\r\n  pathGroup: SVGGElement;\r\n  instanceGroup: SVGGElement;\r\n  timeDisp: SVGTextElement;\r\n  dataElement: SVGScriptElement;\r\n  menuGroup: SVGGElement;\r\n  menuForm: HTMLFormElement;\r\n  imageSelector: HTMLInputElement;\r\n  imagePreview: HTMLImageElement;\r\n  colSelector: HTMLInputElement;\r\n  rowSelector: HTMLInputElement;\r\n  submitButton: HTMLButtonElement;\r\n  fixedPatternCheckbox: HTMLInputElement;\r\n  sizeCountDisplay: HTMLSpanElement;\r\n\r\n  imageUrl?: string;\r\n  width: number = 1;\r\n  height: number = 1;\r\n  baseTime: number = 0;\r\n  theshold: number = 3;\r\n  time: number = 0;\r\n  startTime?: Date;\r\n  endTime?: Date;\r\n  resumeTime?: Date;\r\n  private _xc: number = 2;\r\n  private _yc: number = 2;\r\n  private timer?: number;\r\n\r\n  get xCount() {\r\n    return this._xc;\r\n  }\r\n  set xCount(value: number) {\r\n    this._xc = value;\r\n    this._yc = Math.round(value / this.width * this.height);\r\n    if(this._yc < 2 || !Number.isFinite(this._yc)) {\r\n      this._xc = Math.round(2 / this.height * this.width);\r\n      this._yc = 2;\r\n    }\r\n  } \r\n\r\n  get yCount() {\r\n    return this._yc;\r\n  }\r\n  set yCount(value: number) {\r\n    this._yc = value;\r\n    this._xc = Math.round(value / this.height * this.width);\r\n    if(this._xc < 2 || !Number.isFinite(this._xc)) {\r\n      this._xc = 2;\r\n      this._yc = Math.round(2 / this.width * this.height);\r\n    }\r\n  }\r\n\r\n  constructor(root: GlobalEventHandlers & ParentNode = document) {\r\n    root.querySelector('.noscript')?.classList.remove('noscript');\r\n    this.root = root.querySelector('svg')!;\r\n    registerDropZone(this.root);\r\n    this.document = root instanceof Document ? root : this.root.ownerDocument;\r\n    this.masksElement = root.querySelector<SVGGElement>('g#ms')!;\r\n    this.uiGroup = root.querySelector<SVGGElement>('g#ui')!;\r\n    this.pathGroup = root.querySelector<SVGGElement>('g#ps')!;\r\n    this.instanceGroup = root.querySelector<SVGGElement>('g#ins')!;\r\n    this.timeDisp = root.querySelector<SVGTextElement>('text#time')!;\r\n    this.dataElement = root.querySelector<SVGScriptElement>('script#data')!;\r\n    this.menuGroup = root.querySelector<SVGGElement>('#menu')!;\r\n    this.menuForm = root.querySelector<HTMLFormElement>('form#menuform')!;\r\n    this.menuForm.addEventListener('submit', this.onMenuSubmit.bind(this));\r\n    this.menuForm.addEventListener('reset', this.onMenuReset.bind(this));\r\n    this.root.addEventListener('paste', this.onPaste.bind(this), true);\r\n    registerDropZone(this.root.querySelector<SVGElement>('#menu')!, this.onDragDrop.bind(this));\r\n    this.imageSelector = this.menuForm.querySelector<HTMLInputElement>('input#image-input')!;\r\n    this.imageSelector.addEventListener('change', this.onImageSelected.bind(this));\r\n    this.colSelector = this.menuForm.querySelector<HTMLInputElement>('input#col-input')!;\r\n    const onColChange = this.onColChange.bind(this);\r\n    this.colSelector.addEventListener('change', onColChange);\r\n    this.colSelector.addEventListener('blur', onColChange);\r\n    this.rowSelector = this.menuForm.querySelector<HTMLInputElement>('input#row-input')!;\r\n    const onRowChange = this.onRowChange.bind(this);\r\n    this.rowSelector.addEventListener('change', onRowChange);\r\n    this.rowSelector.addEventListener('blur', onRowChange);\r\n    this.sizeCountDisplay = this.menuForm.querySelector<HTMLSpanElement>('#size-count')!;\r\n    this.fixedPatternCheckbox = this.menuForm.querySelector<HTMLInputElement>('input#fixed-pattern')!;\r\n    this.imagePreview = this.menuForm.querySelector<HTMLImageElement>('img#preview')!;\r\n    this.submitButton = this.menuForm.querySelector<HTMLButtonElement>('button[type=\"submit\"]')!;\r\n    this.root.querySelector('#new-game')?.addEventListener('click', this.menu.bind(this));\r\n    this.root.querySelector('#save-game')?.addEventListener('click', this.save.bind(this));\r\n    this.imageElement = root.querySelector<SVGImageElement>('image#img')!;\r\n    window.addEventListener('resize', this.onWindowResize.bind(this));\r\n    Object.assign(this, registerDraggable(\r\n      root, this.onDrag.bind(this), this.onDrop.bind(this),\r\n    ));\r\n    this.load();\r\n    this.onWindowResize();\r\n  }\r\n\r\n  async updateImage(blobOrSrc: string | Blob) {\r\n    const src = blobOrSrc instanceof Blob ? await getUrl(blobOrSrc) : blobOrSrc;\r\n    const { width, height } = await getImageDimensions(src);\r\n    this.imageUrl = src;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.xCount = Math.round(width / 100);\r\n    this.colSelector.valueAsNumber = this.xCount;\r\n    this.rowSelector.valueAsNumber = this.yCount;\r\n    this.onSizeChange();\r\n    if(this.imagePreview.src.startsWith('blob:'))\r\n      URL.revokeObjectURL(this.imagePreview.src);\r\n    this.imagePreview.src = blobOrSrc instanceof Blob ? URL.createObjectURL(blobOrSrc) : src;\r\n    this.submitButton.disabled = false;\r\n    this.colSelector.disabled = false;\r\n    this.rowSelector.disabled = false;\r\n  }\r\n\r\n  calculateTheshold() {\r\n    this.theshold = Math.max(3, Math.sqrt((this.width / this._xc) ** 2 + (this.height / this._yc) ** 2) / 20);\r\n  }\r\n\r\n  init() {\r\n    clearChildren(this.pathGroup);\r\n    clearChildren(this.instanceGroup);\r\n    clearChildren(this.masksElement);\r\n    hideCetificate();\r\n    const unitSize = this._xc * 100;\r\n    this.height *= unitSize / this.width;\r\n    this.width = unitSize;\r\n    this.time = 0;\r\n    this.baseTime = 0;\r\n    this.startTime = new Date();\r\n    this.calculateTheshold();\r\n    delete this.endTime;\r\n    delete this.resumeTime;\r\n    this.timeDisp.textContent = '--:--';\r\n    if(this.timer != null) {\r\n      clearInterval(this.timer);\r\n      delete this.timer;\r\n    }\r\n    const paths = new JigsawGenerator({\r\n      width: this.width,\r\n      height: this.height,\r\n      xCount: this._xc,\r\n      yCount: this._yc,\r\n      radius: Math.min(this.width / this._xc, this.height / this._yc) / 5,\r\n      fixedPattern: this.fixedPatternCheckbox.checked,\r\n    }).toSvgElements(this.document, this.pathGroup);\r\n    const viewWidth = Math.max(640, this.width * 1.5);\r\n    const viewHeight = Math.max(480, this.height * 1.5);\r\n    this.root.setAttribute('viewBox', `0 0 ${viewWidth} ${viewHeight}`);\r\n    this.imageElement.href.baseVal = this.imageUrl!;\r\n    this.imageElement.setAttribute('width', this.width.toString());\r\n    this.imageElement.setAttribute('height', this.height.toString());\r\n    const defs = this.document.createDocumentFragment();\r\n    const instanceGroup = this.document.createDocumentFragment();\r\n    for(const path of paths) {\r\n      const mask = defs.appendChild(this.document.createElementNS(NS_SVG, 'mask'));\r\n      mask.id = `${path.id}-m`;\r\n\r\n      const maskPath = mask.appendChild(this.document.createElementNS(NS_SVG, 'use'));\r\n      maskPath.href.baseVal = `#${path.id}`;\r\n\r\n      const instance = instanceGroup.appendChild(this.document.createElementNS(NS_SVG, 'g'));\r\n      instance.id = `${path.id}-i`;\r\n      instance.classList.add('draggable');\r\n\r\n      const base = instance.appendChild(this.document.createElementNS(NS_SVG, 'use'));\r\n      base.href.baseVal = `#${this.imageElement.id}`;\r\n      base.setAttribute('mask', `url(#${mask.id})`);\r\n\r\n      const decoPath = instance.appendChild(this.document.createElementNS(NS_SVG, 'use'));\r\n      decoPath.classList.add('handler', 'pzoverlay');\r\n      decoPath.href.baseVal = `#${path.id}`;\r\n\r\n      const m = pathIdMatcher.exec(path.id);\r\n      if(m) {\r\n        const w = this.width / this._xc;\r\n        const h = this.height / this._yc;\r\n        instance.transform.baseVal.appendItem(this.root.createSVGTransform()).setTranslate(\r\n          Math.round(Math.random() * (viewWidth - w) - parseInt(m[1], 10) * w),\r\n          Math.round(Math.random() * (viewHeight - h) - parseInt(m[2], 10) * h),\r\n        );\r\n      }\r\n    }\r\n    this.masksElement.appendChild(defs);\r\n    this.instanceGroup.appendChild(instanceGroup);\r\n    this.serializeToData();\r\n    this.onWindowResize();\r\n  }\r\n\r\n  private onDrag(element: SVGElement) {\r\n    element.classList.add('grabbing');\r\n    if(this.timer != null) return;\r\n    this.resumeTime = new Date();\r\n    this.timer = window.setInterval(this.updateTime.bind(this), 1000);\r\n    this.updateTime();\r\n  }\r\n\r\n  private onDrop(state: DraggingState) {\r\n    state.element.classList.remove('grabbing');\r\n    const { id } = state.target.parentNode as Element;\r\n    const m = pathIdMatcher.exec(id);\r\n    if(!m) return;\r\n    const x = parseInt(m[1], 10);\r\n    const y = parseInt(m[2], 10);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x + 1}-${y}-i`);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x - 1}-${y}-i`);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x}-${y + 1}-i`);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x}-${y - 1}-i`);\r\n    if(this.instanceGroup.childElementCount > 1)\r\n      return;\r\n    this.endTime = new Date();\r\n    if(this.timer != null) {\r\n      clearInterval(this.timer);\r\n      delete this.timer;\r\n    }\r\n    const lastElement = this.instanceGroup.querySelector<SVGGraphicsElement>('.draggable.group');\r\n    if(lastElement) {\r\n      lastElement.classList.remove('draggable');\r\n      lastElement.transform.baseVal.removeItem(0);\r\n    }\r\n    const viewWidth = Math.max(640, this.width + 20);\r\n    const viewHeight = Math.max(480, this.height + 40);\r\n    this.root.setAttribute('viewBox', `0 0 ${viewWidth} ${viewHeight}`);\r\n    this.onWindowResize();\r\n    showCertificate(this);\r\n  }\r\n\r\n  private checkAndMerge(current: SVGGraphicsElement, next: string) {\r\n    const other = this.instanceGroup.querySelector(next)?.closest<SVGGraphicsElement>('.draggable');\r\n    if(!other || this.isDragging(other) || other === current)\r\n      return current;\r\n    const t1 = current.transform.baseVal;\r\n    if(!t1.numberOfItems) return current;\r\n    const t2 = other.transform.baseVal;\r\n    if(!t2.numberOfItems) return current;\r\n    const m1 = t1.getItem(0).matrix;\r\n    const m2 = t2.getItem(0).matrix;\r\n    if(Math.sqrt((m1.e - m2.e) ** 2 + (m1.f - m2.f) ** 2) > this.theshold)\r\n      return current;\r\n    const currentIsGroup = current.classList.contains('group');\r\n    const otherIsGroup = other.classList.contains('group');\r\n    if(currentIsGroup) {\r\n      if(!otherIsGroup) {\r\n        other.classList.remove('draggable');\r\n        t2.removeItem(0);\r\n        current.appendChild(other);\r\n      } else if(other.childElementCount > current.childElementCount) {\r\n        transferChildren(current, other);\r\n        current.remove();\r\n        return other;\r\n      } else {\r\n        transferChildren(other, current);\r\n        other.remove();\r\n      }\r\n      return current;\r\n    }\r\n    if(otherIsGroup) {\r\n      current.classList.remove('draggable');\r\n      t1.removeItem(0);\r\n      other.appendChild(current);\r\n      return other;\r\n    }\r\n    const newGroup = current.parentNode!.appendChild(this.document.createElementNS(NS_SVG, 'g'));\r\n    newGroup.classList.add('draggable', 'group');\r\n    newGroup.appendChild(current);\r\n    current.classList.remove('draggable');\r\n    newGroup.appendChild(other);\r\n    other.classList.remove('draggable');\r\n    const t = t2.getItem(0);\r\n    t1.removeItem(0);\r\n    t2.removeItem(0);\r\n    newGroup.transform.baseVal.appendItem(t);\r\n    return newGroup;\r\n  }\r\n\r\n  private isDragging(element: SVGElement) {\r\n    return false;\r\n  }\r\n\r\n  private updateTime() {\r\n    this.time = Date.now() - this.resumeTime!.getTime() + this.baseTime;\r\n    this.timeDisp.textContent = formatTime(this.time);\r\n  }\r\n\r\n  private menu() {\r\n    this.menuGroup.classList.add('show');\r\n    this.onSizeChange();\r\n  }\r\n\r\n  private load() {\r\n    const data: StoredData | null = JSON.parse(this.dataElement.textContent || 'null');\r\n    if(data == null)\r\n      return;\r\n    this.width = data.width || 1;\r\n    this.height = data.height || 1;\r\n    this.baseTime = data.time || 0;\r\n    this._xc = data.xCount || 1;\r\n    this._yc = data.yCount || 1;\r\n    if(data.startTime != null)\r\n      this.startTime = new Date(data.startTime);\r\n    if(data.endTime != null)\r\n      this.endTime = new Date(data.endTime);\r\n    this.calculateTheshold();\r\n  }\r\n\r\n  private serializeToData() {\r\n    if(this.resumeTime != null && this.endTime == null) this.updateTime();\r\n    this.dataElement.textContent = JSON.stringify({\r\n      width: this.width,\r\n      height: this.height,\r\n      xCount: this._xc,\r\n      yCount: this._yc,\r\n      startTime: this.startTime?.getTime(),\r\n      endTime: this.endTime?.getTime(),\r\n      time: this.time,\r\n    } as StoredData);\r\n  }\r\n\r\n  private save() {\r\n    this.serializeToData();\r\n    return downloadDocument(this.root, `puzzle-${Date.now()}.svg`, beforeSave);\r\n  }\r\n\r\n  private onImageSelected() {\r\n    const { files } = this.imageSelector;\r\n    if(!files || !files.length) return;\r\n    const file = files.item(0)!;\r\n    this.updateImage(file);\r\n  }\r\n\r\n  private onColChange() {\r\n    this.xCount = this.colSelector.valueAsNumber;\r\n    this.rowSelector.valueAsNumber = this.yCount;\r\n    this.colSelector.valueAsNumber = this.xCount;\r\n    this.onSizeChange();\r\n  }\r\n\r\n  private onRowChange() {\r\n    this.yCount = this.rowSelector.valueAsNumber;\r\n    this.colSelector.valueAsNumber = this.xCount;\r\n    this.rowSelector.valueAsNumber = this.yCount;\r\n    this.onSizeChange();\r\n  }\r\n\r\n  private onSizeChange() {\r\n    this.sizeCountDisplay.textContent = `(${this._xc * this._yc} Pieces)`;\r\n  }\r\n\r\n  private async onMenuSubmit(e: Event) {\r\n    e.preventDefault();\r\n    if(!this.imageUrl) return;\r\n    this.init();\r\n    this.menuForm.reset();\r\n  }\r\n\r\n  private onMenuReset() {\r\n    if(this.imagePreview.src.startsWith('blob:'))\r\n      URL.revokeObjectURL(this.imagePreview.src);\r\n    this.imagePreview.src = '';\r\n    this.submitButton.disabled = true;\r\n    this.colSelector.disabled = true;\r\n    this.rowSelector.disabled = true;\r\n    this.menuGroup.classList.remove('show');\r\n  }\r\n\r\n  private onWindowResize() {\r\n    let viewWidth: number, viewHeight: number;\r\n    if(!this.dataElement.textContent) {\r\n      if(window.innerWidth > window.innerHeight) {\r\n        viewHeight = 480;\r\n        viewWidth = viewHeight / window.innerHeight * window.innerWidth;\r\n      } else {\r\n        viewWidth = 640;\r\n        viewHeight = viewWidth / window.innerWidth * window.innerHeight;\r\n      }\r\n      this.root.setAttribute('viewBox', `0 0 ${viewWidth} ${viewHeight}`);\r\n    } else {\r\n      const viewBox = this.root.viewBox.baseVal;\r\n      viewWidth = viewBox.width;\r\n      viewHeight = viewBox.height;\r\n    }\r\n    const viewRatio = viewWidth / viewHeight;\r\n    const windowRatio = window.innerWidth / window.innerHeight;\r\n    const scale = (viewRatio > windowRatio ? viewWidth / window.innerWidth : viewHeight / window.innerHeight) * window.devicePixelRatio;\r\n    this.uiGroup.transform.baseVal.getItem(0).setScale(scale, scale);\r\n  }\r\n\r\n  private onPaste(e: ClipboardEvent) {\r\n    if(this.menuGroup.classList.contains('show') && e.clipboardData && e.clipboardData.files.length) {\r\n      interceptEvent(e);\r\n      this.onDragDrop(e.clipboardData);\r\n    }\r\n  }\r\n\r\n  private async onDragDrop(dataTransfer: DataTransfer) {\r\n    let loaded = false;\r\n    for(const item of dataTransfer.items) {\r\n      switch(item.kind) {\r\n        case 'file': {\r\n          if(!item.type.startsWith('image/')) break;\r\n          const file = item.getAsFile();\r\n          if(!file) break;\r\n          try {\r\n            this.updateImage(file);\r\n            loaded = true;\r\n          } catch {}\r\n          break;\r\n        }\r\n        case 'string':\r\n          switch(item.type) {\r\n            case 'text/uri-list':\r\n              for(const row of (await toPromise(item, item.getAsString)).split('\\r\\n'))\r\n                try {\r\n                  await this.updateImage(await (await fetch(row)).blob());\r\n                  loaded = true;\r\n                  break;\r\n                } catch {}\r\n              break;\r\n          }\r\n          break;\r\n      }\r\n      if(loaded) break;\r\n    }\r\n    return loaded;\r\n  }\r\n}\r\n\r\nnew MainHandler();\r\n\r\nfunction beforeSave(root: Element) {\r\n  root.classList.add('noscript');\r\n  root.querySelector<SVGGElement>('g#ui')?.transform.baseVal.getItem(0)?.setScale(1, 1);\r\n}\r\n","import { NS_SVG, getSeed, round } from './utils';\r\n// Modified from https://gist.github.com/Draradech/35d36347312ca6d0887aa7d55f366e30\r\n// Changes: Outputs per-puzzle path instead of one for all.\r\n\r\ninterface Stroke {\r\n  points: number[];\r\n  inst: string[];\r\n}\r\n\r\nconst svgArgsCount: { [arg: string]: number; } = {\r\n  M: 2, m: 2,\r\n  L: 2, l: 2,\r\n  H: 1, h: 1,\r\n  V: 1, v: 1,\r\n  C: 6, c: 6,\r\n  S: 4, s: 4,\r\n  Q: 4, q: 4,\r\n  T: 2, t: 2,\r\n  A: 7, a: 7,\r\n  z: 0,\r\n};\r\n\r\nexport interface JigsawGeneratorOptions {\r\n  width: number;\r\n  height: number;\r\n  xCount: number;\r\n  yCount: number;\r\n  seed?: any;\r\n  tabSize?: number;\r\n  jitter?: number;\r\n  radius?: number;\r\n  fixedPattern?: boolean;\r\n}\r\n\r\nexport class JigsawGenerator {\r\n  cells: string[][];\r\n  width: number;\r\n  height: number;\r\n  xCount: number;\r\n  yCount: number;\r\n  seed: number;\r\n  tabSize: number;\r\n  jitter: number;\r\n  radius: number;\r\n  fixedPattern: number;\r\n\r\n  private strokes = new Map<number, Stroke[]>();\r\n  private a: number = 0;\r\n  private b: number = 0;\r\n  private c: number = 0;\r\n  private d: number = 0;\r\n  private e: number = 0;\r\n  private flip: boolean = false;\r\n  private xi: number;\r\n  private yi: number;\r\n  private vertical: boolean;\r\n  private get sl() { return this.vertical ? this.height / this.yCount : this.width / this.xCount; }\r\n  private get sw() { return this.vertical ? this.width / this.xCount : this.height / this.yCount; }\r\n  private get ol() { return this.sl * (this.vertical ? this.yi : this.xi); }\r\n  private get ow() { return this.sw * (this.vertical ? this.xi : this.yi); }\r\n\r\n  constructor(options: JigsawGeneratorOptions) {\r\n    this.width = options.width;\r\n    this.height = options.height;\r\n    this.xCount = options.xCount;\r\n    this.yCount = options.yCount;\r\n    this.tabSize = options.tabSize ?? 0.1;\r\n    this.jitter = options.jitter ?? 0.04;\r\n    this.seed = getSeed(options.seed ?? Math.trunc(Math.random() * Number.MAX_SAFE_INTEGER));\r\n    this.radius = Math.min(options.radius ?? 0, this.sl, this.sw);\r\n    this.fixedPattern = options.fixedPattern ? Math.floor(this.random() * 2 + 1) : 0;\r\n\r\n    this.vertical = false;\r\n    for(this.yi = 1; this.yi < this.yCount; this.yi++) {\r\n      this.first();\r\n      for(this.xi = 0; this.xi < this.xCount; this.xi++) {\r\n        this.next();\r\n        this.pushStroke(this.xi + this.xCount * (this.yi - 1), this.generateStroke(true));\r\n        this.pushStroke(this.xi + this.xCount * this.yi, this.generateStroke());\r\n      }\r\n    }\r\n\r\n    this.vertical = true;\r\n    for(this.xi = 1; this.xi < this.xCount; this.xi++) {\r\n      this.first();\r\n      for(this.yi = 0; this.yi < this.yCount; this.yi++) {\r\n        this.next();\r\n        this.pushStroke(this.xi - 1 + this.xCount * this.yi, this.generateStroke());\r\n        this.pushStroke(this.xi + this.xCount * this.yi, this.generateStroke(true));\r\n      }\r\n    }\r\n\r\n    this.vertical = false;\r\n    this.pushStroke(0, {\r\n      points: [\r\n        0, round(this.sw, 3),\r\n        0, this.radius,\r\n        this.radius, this.radius, 0, 0, 1,\r\n        this.radius, 0,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.vertical = true;\r\n    this.pushStroke(this.xCount - 1, {\r\n      points: [\r\n        round(this.width - this.sw), 0,\r\n        this.width - this.radius, 0,\r\n        this.radius, this.radius, 0, 0, 1,\r\n        this.width, this.radius,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.vertical = false;\r\n    this.pushStroke(this.xCount * this.yCount - 1, {\r\n      points: [\r\n        this.width, round(this.height - this.sw, 3),\r\n        this.width, this.height - this.radius,\r\n        this.radius, this.radius, 0, 0, 1,\r\n        this.width - this.radius, this.height,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.vertical = true;\r\n    this.pushStroke(this.xCount * (this.yCount - 1), {\r\n      points: [\r\n        round(this.sw, 3), this.height,\r\n        this.radius, this.height,\r\n        this.radius, this.radius, 0, 0, 1, 0,\r\n        this.height - this.radius,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.cells = [];\r\n    for(const [i, stroke] of this.strokes) {\r\n      const y = Math.trunc(i / this.xCount);\r\n      (this.cells[y] ?? (this.cells[y] = []))[i % this.xCount] = this.getNormalizedStroke(stroke);\r\n    }\r\n\r\n    this.strokes.clear();\r\n  }\r\n\r\n  toSvgElements(document: Document, parent?: Node) {\r\n    const result: SVGPathElement[] = [];\r\n    const fragment = parent != null ? document.createDocumentFragment() : null;\r\n    for(let y = 0; y < this.cells.length; y++) {\r\n      const row = this.cells[y];\r\n      for(let x = 0; x < row.length; x++) {\r\n        const elm = document.createElementNS(NS_SVG, 'path');\r\n        elm.setAttribute('d', row[x]);\r\n        elm.id = `p-${x}-${y}`;\r\n        result.push(elm);\r\n        fragment?.appendChild(elm);\r\n      }\r\n    }\r\n    parent?.appendChild(fragment!);\r\n    return result;\r\n  }\r\n\r\n  private generateStroke(reverse?: boolean): Stroke {\r\n    const { a, b, c, d, e, tabSize } = this;\r\n    const p0l = this.l(0);\r\n    const p0w = this.w(0);\r\n    const p1l = this.l(0.2);\r\n    const p1w = this.w(a);\r\n    const p2l = this.l(0.5 + b + d);\r\n    const p2w = this.w(-tabSize + c);\r\n    const p3l = this.l(0.5 - tabSize + b);\r\n    const p3w = this.w(tabSize + c);\r\n    const p4l = this.l(0.5 - 2 * tabSize + b - d);\r\n    const p4w = this.w(3 * tabSize + c);\r\n    const p5l = this.l(0.5 + 2 * tabSize + b - d);\r\n    const p5w = this.w(3 * tabSize + c);\r\n    const p6l = this.l(0.5 + tabSize + b);\r\n    const p6w = this.w(tabSize + c);\r\n    const p7l = this.l(0.5 + b + d);\r\n    const p7w = this.w(-tabSize + c);\r\n    const p8l = this.l(0.8);\r\n    const p8w = this.w(e);\r\n    const p9l = this.l(1);\r\n    const p9w = this.w(0);\r\n    return {\r\n      points: this.vertical ? reverse ? [\r\n        p9w, p9l, p8w, p8l, p7w, p7l, p6w, p6l,\r\n        p5w, p5l, p4w, p4l, p3w, p3l, p2w, p2l,\r\n        p1w, p1l, p0w, p0l,\r\n      ] : [\r\n        p0w, p0l, p1w, p1l, p2w, p2l, p3w, p3l,\r\n        p4w, p4l, p5w, p5l, p6w, p6l, p7w, p7l,\r\n        p8w, p8l, p9w, p9l,\r\n      ] : reverse ? [\r\n        p9l, p9w, p8l, p8w, p7l, p7w, p6l, p6w,\r\n        p5l, p5w, p4l, p4w, p3l, p3w, p2l, p2w,\r\n        p1l, p1w, p0l, p0w,\r\n      ] : [\r\n        p0l, p0w, p1l, p1w, p2l, p2w, p3l, p3w,\r\n        p4l, p4w, p5l, p5w, p6l, p6w, p7l, p7w,\r\n        p8l, p8w, p9l, p9w,\r\n      ],\r\n      inst: ['M', 'C', 'C', 'C'],\r\n    };\r\n  }\r\n\r\n  private random() {\r\n    const x = Math.sin(this.seed++) * 10000;\r\n    return x - Math.floor(x);\r\n  }\r\n\r\n  private nextJitter() {\r\n    return this.random() * this.jitter * 2 - this.jitter;\r\n  }\r\n\r\n  private first() {\r\n    this.e = this.nextJitter();\r\n  }\r\n\r\n  private next() {\r\n    const filp = this.flip;\r\n    switch(this.fixedPattern) {\r\n      case 1: case 2:\r\n        this.flip = (this.xi + this.yi) % 2 === (this.fixedPattern + (this.vertical ? 1 : 0)) % 2;\r\n        break;\r\n      default:\r\n        this.flip = this.random() >= 0.5;\r\n        break;\r\n    }\r\n    this.a = (this.flip === filp ? -this.e : this.e);\r\n    this.b = this.nextJitter();\r\n    this.c = this.nextJitter();\r\n    this.d = this.nextJitter();\r\n    this.e = this.nextJitter();\r\n  }\r\n\r\n  private l(v: number) {\r\n    return round(this.ol + this.sl * v, 3);\r\n  }\r\n\r\n  private w(v: number) {\r\n    return round(this.ow + this.sw * v * (this.flip ? -1 : 1), 3);\r\n  }\r\n\r\n  private pushStroke(i: number, stroke: Stroke) {\r\n    const strokes = this.strokes.get(i);\r\n    if(strokes)\r\n      strokes.push(stroke);\r\n    else\r\n      this.strokes.set(i, [stroke]);\r\n  }\r\n\r\n  private getNormalizedStroke(strokes: Stroke[]) {\r\n    if(strokes == null || !strokes.length)\r\n      return '';\r\n    if(strokes.length > 1) {\r\n      const strokeSet = new Set(strokes);\r\n      const result: Stroke = { points: [], inst: [] };\r\n      while(strokeSet.size) {\r\n        let found = false;\r\n        for(const other of strokeSet)\r\n          if(!result.points.length) {\r\n            result.points = other.points;\r\n            result.inst = other.inst;\r\n            found = true;\r\n            strokeSet.delete(other);\r\n            break;\r\n          } else if(\r\n            Math.abs(result.points[0] - other.points[other.points.length - 2]) < 1 &&\r\n            Math.abs(result.points[1] - other.points[other.points.length - 1]) < 1\r\n          ) {\r\n            result.points.splice(0, 2, ...other.points);\r\n            result.inst.splice(0, 1, ...other.inst);\r\n            found = true;\r\n            strokeSet.delete(other);\r\n            break;\r\n          } else if(\r\n            Math.abs(other.points[0] - result.points[result.points.length - 2]) < 1 &&\r\n            Math.abs(other.points[1] - result.points[result.points.length - 1]) < 1\r\n          ) {\r\n            other.points.splice(0, 2, ...result.points);\r\n            other.inst.splice(0, 1, ...result.inst);\r\n            result.points = other.points;\r\n            result.inst = other.inst;\r\n            found = true;\r\n            strokeSet.delete(other);\r\n            break;\r\n          }\r\n        if(!found)\r\n          break;\r\n      }\r\n      strokes = [result];\r\n    }\r\n    const { points, inst } = strokes[0];\r\n    let j = 0;\r\n    let result = '';\r\n    for(const i of inst) {\r\n      result += i;\r\n      const c = svgArgsCount[i];\r\n      if(c) result += points.slice(j, j += c).join(' ');\r\n    }\r\n    return result + 'z';\r\n  }\r\n}\r\n","import { interceptEvent } from './utils';\r\n\r\nexport interface DraggingState {\r\n  target: SVGGraphicsElement;\r\n  element: SVGGraphicsElement;\r\n  identifier?: number;\r\n  transform: SVGTransform;\r\n  offsetX: number;\r\n  offsetY: number;\r\n  bringToFrontAfter?: boolean;\r\n}\r\n\r\ninterface Pointer {\r\n  clientX: number;\r\n  clientY: number;\r\n  identifier?: number;\r\n}\r\n\r\nexport function registerDraggable(\r\n  root: GlobalEventHandlers = document,\r\n  onDrag?: (element: SVGElement) => void,\r\n  onDrop?: (state: DraggingState) => void,\r\n  draggableClass = '.draggable', handlerClass = '.handler',\r\n) {\r\n  const draggingElements = new Map<SVGElement, DraggingState>();\r\n  const states = new Map<number | undefined, DraggingState>();\r\n\r\n  root.addEventListener('mousedown', onMouseStartDrag, true);\r\n  root.addEventListener('mousemove', onMouseDragging);\r\n  root.addEventListener('mouseup', onMouseEndDrag);\r\n  root.addEventListener('mouseleave', onMouseEndDrag);\r\n  root.addEventListener('touchstart', onTouchStartDrag, { capture: true, passive: false });\r\n  root.addEventListener('touchmove', onTouchDragging, { passive: false });\r\n  root.addEventListener('touchend', onTouchEndDrag, { passive: false });\r\n  root.addEventListener('touchcancel', onTouchEndDrag, { passive: false });\r\n\r\n  function getState(e: Pointer) {\r\n    const state = states.get(e.identifier);\r\n    return state && (state.identifier == null) === (e instanceof MouseEvent) ? state : null;\r\n  }\r\n\r\n  function getHandlerTarget(e: Event) {\r\n    let { target } = e;\r\n    if(!(target instanceof Element)) return;\r\n    target = target.closest(`${draggableClass} ${handlerClass}, ${draggableClass}${handlerClass}`);\r\n    if(target instanceof SVGGraphicsElement)\r\n      return target;\r\n  }\r\n\r\n  function onMouseStartDrag(e: MouseEvent) {\r\n    if(e.button !== 0) return;\r\n    const target = getHandlerTarget(e);\r\n    if(!target) return;\r\n    handleStartDrag(target, e, e.ctrlKey || e.shiftKey);\r\n    interceptEvent(e);\r\n  }\r\n\r\n  function onTouchStartDrag(e: TouchEvent) {\r\n    const pointer = e.targetTouches.item(0);\r\n    if(!pointer) return;\r\n    const target = getHandlerTarget(e);\r\n    if(!target) return;\r\n    handleStartDrag(target, pointer, e.ctrlKey || e.shiftKey);\r\n    interceptEvent(e);\r\n  }\r\n\r\n  function handleStartDrag(target: SVGGraphicsElement, pointer: Pointer, forceBringToFront?: boolean) {\r\n    const root = target.ownerSVGElement!;\r\n    const element = target.matches(draggableClass) ? target : target.closest<SVGGraphicsElement>(draggableClass) as SVGGraphicsElement;\r\n    if(draggingElements.has(element)) return;\r\n    const transforms = element.transform.baseVal;\r\n    if(!transforms.numberOfItems || transforms.getItem(0).type !== SVGTransform.SVG_TRANSFORM_TRANSLATE) {\r\n      const transform = root.createSVGTransform();\r\n      transform.setTranslate(0, 0);\r\n      transforms.insertItemBefore(transform, 0);\r\n    }\r\n    const transform = transforms.getItem(0);\r\n    const offset = getLocalPoint(\r\n      root, pointer, element.parentNode! as SVGGraphicsElement,\r\n    ).matrixTransform(transform.matrix.inverse());\r\n    const { identifier } = pointer;\r\n    const state: DraggingState = {\r\n      element, target, identifier, transform,\r\n      offsetX: offset.x,\r\n      offsetY: offset.y,\r\n    };\r\n    draggingElements.set(element, state);\r\n    states.set(identifier, state);\r\n    if(element.nextSibling && forceBringToFront)\r\n      element.parentNode?.appendChild(element);\r\n    else\r\n      state.bringToFrontAfter = true;\r\n    onDrag?.(element);\r\n  }\r\n\r\n  function onMouseDragging(e: MouseEvent) {\r\n    if(states.size && e.button === 0 && handleDrag(e))\r\n      interceptEvent(e); \r\n  }\r\n\r\n  function onTouchDragging(e: TouchEvent) {\r\n    if(states.size &&\r\n      e.changedTouches.length &&\r\n      Array.prototype.map.call(e.changedTouches, handleDrag).includes(true))\r\n      interceptEvent(e);\r\n  }\r\n  \r\n  function handleDrag(e: Pointer) {\r\n    const state = getState(e);\r\n    if(!state) return false;\r\n    const coord = getLocalPoint(\r\n      state.element.ownerSVGElement!, e,\r\n      state.element.parentNode! as SVGGraphicsElement,\r\n    );\r\n    coord.x -= state.offsetX;\r\n    coord.y -= state.offsetY;\r\n    state.transform.setTranslate(coord.x, coord.y);\r\n    return true;\r\n  }\r\n\r\n  function onMouseEndDrag(e: MouseEvent) {\r\n    if(states.size && handleEndDrag(e))\r\n      interceptEvent(e);\r\n  }\r\n\r\n  function onTouchEndDrag(e: TouchEvent) {\r\n    if(states.size &&\r\n      e.changedTouches.length &&\r\n      Array.prototype.map.call(e.changedTouches, handleEndDrag).includes(true))\r\n      interceptEvent(e);\r\n  }\r\n  \r\n  function handleEndDrag(e: Pointer) {\r\n    const state = getState(e);\r\n    if(!state) return false;\r\n    draggingElements.delete(state.element);\r\n    states.delete(state.identifier);\r\n    if(state.bringToFrontAfter)\r\n      state.element.parentNode?.appendChild(state.element);\r\n    onDrop?.(state);\r\n    return true;\r\n  }\r\n\r\n  return {\r\n    isDragging(element: SVGElement) {\r\n      return draggingElements.has(element);\r\n    },\r\n  };\r\n}\r\n\r\nfunction getLocalPoint(\r\n  root: SVGSVGElement,\r\n  pointer: Pointer,\r\n  base?: DOMMatrix | SVGGraphicsElement | null,\r\n) {\r\n  const p = root.createSVGPoint();\r\n  p.x = pointer.clientX;\r\n  p.y = pointer.clientY;\r\n  return base != null ? p.matrixTransform(\r\n    base instanceof SVGGraphicsElement ?\r\n    base.getScreenCTM()!.inverse() :\r\n    base,\r\n  ) : p;\r\n}","import { NS_SVG, NS_XHTML } from './utils';\r\n\r\nexport async function downloadDocument(src: Element, name: string, treatments?: (root: Element, document: Document) => (void | Promise<void>)) {\r\n  const document = src.ownerDocument;\r\n  const root = document.implementation.createDocument(NS_SVG, 'svg', null);\r\n  const clone = root.importNode(src, true);\r\n  root.replaceChild(clone, root.firstChild!);\r\n  await Promise.all(Array.prototype.map.call(clone.querySelectorAll('script'), resolveScript));\r\n  await treatments?.(clone, root);\r\n  const blob = new Blob([new XMLSerializer().serializeToString(root)], { type: 'image/svg+xml' });\r\n  const element = document.createElementNS(NS_XHTML, 'a') as HTMLAnchorElement;\r\n  element.href = URL.createObjectURL(blob);\r\n  element.download = name;\r\n  element.click();\r\n  URL.revokeObjectURL(element.href);\r\n}\r\n\r\nasync function resolveScript(script: Element) {\r\n  if(script instanceof HTMLScriptElement) {\r\n    const { src } = script;\r\n    if(!src) return;\r\n    script.removeAttribute('src');\r\n    script.textContent = await (await fetch(src)).text();\r\n  } else if(script instanceof SVGScriptElement) {\r\n    const href = script.href.baseVal;\r\n    if(!href) return;\r\n    script.removeAttribute('href');\r\n    script.appendChild(script.ownerDocument.createCDATASection(await (await fetch(href)).text()));\r\n  }\r\n}","import { MainHandler } from '.';\r\nimport { formatTime, formatDateTime } from './utils';\r\n\r\nconst certificate = document.querySelector('#certificate')!;\r\nconst timeStartElement = certificate.querySelector<SVGTextElement>('text#time-start')!;\r\nconst timeEndElement = certificate.querySelector<SVGTextElement>('text#time-end')!;\r\nconst timeUsedElement = certificate.querySelector<SVGTextElement>('text#time-used')!;\r\nconst puzzleSizeElement = certificate.querySelector<SVGTextElement>('text#puzzle-size')!;\r\n\r\nexport function showCertificate(mainHandler: MainHandler) {\r\n  certificate.classList.add('show');\r\n  certificate.setAttribute('visibility', 'visible');\r\n  certificate.setAttribute('pointer-events', 'visible');\r\n  timeStartElement.textContent = formatDateTime(mainHandler.startTime);\r\n  timeEndElement.textContent = formatDateTime(mainHandler.endTime);\r\n  timeUsedElement.textContent = formatTime(mainHandler.time);\r\n  puzzleSizeElement.textContent = `${mainHandler.xCount}×${mainHandler.yCount} (${mainHandler.xCount * mainHandler.yCount} Pieces)`;\r\n}\r\n\r\nexport function hideCetificate() {\r\n  certificate.classList.remove('show');\r\n  timeStartElement.textContent = '';\r\n  timeEndElement.textContent = '';\r\n  timeUsedElement.textContent = '';\r\n  puzzleSizeElement.textContent = '';\r\n}","import { interceptEvent } from './utils';\r\n\r\nexport function registerDropZone(\r\n  element: GlobalEventHandlers,\r\n  dropCallback?: (dataTransfer: DataTransfer) => void,\r\n  dragEnterCallback?: ((dataTransfer: DataTransfer) => void) | null,\r\n  dragOverCallback?: ((dataTransfer: DataTransfer) => void) | null,\r\n  dragLeaveCallback?: ((dataTransfer: DataTransfer) => void) | null,\r\n) {\r\n  const dragOverFallbackHandler = dropCallback != null ? null : defaultDragOverHandler;\r\n  element.addEventListener('dragenter', wrapDragEvent(dragEnterCallback ?? dragOverFallbackHandler));\r\n  element.addEventListener('dragover', wrapDragEvent(dragOverCallback ?? dragOverFallbackHandler));\r\n  element.addEventListener('dragleave', wrapDragEvent(dragLeaveCallback));\r\n  element.addEventListener('drop', wrapDragEvent(dropCallback));\r\n}\r\n\r\nfunction wrapDragEvent(callback?: ((dataTransfer: DataTransfer) => void) | null): (e: DragEvent) => void {\r\n  return callback != null ? e => {\r\n    interceptEvent(e);\r\n    if(e.dataTransfer != null)\r\n      callback(e.dataTransfer);\r\n  } : interceptEvent;\r\n}\r\n\r\nfunction defaultDragOverHandler(dataTransfer: DataTransfer) {\r\n  dataTransfer.dropEffect = 'none';\r\n}\r\n"],"sourceRoot":""}
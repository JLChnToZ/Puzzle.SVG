{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.ts","webpack:///./src/index.ts","webpack:///./src/puzzle-generator.ts","webpack:///./src/drag-handler.ts","webpack:///./src/xml-clone.ts","webpack:///./src/certificate.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","NS_SVG","NS_XHTML","getUrl","blob","Promise","resolve","reject","reader","FileReader","readAsDataURL","addEventListener","result","Error","getImageDimensions","src","img","Image","width","naturalWidth","height","naturalHeight","clearChildren","node","hasChildNodes","removeChild","firstChild","formatTime","time","absTime","Math","abs","floor","toString","padStart","getSeed","seed","hash","length","imul","charCodeAt","pathIdMatcher","MainHandler","root","document","baseTime","_xc","_yc","querySelector","classList","remove","this","Document","ownerDocument","defsElement","pathGroup","instanceGroup","timeDisp","dataElement","menuGroup","menuForm","onMenuSubmit","onMenuReset","imageSelector","onImageSelected","colSelector","onColChange","rowSelector","onRowChange","menu","save","imageElement","imageUrl","href","baseVal","assign","registerDraggable","onDrag","onDrop","load","round","Blob","oldMask","querySelectorAll","startTime","Date","endTime","resumeTime","textContent","timer","clearInterval","paths","JigsawGenerator","undefined","toSvgElements","viewWidth","max","viewHeight","setAttribute","path","mask","appendChild","createElementNS","id","add","maskPath","instance","base","decoPath","exec","w","h","transform","appendItem","createSVGTransform","setTranslate","random","parseInt","window","setInterval","updateTime","state","target","parentNode","x","y","element","checkAndMerge","childElementCount","lastElement","removeItem","showCertificate","current","next","other","closest","isDragging","t1","numberOfItems","t2","m1","getItem","matrix","m2","sqrt","e","f","currentIsGroup","contains","otherIsGroup","child","Array","from","childNodes","newGroup","now","getTime","data","JSON","parse","xCount","yCount","stringify","downloadDocument","files","updateImage","item","valueAsNumber","preventDefault","init","reset","main","svgArgsCount","M","L","H","V","v","C","S","Q","q","T","A","a","z","tabSize","jitter","radius","strokes","Map","b","flip","trunc","Number","MAX_SAFE_INTEGER","min","sl","sw","vertical","yi","first","xi","pushStroke","generateStroke","points","inst","cells","stroke","getNormalizedStroke","clear","parent","row","elm","push","reverse","p0l","p0w","p1l","p1w","p2l","p2w","p3l","p3w","p4l","p4w","p5l","p5w","p6l","p6w","p7l","p7w","p8l","p8w","p9l","p9w","sin","nextJitter","filp","ol","EPSILON","ow","set","strokeSet","Set","size","found","delete","splice","j","slice","join","draggableClass","handlerClass","draggingElements","states","onStartDrag","onDragging","onEndDrag","getState","identifier","MouseEvent","SVGGraphicsElement","ownerSVGElement","pointer","targetTouches","ctm","getScreenCTM","inverse","SVGGeometryElement","touch","lp","getLocalPoint","isPointInFill","isPointInStroke","bbox","getBBox","left","right","top","bottom","button","matches","has","transforms","type","SVGTransform","SVG_TRANSFORM_TRANSLATE","insertItemBefore","offset","matrixTransform","offsetX","offsetY","interceptEvent","changedTouches","map","handleDrag","includes","coord","handleEndDrag","createSVGPoint","clientX","clientY","cancelable","defaultPrevented","stopPropagation","async","implementation","createDocument","clone","importNode","replaceChild","all","resolveScript","XMLSerializer","serializeToString","URL","createObjectURL","download","click","revokeObjectURL","script","HTMLScriptElement","removeAttribute","fetch","text","SVGScriptElement","createCDATASection","certificate","timeStartElement","timeEndElement","timeUsedElement","puzzleSizeElement","mainHandler","hideCetificate"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const NS_SVG = 'http://www.w3.org/2000/svg';\r\nexport const NS_XHTML = 'http://www.w3.org/1999/xhtml';\r\n\r\nexport function getUrl(blob: Blob) {\r\n  return new Promise<string>((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(blob);\r\n    reader.addEventListener('loadend', () =>\r\n      resolve(reader.result as string));\r\n    reader.addEventListener('error', () =>\r\n      reject(new Error('Unable to get URL from blob.')));\r\n  });\r\n}\r\n\r\nexport function getImageDimensions(src: string) {\r\n  return new Promise<{ width: number; height: number; }>((resolve, reject) => {\r\n    const img = new Image();\r\n    img.src = src;\r\n    img.addEventListener('load', () => resolve({\r\n      width: img.naturalWidth,\r\n      height: img.naturalHeight,\r\n    }));\r\n    img.addEventListener('error', () =>\r\n      reject(new Error('Could not load image from src.')));\r\n  });\r\n}\r\n\r\nexport function clearChildren(node: Node) {\r\n  while(node.hasChildNodes())\r\n    node.removeChild(node.firstChild!);\r\n}\r\n\r\nexport function formatTime(time: number) {\r\n  const absTime = Math.abs(time);\r\n  let result = `${\r\n    Math.floor(absTime / 6e4 % 60).toString(10).padStart(2, '0')\r\n  }:${\r\n    Math.floor(absTime / 1e3 % 60).toString(10).padStart(2, '0')\r\n  }`;\r\n  if(time < 36e5) return (time < 0 ? '-' : '') + result;\r\n  result = `${\r\n    Math.floor(absTime / 36e5 % 24).toString(10).padStart(2, '0')\r\n  }:${result}`;\r\n  if(time < 864e5) return (time < 0 ? '-' : '') + result;\r\n  return `${\r\n    Math.floor(time / 864e5).toString(10).padStart(2, '0')\r\n  }d ${result}`;\r\n}\r\n\r\nexport function getSeed(seed: any): number {\r\n  switch(typeof seed) {\r\n    case 'undefined':\r\n    case 'object':\r\n      if(seed == null)\r\n        seed = '';\r\n    default:\r\n      seed = seed.toString();\r\n    case 'string': {\r\n      let hash = 0;\r\n      for(let i = 0; i < seed.length; i++)\r\n        hash = Math.imul(31, hash) + seed.charCodeAt(i) | 0;\r\n      seed = hash;\r\n    }\r\n  }\r\n  return seed;\r\n}\r\n","import { JigsawGenerator } from './puzzle-generator';\r\nimport { registerDraggable, DraggingState } from './drag-handler';\r\nimport { formatTime, getUrl, getImageDimensions, clearChildren, NS_SVG } from './utils';\r\nimport { downloadDocument } from './xml-clone';\r\nimport { showCertificate } from './certificate';\r\n\r\nconst pathIdMatcher = /^p-(\\d+)-(\\d+)/;\r\n\r\ninterface StoredData {\r\n  width: number;\r\n  height: number;\r\n  xCount: number;\r\n  yCount: number;\r\n  time: number;\r\n  startTime?: number;\r\n  endTime?: number;\r\n}\r\n\r\nexport class MainHandler {\r\n  document: Document;\r\n  root: SVGSVGElement;\r\n  defsElement: SVGDefsElement;\r\n  imageElement: SVGImageElement;\r\n  pathGroup: SVGGElement;\r\n  instanceGroup: SVGGElement;\r\n  timeDisp: SVGTextElement;\r\n  dataElement: SVGScriptElement;\r\n  menuGroup: SVGGElement;\r\n  menuForm: HTMLFormElement;\r\n  imageSelector: HTMLInputElement;\r\n  colSelector: HTMLInputElement;\r\n  rowSelector: HTMLInputElement;\r\n\r\n  imageUrl: string;\r\n  width: number = 1;\r\n  height: number = 1;\r\n  baseTime: number = 0;\r\n  time: number = 0;\r\n  startTime?: Date;\r\n  endTime?: Date;\r\n  resumeTime?: Date;\r\n  private _xc: number = 1;\r\n  private _yc: number = 1;\r\n  private timer?: number;\r\n\r\n  get xCount() {\r\n    return this._xc;\r\n  }\r\n  set xCount(value: number) {\r\n    this._xc = value;\r\n    this._yc = Math.round(value / this.width * this.height);\r\n  } \r\n\r\n  get yCount() {\r\n    return this._yc;\r\n  }\r\n  set yCount(value: number) {\r\n    this._yc = value;\r\n    this._xc = Math.round(value / this.height * this.width);\r\n  }\r\n\r\n  constructor(root: GlobalEventHandlers & ParentNode = document) {\r\n    root.querySelector('.noscript')?.classList.remove('noscript');\r\n    this.root = root.querySelector('svg')!;\r\n    this.document = root instanceof Document ? root : this.root.ownerDocument;\r\n    this.defsElement = root.querySelector('defs')!;\r\n    this.pathGroup = root.querySelector<SVGGElement>('g#ps')!;\r\n    this.instanceGroup = root.querySelector<SVGGElement>('g#ins')!;\r\n    this.timeDisp = root.querySelector<SVGTextElement>('text#time')!;\r\n    this.dataElement = root.querySelector<SVGScriptElement>('script#data')!;\r\n    this.menuGroup = root.querySelector<SVGGElement>('#menu')!;\r\n    this.menuForm = root.querySelector<HTMLFormElement>('form#menuform')!;\r\n    this.menuForm.addEventListener('submit', this.onMenuSubmit.bind(this));\r\n    this.menuForm.addEventListener('reset', this.onMenuReset.bind(this));\r\n    this.imageSelector = this.menuForm.querySelector<HTMLInputElement>('input#image-input')!;\r\n    this.imageSelector.addEventListener('change', this.onImageSelected.bind(this));\r\n    this.colSelector = this.menuForm.querySelector<HTMLInputElement>('input#col-input')!;\r\n    const onColChange = this.onColChange.bind(this);\r\n    this.colSelector.addEventListener('change', onColChange);\r\n    this.colSelector.addEventListener('blur', onColChange);\r\n    this.rowSelector = this.menuForm.querySelector<HTMLInputElement>('input#row-input')!;\r\n    const onRowChange = this.onRowChange.bind(this);\r\n    this.rowSelector.addEventListener('change', onRowChange);\r\n    this.rowSelector.addEventListener('blur', onRowChange);\r\n    this.root.querySelector('#new-game')?.addEventListener('click', this.menu.bind(this));\r\n    this.root.querySelector('#save-game')?.addEventListener('click', this.save.bind(this));\r\n    this.imageElement = root.querySelector<SVGImageElement>('image#img')!;\r\n    this.imageUrl = this.imageElement.href.baseVal;\r\n    Object.assign(this, registerDraggable(\r\n      this.instanceGroup, this.onDrag.bind(this), this.onDrop.bind(this),\r\n    ));\r\n    this.load();\r\n  }\r\n\r\n  async updateImage(src: string | Blob) {\r\n    if(src instanceof Blob)\r\n      src = await getUrl(src);\r\n    const { width, height } = await getImageDimensions(src);\r\n    this.imageUrl = src;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._xc = Math.round(width / 100);\r\n    this._yc = Math.round(height / 100);\r\n  }\r\n\r\n  init() {\r\n    clearChildren(this.pathGroup);\r\n    clearChildren(this.instanceGroup);\r\n    for(const oldMask of this.defsElement.querySelectorAll('mask.puzzle-mask'))\r\n      oldMask.remove();\r\n    this.time = 0;\r\n    this.baseTime = 0;\r\n    this.startTime = new Date();\r\n    delete this.endTime;\r\n    delete this.resumeTime;\r\n    this.timeDisp.textContent = '--:--';\r\n    if(this.timer != null) {\r\n      clearInterval(this.timer);\r\n      delete this.timer;\r\n    }\r\n    const paths = new JigsawGenerator(\r\n      this.width, this.height,\r\n      this._xc, this._yc,\r\n      undefined, undefined, undefined,\r\n      10,\r\n    ).toSvgElements(this.document, this.pathGroup);\r\n    const viewWidth = Math.max(640, this.width * 1.5);\r\n    const viewHeight = Math.max(480, this.height * 1.5);\r\n    this.root.setAttribute('viewbox', `0 0 ${viewWidth} ${viewHeight}`);\r\n    this.root.setAttribute('width', viewWidth.toString(10));\r\n    this.root.setAttribute('height', viewHeight.toString(10));\r\n    this.imageElement.href.baseVal = this.imageUrl;\r\n    this.imageElement.setAttribute('width', this.width.toString());\r\n    this.imageElement.setAttribute('height', this.height.toString());\r\n    for(const path of paths) {\r\n      const mask = this.defsElement.appendChild(this.document.createElementNS(NS_SVG, 'mask'));\r\n      mask.id = `${path.id}-m`;\r\n      mask.classList.add('puzzle-mask');\r\n\r\n      const maskPath = mask.appendChild(this.document.createElementNS(NS_SVG, 'use'));\r\n      maskPath.href.baseVal = `#${path.id}`;\r\n      maskPath.setAttribute('fill', 'white');\r\n\r\n      const instance = this.instanceGroup.appendChild(this.document.createElementNS(NS_SVG, 'g'));\r\n      instance.id = `${path.id}-i`;\r\n      instance.classList.add('draggable');\r\n\r\n      const base = instance.appendChild(this.document.createElementNS(NS_SVG, 'use'));\r\n      base.href.baseVal = `#${this.imageElement.id}`;\r\n      base.setAttribute('mask', `url(#${mask.id})`);\r\n\r\n      const decoPath = instance.appendChild(this.document.createElementNS(NS_SVG, 'use'));\r\n      decoPath.classList.add('handler');\r\n      decoPath.href.baseVal = `#${path.id}`;\r\n      decoPath.setAttribute('stroke', 'black');\r\n      decoPath.setAttribute('fill', 'transparent');\r\n\r\n      const m = pathIdMatcher.exec(path.id);\r\n      if(m) {\r\n        const w = this.width / this._xc;\r\n        const h = this.height / this._yc;\r\n        instance.transform.baseVal.appendItem(this.root.createSVGTransform()).setTranslate(\r\n          Math.round(Math.random() * (viewWidth - w) - parseInt(m[1], 10) * w),\r\n          Math.round(Math.random() * (viewHeight - h) - parseInt(m[2], 10) * h),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private onDrag() {\r\n    if(this.timer != null) return;\r\n    this.resumeTime = new Date();\r\n    this.timer = window.setInterval(this.updateTime.bind(this), 1000);\r\n    this.updateTime();\r\n  }\r\n\r\n  private onDrop(state: DraggingState) {\r\n    const { id } = state.target.parentNode as Element;\r\n    const m = pathIdMatcher.exec(id);\r\n    if(!m) return;\r\n    const x = parseInt(m[1], 10);\r\n    const y = parseInt(m[2], 10);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x + 1}-${y}-i`);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x - 1}-${y}-i`);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x}-${y + 1}-i`);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x}-${y - 1}-i`);\r\n    if(this.instanceGroup.childElementCount > 1)\r\n      return;\r\n    this.endTime = new Date();\r\n    if(this.timer != null) {\r\n      clearInterval(this.timer);\r\n      delete this.timer;\r\n    }\r\n    const lastElement = this.instanceGroup.querySelector<SVGGraphicsElement>('.draggable.group');\r\n    if(lastElement) {\r\n      lastElement.classList.remove('draggable');\r\n      lastElement.transform.baseVal.removeItem(0);\r\n    }\r\n    showCertificate(this);\r\n  }\r\n\r\n  private checkAndMerge(current: SVGGraphicsElement, next: string) {\r\n    const other = this.instanceGroup.querySelector(next)?.closest<SVGGraphicsElement>('.draggable');\r\n    if(!other || this.isDragging(other) || other === current)\r\n      return current;\r\n    const t1 = current.transform.baseVal;\r\n    if(!t1.numberOfItems) return current;\r\n    const t2 = other.transform.baseVal;\r\n    if(!t2.numberOfItems) return current;\r\n    const m1 = t1.getItem(0).matrix;\r\n    const m2 = t2.getItem(0).matrix;\r\n    if(Math.sqrt((m1.e - m2.e) ** 2 + (m1.f - m2.f) ** 2) > 3)\r\n      return current;\r\n    const currentIsGroup = current.classList.contains('group');\r\n    const otherIsGroup = other.classList.contains('group');\r\n    if(currentIsGroup) {\r\n      if(otherIsGroup) {\r\n        for(const child of Array.from(other.childNodes))\r\n          current.appendChild(child);\r\n        other.remove();\r\n      } else {\r\n        other.classList.remove('draggable');\r\n        t2.removeItem(0);\r\n        current.appendChild(other);\r\n      }\r\n      return current;\r\n    }\r\n    if(otherIsGroup) {\r\n      current.classList.remove('draggable');\r\n      t1.removeItem(0);\r\n      other.appendChild(current);\r\n      return other;\r\n    }\r\n    const newGroup = current.parentNode!.appendChild(this.document.createElementNS(NS_SVG, 'g'));\r\n    newGroup.classList.add('draggable', 'group');\r\n    newGroup.appendChild(current);\r\n    current.classList.remove('draggable');\r\n    newGroup.appendChild(other);\r\n    other.classList.remove('draggable');\r\n    const t = t2.getItem(0);\r\n    t1.removeItem(0);\r\n    t2.removeItem(0);\r\n    newGroup.transform.baseVal.appendItem(t);\r\n    return newGroup;\r\n  }\r\n\r\n  private isDragging(element: SVGElement) {\r\n    return false;\r\n  }\r\n\r\n  private updateTime() {\r\n    this.time = Date.now() - this.resumeTime!.getTime() + this.baseTime;\r\n    this.timeDisp.textContent = formatTime(this.time);\r\n  }\r\n\r\n  private menu() {\r\n    this.menuGroup.classList.add('show');\r\n  }\r\n\r\n  private load() {\r\n    const data: StoredData | null = JSON.parse(this.dataElement.textContent || 'null');\r\n    if(data == null)\r\n      return;\r\n    this.width = data.width;\r\n    this.height = data.height;\r\n    this.baseTime = data.time;\r\n    this._xc = data.xCount;\r\n    this._yc = data.yCount;\r\n    if(data.startTime != null)\r\n      this.startTime = new Date(data.startTime);\r\n    if(data.endTime != null)\r\n      this.endTime = new Date(data.endTime);\r\n  }\r\n\r\n  private save() {\r\n    if(this.resumeTime != null) this.updateTime();\r\n    this.dataElement.textContent = JSON.stringify({\r\n      width: this.width,\r\n      height: this.height,\r\n      xCount: this._xc,\r\n      yCount: this._yc,\r\n      startTime: this.startTime?.getTime(),\r\n      endTime: this.endTime?.getTime(),\r\n      time: this.time,\r\n    } as StoredData);\r\n    return downloadDocument(this.root, `puzzle-${Date.now()}.svg`);\r\n  }\r\n\r\n  private async onImageSelected() {\r\n    const { files } = this.imageSelector;\r\n    if(!files || !files.length) return;\r\n    await this.updateImage(files.item(0)!);\r\n    this.colSelector.valueAsNumber = this.xCount = Math.round(this.width / 100);\r\n    this.rowSelector.valueAsNumber = this.yCount;\r\n  }\r\n\r\n  private onColChange() {\r\n    this.xCount = this.colSelector.valueAsNumber;\r\n    this.rowSelector.valueAsNumber = this.yCount;\r\n  }\r\n\r\n  private onRowChange() {\r\n    this.yCount = this.rowSelector.valueAsNumber;\r\n    this.colSelector.valueAsNumber = this.xCount;\r\n  }\r\n\r\n  private async onMenuSubmit(e: Event) {\r\n    e.preventDefault();\r\n    if(!this.imageUrl) return;\r\n    this.init();\r\n    this.menuForm.reset();\r\n  }\r\n\r\n  private onMenuReset() {\r\n    this.menuGroup.classList.remove('show');\r\n  }\r\n}\r\n\r\nObject.assign(window, { main: new MainHandler() });\r\n","import { NS_SVG, getSeed } from './utils';\r\n// Modified from https://gist.github.com/Draradech/35d36347312ca6d0887aa7d55f366e30\r\n// Changes: Outputs per-puzzle path instead of one for all.\r\n\r\ninterface Stroke {\r\n  points: number[];\r\n  inst: string[];\r\n}\r\n\r\nconst svgArgsCount: { [arg: string]: number; } = {\r\n  M: 2, m: 2,\r\n  L: 2, l: 2,\r\n  H: 1, h: 1,\r\n  V: 1, v: 1,\r\n  C: 6, c: 6,\r\n  S: 4, s: 4,\r\n  Q: 4, q: 4,\r\n  T: 2, t: 2,\r\n  A: 7, a: 7,\r\n  z: 0,\r\n};\r\n\r\nexport class JigsawGenerator {\r\n  cells: string[][];\r\n\r\n  private strokes = new Map<number, Stroke[]>();\r\n  private a: number = 0;\r\n  private b: number = 0;\r\n  private c: number = 0;\r\n  private d: number = 0;\r\n  private e: number = 0;\r\n  private flip: boolean = false;\r\n  private xi: number;\r\n  private yi: number;\r\n  private vertical: boolean;\r\n  private get sl() { return this.vertical ? this.height / this.yCount : this.width / this.xCount; }\r\n  private get sw() { return this.vertical ? this.width / this.xCount : this.height / this.yCount; }\r\n  private get ol() { return this.sl * (this.vertical ? this.yi : this.xi); }\r\n  private get ow() { return this.sw * (this.vertical ? this.xi : this.yi); }\r\n\r\n  constructor(\r\n    public width: number,\r\n    public height: number,\r\n    public xCount: number,\r\n    public yCount: number,\r\n    public seed?: any,\r\n    public tabSize: number = 0.1,\r\n    public jitter: number = 0.04,\r\n    public radius: number = 0,\r\n  ) {\r\n    this.seed = getSeed(seed ?? Math.trunc(Math.random() * Number.MAX_SAFE_INTEGER));\r\n    this.radius = Math.min(this.radius, this.sl, this.sw);\r\n\r\n    this.vertical = false;\r\n    for(this.yi = 1; this.yi < this.yCount; this.yi++) {\r\n      this.first();\r\n      for(this.xi = 0; this.xi < this.xCount; this.xi++) {\r\n        this.next();\r\n        this.pushStroke(this.xi + this.xCount * (this.yi - 1), this.generateStroke(true));\r\n        this.pushStroke(this.xi + this.xCount * this.yi, this.generateStroke());\r\n      }\r\n    }\r\n\r\n    this.vertical = true;\r\n    for(this.xi = 1; this.xi < this.xCount; this.xi++) {\r\n      this.first();\r\n      for(this.yi = 0; this.yi < this.yCount; this.yi++) {\r\n        this.next();\r\n        this.pushStroke(this.xi - 1 + this.xCount * this.yi, this.generateStroke());\r\n        this.pushStroke(this.xi + this.xCount * this.yi, this.generateStroke(true));\r\n      }\r\n    }\r\n\r\n    this.vertical = false;\r\n    this.pushStroke(0, {\r\n      points: [\r\n        0, this.sw,\r\n        0, this.radius,\r\n        this.radius, this.radius, 0, 0, 1,\r\n        this.radius, 0,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.vertical = true;\r\n    this.pushStroke(this.xCount - 1, {\r\n      points: [\r\n        this.width - this.sw, 0,\r\n        this.width - this.radius, 0,\r\n        this.radius, this.radius, 0, 0, 1,\r\n        this.width, this.radius,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.vertical = false;\r\n    this.pushStroke(this.xCount * this.yCount - 1, {\r\n      points: [\r\n        this.width, this.height - this.sw,\r\n        this.width, this.height - this.radius,\r\n        this.radius, this.radius, 0, 0, 1,\r\n        this.width - this.radius, this.height,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.vertical = true;\r\n    this.pushStroke(this.xCount * (this.yCount - 1), {\r\n      points: [\r\n        this.sw, this.height,\r\n        this.radius, this.height,\r\n        this.radius, this.radius, 0, 0, 1, 0,\r\n        this.height - this.radius,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.cells = [];\r\n    for(const [i, stroke] of this.strokes) {\r\n      const y = Math.trunc(i / this.xCount);\r\n      (this.cells[y] ?? (this.cells[y] = []))[i % this.xCount] = this.getNormalizedStroke(stroke);\r\n    }\r\n\r\n    this.strokes.clear();\r\n  }\r\n\r\n  toSvgElements(document: Document, parent?: SVGElement) {\r\n    const result: SVGPathElement[] = [];\r\n    for(let y = 0; y < this.cells.length; y++) {\r\n      const row = this.cells[y];\r\n      for(let x = 0; x < row.length; x++) {\r\n        const elm = document.createElementNS(NS_SVG, 'path');\r\n        elm.setAttribute('d', row[x]);\r\n        elm.id = `p-${x}-${y}`;\r\n        result.push(elm);\r\n        parent?.appendChild(elm);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private generateStroke(reverse?: boolean): Stroke {\r\n    const { a, b, c, d, e, tabSize } = this;\r\n    const p0l = this.l(0);\r\n    const p0w = this.w(0);\r\n    const p1l = this.l(0.2);\r\n    const p1w = this.w(a);\r\n    const p2l = this.l(0.5 + b + d);\r\n    const p2w = this.w(-tabSize + c);\r\n    const p3l = this.l(0.5 - tabSize + b);\r\n    const p3w = this.w(tabSize + c);\r\n    const p4l = this.l(0.5 - 2 * tabSize + b - d);\r\n    const p4w = this.w(3 * tabSize + c);\r\n    const p5l = this.l(0.5 + 2 * tabSize + b - d);\r\n    const p5w = this.w(3 * tabSize + c);\r\n    const p6l = this.l(0.5 + tabSize + b);\r\n    const p6w = this.w(tabSize + c);\r\n    const p7l = this.l(0.5 + b + d);\r\n    const p7w = this.w(-tabSize + c);\r\n    const p8l = this.l(0.8);\r\n    const p8w = this.w(e);\r\n    const p9l = this.l(1);\r\n    const p9w = this.w(0);\r\n    return {\r\n      points: this.vertical ? reverse ? [\r\n        p9w, p9l, p8w, p8l, p7w, p7l, p6w, p6l,\r\n        p5w, p5l, p4w, p4l, p3w, p3l, p2w, p2l,\r\n        p1w, p1l, p0w, p0l,\r\n      ] : [\r\n        p0w, p0l, p1w, p1l, p2w, p2l, p3w, p3l,\r\n        p4w, p4l, p5w, p5l, p6w, p6l, p7w, p7l,\r\n        p8w, p8l, p9w, p9l,\r\n      ] : reverse ? [\r\n        p9l, p9w, p8l, p8w, p7l, p7w, p6l, p6w,\r\n        p5l, p5w, p4l, p4w, p3l, p3w, p2l, p2w,\r\n        p1l, p1w, p0l, p0w,\r\n      ] : [\r\n        p0l, p0w, p1l, p1w, p2l, p2w, p3l, p3w,\r\n        p4l, p4w, p5l, p5w, p6l, p6w, p7l, p7w,\r\n        p8l, p8w, p9l, p9w,\r\n      ],\r\n      inst: ['M', 'C', 'C', 'C'],\r\n    };\r\n  }\r\n\r\n  private random() {\r\n    const x = Math.sin(this.seed++) * 10000;\r\n    return x - Math.floor(x);\r\n  }\r\n\r\n  private nextJitter() {\r\n    return this.random() * this.jitter * 2 - this.jitter;\r\n  }\r\n\r\n  private first() {\r\n    this.e = this.nextJitter();\r\n  }\r\n\r\n  private next() {\r\n    const filp = this.flip;\r\n    this.flip = this.random() >= 0.5;\r\n    this.a = (this.flip === filp ? -this.e : this.e);\r\n    this.b = this.nextJitter();\r\n    this.c = this.nextJitter();\r\n    this.d = this.nextJitter();\r\n    this.e = this.nextJitter();\r\n  }\r\n\r\n  private l(v: number) {\r\n    return Math.round((this.ol + this.sl * v + Number.EPSILON) * 1000) / 1000;\r\n  }\r\n\r\n  private w(v: number) {\r\n    return Math.round((this.ow + this.sw * v * (this.flip ? -1 : 1) + Number.EPSILON) * 1000) / 1000;\r\n  }\r\n\r\n  private pushStroke(i: number, stroke: Stroke) {\r\n    const strokes = this.strokes.get(i);\r\n    if(strokes)\r\n      strokes.push(stroke);\r\n    else\r\n      this.strokes.set(i, [stroke]);\r\n  }\r\n\r\n  private getNormalizedStroke(strokes: Stroke[]) {\r\n    if(strokes == null || !strokes.length)\r\n      return '';\r\n    if(strokes.length > 1) {\r\n      const strokeSet = new Set(strokes);\r\n      const result: Stroke = { points: [], inst: [] };\r\n      while(strokeSet.size) {\r\n        let found = false;\r\n        for(const other of strokeSet)\r\n          if(!result.points.length) {\r\n            result.points = other.points;\r\n            result.inst = other.inst;\r\n            found = true;\r\n            strokeSet.delete(other);\r\n            break;\r\n          } else if(\r\n            result.points[0] === other.points[other.points.length - 2] &&\r\n            result.points[1] === other.points[other.points.length - 1]\r\n          ) {\r\n            result.points.splice(0, 2, ...other.points);\r\n            result.inst.splice(0, 1, ...other.inst);\r\n            found = true;\r\n            strokeSet.delete(other);\r\n            break;\r\n          } else if(\r\n            other.points[0] === result.points[result.points.length - 2] &&\r\n            other.points[1] === result.points[result.points.length - 1]\r\n          ) {\r\n            other.points.splice(0, 2, ...result.points);\r\n            other.inst.splice(0, 1, ...result.inst);\r\n            result.points = other.points;\r\n            result.inst = other.inst;\r\n            found = true;\r\n            strokeSet.delete(other);\r\n            break;\r\n          }\r\n        if(!found)\r\n          break;\r\n      }\r\n      strokes = [result];\r\n    }\r\n    const { points, inst } = strokes[0];\r\n    let j = 0;\r\n    let result = '';\r\n    for(const i of inst) {\r\n      result += i;\r\n      const c = svgArgsCount[i];\r\n      if(c) result += points.slice(j, j += c).join(' ');\r\n    }\r\n    return result + 'z';\r\n  }\r\n}\r\n","export interface DraggingState {\r\n  target: SVGGraphicsElement;\r\n  element: SVGGraphicsElement;\r\n  identifier?: number;\r\n  transform: SVGTransform;\r\n  offsetX: number;\r\n  offsetY: number;\r\n}\r\n\r\nexport function registerDraggable(\r\n  root: GlobalEventHandlers = document,\r\n  onDrag?: (element: SVGElement) => void,\r\n  onDrop?: (state: DraggingState) => void,\r\n  draggableClass = '.draggable', handlerClass = '.handler',\r\n) {\r\n  const draggingElements = new Map<SVGElement, DraggingState>();\r\n  const states = new Map<number | undefined, DraggingState>();\r\n\r\n  root.addEventListener('mousedown', onStartDrag, true);\r\n  root.addEventListener('mousemove', onDragging);\r\n  root.addEventListener('mouseup', onEndDrag);\r\n  root.addEventListener('mouseleave', onEndDrag);\r\n  root.addEventListener('touchstart', onStartDrag, true);\r\n  root.addEventListener('touchmove', onDragging);\r\n  root.addEventListener('touchend', onEndDrag);\r\n  root.addEventListener('touchcancel', onEndDrag);\r\n\r\n  function getState(e: MouseEvent | Touch) {\r\n    const state = states.get((e as Touch).identifier);\r\n    return state && (state.identifier == null) === (e instanceof MouseEvent) ? state : null;\r\n  }\r\n\r\n  function onStartDrag(e: MouseEvent | TouchEvent) {\r\n    let target = (e.target as Element)?.closest?.(`${draggableClass} ${handlerClass}, ${draggableClass}${handlerClass}`);\r\n    if(!(target instanceof SVGGraphicsElement)) return;\r\n    const root = target.ownerSVGElement!;\r\n    let pointer: Touch | MouseEvent | undefined;\r\n    let identifier: number | undefined;\r\n    const { targetTouches } = e as TouchEvent;\r\n    if(targetTouches) {\r\n      const ctm = target.getScreenCTM()!.inverse();\r\n      if(target instanceof SVGGeometryElement)\r\n        for(let i = 0; i < targetTouches.length; i++) {\r\n          const touch = targetTouches[i];\r\n          const lp = getLocalPoint(root, touch, ctm);\r\n          if(target.isPointInFill(lp) || target.isPointInStroke(lp)) {\r\n            identifier = touch.identifier;\r\n            pointer = touch;\r\n            break;\r\n          }\r\n        }\r\n      else {\r\n        const bbox = target.getBBox();\r\n        for(let i = 0; i < targetTouches.length; i++) {\r\n          const touch = targetTouches[i];\r\n          const lp = getLocalPoint(root, touch, ctm);\r\n          if(bbox.left <= lp.x && bbox.right > lp.x &&\r\n            bbox.top <= lp.y && bbox.bottom > lp.y) {\r\n            identifier = touch.identifier;\r\n            pointer = touch;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if((e as MouseEvent).button !== 0)\r\n        return;\r\n      pointer = e as MouseEvent;\r\n    }\r\n    if(!pointer) return;\r\n    const element = target.matches(draggableClass) ? target : target?.closest<SVGGraphicsElement>(draggableClass) as SVGGraphicsElement;\r\n    if(draggingElements.has(element)) return;\r\n    const transforms = element.transform.baseVal;\r\n    if(!transforms.numberOfItems || transforms.getItem(0).type !== SVGTransform.SVG_TRANSFORM_TRANSLATE) {\r\n      const transform = root.createSVGTransform();\r\n      transform.setTranslate(0, 0);\r\n      transforms.insertItemBefore(transform, 0);\r\n    }\r\n    const transform = transforms.getItem(0);\r\n    const offset = getLocalPoint(\r\n      root, pointer, element.parentNode! as SVGGraphicsElement,\r\n    ).matrixTransform(transform.matrix.inverse());\r\n    const state: DraggingState = {\r\n      element, target, identifier, transform,\r\n      offsetX: offset.x,\r\n      offsetY: offset.y,\r\n    };\r\n    draggingElements.set(target, state);\r\n    states.set(identifier, state);\r\n    element.parentNode?.appendChild(element);\r\n    interceptEvent(e);\r\n    onDrag?.(element);\r\n  }\r\n  \r\n  function onDragging(e: MouseEvent | TouchEvent) {\r\n    const { changedTouches } = e as TouchEvent;\r\n    if(changedTouches ?\r\n      Array.prototype.map.call(changedTouches, handleDrag).includes(true) :\r\n      handleDrag(e as MouseEvent))\r\n      interceptEvent(e);\r\n  }\r\n  \r\n  function handleDrag(e: MouseEvent | Touch) {\r\n    const state = getState(e);\r\n    if(!state) return false;\r\n    const coord = getLocalPoint(\r\n      state.element.ownerSVGElement!, e,\r\n      state.element.parentNode! as SVGGraphicsElement,\r\n    );\r\n    if(!coord) return false;\r\n    state.transform.setTranslate(\r\n      coord.x - state.offsetX,\r\n      coord.y - state.offsetY,\r\n    );\r\n    return true;\r\n  }\r\n  \r\n  function onEndDrag(e: MouseEvent | TouchEvent) {\r\n    const { changedTouches } = e as TouchEvent;\r\n    if(changedTouches ?\r\n      Array.prototype.map.call(changedTouches, handleEndDrag).includes(true) :\r\n      handleEndDrag(e as MouseEvent))\r\n      interceptEvent(e);\r\n  }\r\n  \r\n  function handleEndDrag(e: MouseEvent | Touch) {\r\n    const state = getState(e);\r\n    if(!state) return false;\r\n    draggingElements.delete(state.element);\r\n    states.delete((e as Touch).identifier);\r\n    onDrop?.(state);\r\n    return true;\r\n  }\r\n\r\n  return {\r\n    isDragging(element: SVGElement) {\r\n      return draggingElements.has(element);\r\n    },\r\n  };\r\n}\r\n\r\nfunction getLocalPoint(\r\n  root: SVGSVGElement,\r\n  pointer: MouseEvent | Touch,\r\n  base: DOMMatrix | SVGGraphicsElement,\r\n) {\r\n  const p = root.createSVGPoint();\r\n  p.x = pointer.clientX;\r\n  p.y = pointer.clientY;\r\n  return p.matrixTransform(\r\n    base instanceof SVGGraphicsElement ?\r\n    base.getScreenCTM()!.inverse() :\r\n    base,\r\n  );\r\n}\r\n\r\nfunction interceptEvent(e: Event) {\r\n  if(e.cancelable && !e.defaultPrevented)\r\n    e.preventDefault();\r\n  e.stopPropagation();\r\n}","import { NS_SVG, NS_XHTML } from './utils';\r\n\r\nexport async function downloadDocument(src: Element, name: string) {\r\n  const document = src.ownerDocument;\r\n  const root = document.implementation.createDocument(NS_SVG, 'svg', null);\r\n  const clone = root.importNode(src, true);\r\n  root.replaceChild(clone, root.firstChild!);\r\n  await Promise.all(Array.prototype.map.call(clone.querySelectorAll('script'), resolveScript));\r\n  const blob = new Blob([new XMLSerializer().serializeToString(root)], { type: 'image/svg+xml' });\r\n  const element = document.createElementNS(NS_XHTML, 'a') as HTMLAnchorElement;\r\n  element.href = URL.createObjectURL(blob);\r\n  element.download = name;\r\n  element.click();\r\n  URL.revokeObjectURL(element.href);\r\n}\r\n\r\nasync function resolveScript(script: Element) {\r\n  if(script instanceof HTMLScriptElement) {\r\n    const { src } = script;\r\n    if(!src) return;\r\n    script.removeAttribute('src');\r\n    script.textContent = await (await fetch(src)).text();\r\n  } else if(script instanceof SVGScriptElement) {\r\n    const href = script.href.baseVal;\r\n    if(!href) return;\r\n    script.removeAttribute('href');\r\n    script.appendChild(script.ownerDocument.createCDATASection(await (await fetch(href)).text()));\r\n  }\r\n}","import { MainHandler } from '.';\r\nimport { formatTime } from './utils';\r\n\r\nconst certificate = document.querySelector('#certificate')!;\r\nconst timeStartElement = certificate.querySelector<SVGTextElement>('text#time-start')!;\r\nconst timeEndElement = certificate.querySelector<SVGTextElement>('text#time-end')!;\r\nconst timeUsedElement = certificate.querySelector<SVGTextElement>('text#time-used')!;\r\nconst puzzleSizeElement = certificate.querySelector<SVGTextElement>('test#puzzle-size')!;\r\n\r\nexport function showCertificate(mainHandler: MainHandler) {\r\n  if(!certificate) return;\r\n  certificate.classList.add('show');\r\n  certificate.setAttribute('visibility', 'visible');\r\n  certificate.setAttribute('pointer-events', 'visible');\r\n  timeStartElement.textContent = mainHandler.startTime?.toString() ?? '';\r\n  timeEndElement.textContent = mainHandler.endTime?.toString() ?? '';\r\n  timeUsedElement.textContent = formatTime(mainHandler.time);\r\n  puzzleSizeElement.textContent = `${mainHandler.xCount}×${mainHandler.yCount} (${mainHandler.xCount * mainHandler.yCount}Pieces)`;\r\n}\r\n\r\nexport function hideCetificate() {\r\n  certificate?.classList.remove('show');\r\n  timeStartElement.textContent = '';\r\n  timeEndElement.textContent = '';\r\n  timeUsedElement.textContent = '';\r\n  puzzleSizeElement.textContent = '';\r\n}"],"sourceRoot":""}
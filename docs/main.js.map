{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.ts","webpack:///./src/index.ts","webpack:///./src/puzzle-generator.ts","webpack:///./src/drag-handler.ts","webpack:///./src/xml-clone.ts","webpack:///./src/certificate.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","NS_SVG","NS_XHTML","round","Math","Number","EPSILON","getUrl","blob","Promise","resolve","reject","reader","FileReader","readAsDataURL","addEventListener","result","Error","getImageDimensions","src","img","Image","width","naturalWidth","height","naturalHeight","clearChildren","node","hasChildNodes","removeChild","firstChild","formatNumber","digits","toString","padStart","formatTime","time","absTime","abs","floor","formatDateTime","date","Date","yr","getFullYear","mo","getMonth","dy","getDate","hr","getHours","mi","getMinutes","se","getSeconds","getSeed","seed","hash","length","imul","charCodeAt","pathIdMatcher","MainHandler","root","document","baseTime","theshold","_xc","_yc","querySelector","classList","remove","this","Document","ownerDocument","defsElement","pathGroup","instanceGroup","timeDisp","dataElement","menuGroup","menuForm","onMenuSubmit","onMenuReset","imageSelector","onImageSelected","colSelector","onColChange","rowSelector","onRowChange","imagePreview","menu","save","imageElement","imageUrl","href","baseVal","assign","registerDraggable","onDrag","onDrop","load","Blob","max","sqrt","oldMask","querySelectorAll","startTime","calculateTheshold","endTime","resumeTime","textContent","timer","clearInterval","paths","JigsawGenerator","undefined","toSvgElements","viewWidth","viewHeight","setAttribute","path","mask","appendChild","createElementNS","id","add","maskPath","instance","base","decoPath","exec","w","h","transform","appendItem","createSVGTransform","setTranslate","random","parseInt","element","window","setInterval","updateTime","state","target","parentNode","x","y","checkAndMerge","childElementCount","lastElement","removeItem","showCertificate","current","next","other","closest","isDragging","t1","numberOfItems","t2","m1","getItem","matrix","m2","e","f","currentIsGroup","contains","otherIsGroup","child","Array","from","childNodes","newGroup","now","getTime","data","JSON","parse","xCount","yCount","stringify","downloadDocument","files","file","item","updateImage","valueAsNumber","startsWith","URL","revokeObjectURL","createObjectURL","preventDefault","init","reset","svgArgsCount","M","L","H","V","v","C","S","Q","q","T","A","a","z","tabSize","jitter","radius","strokes","Map","b","flip","trunc","MAX_SAFE_INTEGER","min","sl","sw","vertical","yi","first","xi","pushStroke","generateStroke","points","inst","cells","stroke","getNormalizedStroke","clear","parent","row","elm","push","reverse","p0l","p0w","p1l","p1w","p2l","p2w","p3l","p3w","p4l","p4w","p5l","p5w","p6l","p6w","p7l","p7w","p8l","p8w","p9l","p9w","sin","nextJitter","filp","ol","ow","set","strokeSet","Set","size","found","delete","splice","j","slice","join","draggableClass","handlerClass","draggingElements","states","onStartDrag","onDragging","onEndDrag","capture","passive","getState","identifier","MouseEvent","SVGGraphicsElement","ownerSVGElement","pointer","targetTouches","srcElement","ctm","getScreenCTM","inverse","SVGUseElement","SVGGeometryElement","touch","lp","getLocalPoint","isPointInFill","isPointInStroke","bbox","getBBox","left","right","top","bottom","button","matches","has","transforms","type","SVGTransform","SVG_TRANSFORM_TRANSLATE","insertItemBefore","offset","matrixTransform","offsetX","offsetY","interceptEvent","changedTouches","map","handleDrag","includes","coord","handleEndDrag","createSVGPoint","clientX","clientY","cancelable","defaultPrevented","stopPropagation","async","implementation","createDocument","clone","importNode","replaceChild","all","resolveScript","XMLSerializer","serializeToString","download","click","script","HTMLScriptElement","removeAttribute","fetch","text","SVGScriptElement","createCDATASection","certificate","timeStartElement","timeEndElement","timeUsedElement","puzzleSizeElement","mainHandler","hideCetificate"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GAAW,CAC9B,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,EAAG,MACHH,QAAS,IAIVI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,EAAI,KAGX,OAAOF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC/C,IAAIZ,EAAoBa,EAAEX,EAASS,GAAO,CACzCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,WAAY,KAAMC,IAAKL,MAKhEZ,EAAoBkB,EAAI,SAAShB,GAChC,UAAUiB,SAAW,aAAeA,OAAOC,YAAa,CACvDN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,MAAO,QAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GACvC,GAAGA,EAAO,EAAGF,EAAQrB,EAAoBqB,GACzC,GAAGE,EAAO,EAAG,OAAOF,EACpB,GAAIE,EAAO,UAAaF,IAAU,UAAYA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MACvB1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,WAAY,KAAMK,MAAOA,IAChE,GAAGE,EAAO,UAAYF,GAAS,SAAU,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,SAASM,IAAe,OAAO3B,EAAO,YACtC,SAAS4B,IAAqB,OAAO5B,GACtCH,EAAoBU,EAAEE,EAAQ,IAAKA,GACnC,OAAOA,GAIRZ,EAAoBa,EAAI,SAASmB,EAAQC,GAAY,OAAOnB,OAAOoB,UAAUC,eAAe5B,KAAKyB,EAAQC,IAGzGjC,EAAoBoC,EAAI,GAIxB,OAAOpC,EAAoBA,EAAoBqC,EAAI,I;qJClFxC,EAAAC,OAAS,6BACT,EAAAC,SAAW,+BAExB,SAAgBC,EAAMX,EAAWpB,EAAI,GACnCA,EAAI,IAAMA,EACV,OAAOgC,KAAKD,OAAOX,EAAIa,OAAOC,SAAWlC,GAAKA,EAFhD,UAKA,SAAgBmC,EAAOC,GACrB,OAAO,IAAIC,QAAgB,CAACC,EAASC,KACnC,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,iBAAiB,UAAW,IACjCL,EAAQE,EAAOI,SACjBJ,EAAOG,iBAAiB,QAAS,IAC/BJ,EAAO,IAAIM,MAAM,oCAPvB,WAWA,SAAgBC,EAAmBC,GACjC,OAAO,IAAIV,QAA4C,CAACC,EAASC,KAC/D,MAAMS,EAAM,IAAIC,MAChBD,EAAID,IAAMA,EACVC,EAAIL,iBAAiB,OAAQ,IAAML,EAAQ,CACzCY,MAAOF,EAAIG,aACXC,OAAQJ,EAAIK,iBAEdL,EAAIL,iBAAiB,QAAS,IAC5BJ,EAAO,IAAIM,MAAM,sCATvB,uBAaA,SAAgBS,EAAcC,GAC5B,MAAMA,EAAKC,gBACTD,EAAKE,YAAYF,EAAKG,YAF1B,kBAKA,SAAgBC,EAAavC,EAAWwC,GACtC,OAAOxC,EAAEyC,SAAS,IAAIC,SAASF,EAAQ,KADzC,iBAIA,SAAgBG,EAAWC,GACzB,MAAMC,EAAUjC,KAAKkC,IAAIF;CACzB,IAAIpB,EAAS,GACXe,EAAa3B,KAAKmC,MAAMF,EAAU,IAAM,IAAK,MAE7CN,EAAa3B,KAAKmC,MAAMF,EAAU,IAAM,IAAK,KAE/C,GAAGD,EAAO,KAAM,OAAQA,EAAO,EAAI,IAAM,IAAMpB,EAC/CA,EAAS,GACPe,EAAa3B,KAAKmC,MAAMF,EAAU,KAAO,IAAK,MAC5CrB,IACJ,GAAGoB,EAAO,MAAO,OAAQA,EAAO,EAAI,IAAM,IAAMpB,EAChD,MAAO,GACLe,EAAa3B,KAAKmC,MAAMH,EAAO,OAAQ,OACpCpB,IAdP,eAiBA,SAAgBwB,EAAeC,EAAa,IAAIC,MAC9C,MAAMC,EAAKF,EAAKG,cAChB,MAAMC,EAAKJ,EAAKK,WAChB,MAAMC,EAAKN,EAAKO,UAChB,MAAMC,EAAKR,EAAKS,WAChB,MAAMC,EAAKV,EAAKW,aAChB,MAAMC,EAAKZ,EAAKa,aAChB,MAAO,GACLvB,EAAagB,EAAI,MAEjBhB,EAAac,EAAK,EAAG,MAErBd,EAAaY,EAAI,MAEjBZ,EAAakB,EAAK,IAAM,GAAI,MAE5BlB,EAAaoB,EAAI,MAEjBpB,EAAasB,EAAI,MACfJ,GAAM,GAAK,KAAO,OAnBxB,mBAsBA,SAAgBM,EAAQC,GACtB,cAAcA,GACZ,IAAK,YACL,IAAK,SACH,GAAGA,GAAQ,KACTA,EAAO,GACX,QACEA,EAAOA,EAAKvB,WACd,IAAK,SAAU,CACb,IAAIwB,EAAO,EACX,IAAI,IAAI1F,EAAI,EAAGA,EAAIyF,EAAKE,OAAQ3F,IAC9B0F,EAAOrD,KAAKuD,KAAK,GAAIF,GAAQD,EAAKI,WAAW7F,GAAK,EACpDyF,EAAOC,GAGX,OAAOD,EAfT,a,qGChFA,aACA,aACA,aACA,aACA,aAEA,MAAMK,EAAgB,iBAYtB,MAAaC,EA6CX,YAAYC,EAAyCC,U,UA5BrD,KAAA1C,MAAgB,EAChB,KAAAE,OAAiB,EACjB,KAAAyC,SAAmB,EACnB,KAAAC,SAAmB,EACnB,KAAA9B,KAAe,EAIP,KAAA+B,IAAc;CACd,KAAAC,IAAc,GAoBpB,EAAAL,EAAKM,cAAc,gBAAY,0BAAEC,UAAUC,OAAO,YAClDC,KAAKT,KAAOA,EAAKM,cAAc,OAC/BG,KAAKR,SAAWD,aAAgBU,SAAWV,EAAOS,KAAKT,KAAKW,cAC5DF,KAAKG,YAAcZ,EAAKM,cAAc,QACtCG,KAAKI,UAAYb,EAAKM,cAA2B,QACjDG,KAAKK,cAAgBd,EAAKM,cAA2B,SACrDG,KAAKM,SAAWf,EAAKM,cAA8B,aACnDG,KAAKO,YAAchB,EAAKM,cAAgC,eACxDG,KAAKQ,UAAYjB,EAAKM,cAA2B,SACjDG,KAAKS,SAAWlB,EAAKM,cAA+B,iBACpDG,KAAKS,SAASlE,iBAAiB,SAAUyD,KAAKU,aAAa3F,KAAKiF,OAChEA,KAAKS,SAASlE,iBAAiB,QAASyD,KAAKW,YAAY5F,KAAKiF,OAC9DA,KAAKY,cAAgBZ,KAAKS,SAASZ,cAAgC,qBACnEG,KAAKY,cAAcrE,iBAAiB,SAAUyD,KAAKa,gBAAgB9F,KAAKiF,OACxEA,KAAKc,YAAcd,KAAKS,SAASZ,cAAgC,mBACjE,MAAMkB,EAAcf,KAAKe,YAAYhG,KAAKiF,MAC1CA,KAAKc,YAAYvE,iBAAiB,SAAUwE,GAC5Cf,KAAKc,YAAYvE,iBAAiB,OAAQwE;CAC1Cf,KAAKgB,YAAchB,KAAKS,SAASZ,cAAgC,mBACjE,MAAMoB,EAAcjB,KAAKiB,YAAYlG,KAAKiF,MAC1CA,KAAKgB,YAAYzE,iBAAiB,SAAU0E,GAC5CjB,KAAKgB,YAAYzE,iBAAiB,OAAQ0E,GAC1CjB,KAAKkB,aAAelB,KAAKS,SAASZ,cAAgC,gBAClE,EAAAG,KAAKT,KAAKM,cAAc,gBAAY,0BAAEtD,iBAAiB,QAASyD,KAAKmB,KAAKpG,KAAKiF,QAC/E,EAAAA,KAAKT,KAAKM,cAAc,iBAAa,0BAAEtD,iBAAiB,QAASyD,KAAKoB,KAAKrG,KAAKiF,OAChFA,KAAKqB,aAAe9B,EAAKM,cAA+B,aACxDG,KAAKsB,SAAWtB,KAAKqB,aAAaE,KAAKC,QACvCvH,OAAOwH,OAAOzB,KAAM,EAAA0B,kBAClBnC,EAAMS,KAAK2B,OAAO5G,KAAKiF,MAAOA,KAAK4B,OAAO7G,KAAKiF,QAEjDA,KAAK6B,OA/CP,aACE,OAAO7B,KAAKL,IAEd,WAAWnF,GACTwF,KAAKL,IAAMnF,EACXwF,KAAKJ,IAAMhE,KAAKD,MAAMnB,EAAQwF,KAAKlD,MAAQkD,KAAKhD,QAGlD,aACE,OAAOgD,KAAKJ,IAEd,WAAWpF,GACTwF,KAAKJ,IAAMpF,EACXwF,KAAKL,IAAM/D,KAAKD,MAAMnB,EAAQwF,KAAKhD,OAASgD,KAAKlD,OAqCnD,kBAAkBH,GAChB,GAAGA,aAAemF,KAChBnF,QAAY,EAAAZ,OAAOY,GACrB,MAAM,MAAEG,EAAK,OAAEE,SAAiB,EAAAN,mBAAmBC,GACnDqD,KAAKsB,SAAW3E,EAChBqD,KAAKlD,MAAQA;CACbkD,KAAKhD,OAASA,EACdgD,KAAKL,IAAM/D,KAAKD,MAAMmB,EAAQ,KAC9BkD,KAAKJ,IAAMhE,KAAKD,MAAMqB,EAAS,KAGjC,oBACEgD,KAAKN,SAAW9D,KAAKmG,IAAI,EAAGnG,KAAKoG,MAAMhC,KAAKlD,MAAQkD,KAAKL,MAAQ,GAAKK,KAAKhD,OAASgD,KAAKJ,MAAQ,GAAK,IAGxG,OACE,EAAA1C,cAAc8C,KAAKI,WACnB,EAAAlD,cAAc8C,KAAKK,eACnB,IAAI,MAAM4B,KAAWjC,KAAKG,YAAY+B,iBAAiB,oBACrDD,EAAQlC,SACVC,KAAKpC,KAAO,EACZoC,KAAKP,SAAW,EAChBO,KAAKmC,UAAY,IAAIjE,KACrB8B,KAAKoC,2BACEpC,KAAKqC,eACLrC,KAAKsC,WACZtC,KAAKM,SAASiC,YAAc,QAC5B,GAAGvC,KAAKwC,OAAS,KAAM,CACrBC,cAAczC,KAAKwC,cACZxC,KAAKwC,MAEd,MAAME,EAAQ,IAAI,EAAAC,gBAChB3C,KAAKlD,MAAOkD,KAAKhD,OACjBgD,KAAKL,IAAKK,KAAKJ,IACfgD,UAAWA,UAAWA,UACtB,IACAC,cAAc7C,KAAKR,SAAUQ,KAAKI,WACpC,MAAM0C,EAAYlH,KAAKmG,IAAI,IAAK/B,KAAKlD,MAAQ,KAC7C,MAAMiG,EAAanH,KAAKmG,IAAI,IAAK/B,KAAKhD,OAAS,KAC/CgD,KAAKT,KAAKyD,aAAa,UAAW,OAAOF,KAAaC,KACtD/C,KAAKT,KAAKyD,aAAa,QAASF,EAAUrF,SAAS,KACnDuC,KAAKT,KAAKyD,aAAa,SAAUD,EAAWtF,SAAS,KACrDuC,KAAKqB,aAAaE,KAAKC,QAAUxB,KAAKsB;CACtCtB,KAAKqB,aAAa2B,aAAa,QAAShD,KAAKlD,MAAMW,YACnDuC,KAAKqB,aAAa2B,aAAa,SAAUhD,KAAKhD,OAAOS,YACrD,IAAI,MAAMwF,KAAQP,EAAO,CACvB,MAAMQ,EAAOlD,KAAKG,YAAYgD,YAAYnD,KAAKR,SAAS4D,gBAAgB,EAAA3H,OAAQ,SAChFyH,EAAKG,GAAK,GAAGJ,EAAKI,OAClBH,EAAKpD,UAAUwD,IAAI,eAEnB,MAAMC,EAAWL,EAAKC,YAAYnD,KAAKR,SAAS4D,gBAAgB,EAAA3H,OAAQ,QACxE8H,EAAShC,KAAKC,QAAU,IAAIyB,EAAKI,KACjCE,EAASP,aAAa,OAAQ,SAE9B,MAAMQ,EAAWxD,KAAKK,cAAc8C,YAAYnD,KAAKR,SAAS4D,gBAAgB,EAAA3H,OAAQ,MACtF+H,EAASH,GAAK,GAAGJ,EAAKI,OACtBG,EAAS1D,UAAUwD,IAAI,aAEvB,MAAMG,EAAOD,EAASL,YAAYnD,KAAKR,SAAS4D,gBAAgB,EAAA3H,OAAQ,QACxEgI,EAAKlC,KAAKC,QAAU,IAAIxB,KAAKqB,aAAagC,KAC1CI,EAAKT,aAAa,OAAQ,QAAQE,EAAKG,OAEvC,MAAMK,EAAWF,EAASL,YAAYnD,KAAKR,SAAS4D,gBAAgB,EAAA3H,OAAQ,QAC5EiI,EAAS5D,UAAUwD,IAAI,WACvBI,EAASnC,KAAKC,QAAU,IAAIyB,EAAKI,KACjCK,EAASV,aAAa,SAAU,SAChCU,EAASV,aAAa,OAAQ,eAE9B,MAAMrJ,EAAI0F,EAAcsE,KAAKV,EAAKI,IAClC,GAAG1J,EAAG,CACJ,MAAMiK,EAAI5D,KAAKlD,MAAQkD,KAAKL,IAC5B,MAAMkE,EAAI7D,KAAKhD,OAASgD,KAAKJ;CAC7B4D,EAASM,UAAUtC,QAAQuC,WAAW/D,KAAKT,KAAKyE,sBAAsBC,aACpErI,KAAKD,MAAMC,KAAKsI,UAAYpB,EAAYc,GAAKO,SAASxK,EAAE,GAAI,IAAMiK,GAClEhI,KAAKD,MAAMC,KAAKsI,UAAYnB,EAAac,GAAKM,SAASxK,EAAE,GAAI,IAAMkK,MAMnE,OAAOO,GACbA,EAAQtE,UAAUwD,IAAI,YACtB,GAAGtD,KAAKwC,OAAS,KAAM,OACvBxC,KAAKsC,WAAa,IAAIpE,KACtB8B,KAAKwC,MAAQ6B,OAAOC,YAAYtE,KAAKuE,WAAWxJ,KAAKiF,MAAO,KAC5DA,KAAKuE,aAGC,OAAOC,GACbA,EAAMJ,QAAQtE,UAAUC,OAAO,YAC/B,MAAM,GAAEsD,GAAOmB,EAAMC,OAAOC,WAC5B,MAAM/K,EAAI0F,EAAcsE,KAAKN,GAC7B,IAAI1J,EAAG,OACP,MAAMgL,EAAIR,SAASxK,EAAE,GAAI,IACzB,MAAMiL,EAAIT,SAASxK,EAAE,GAAI,IACzB6K,EAAMJ,QAAUpE,KAAK6E,cAAcL,EAAMJ,QAAS,MAAMO,EAAI,KAAKC,OACjEJ,EAAMJ,QAAUpE,KAAK6E,cAAcL,EAAMJ,QAAS,MAAMO,EAAI,KAAKC,OACjEJ,EAAMJ,QAAUpE,KAAK6E,cAAcL,EAAMJ,QAAS,MAAMO,KAAKC,EAAI,OACjEJ,EAAMJ,QAAUpE,KAAK6E,cAAcL,EAAMJ,QAAS,MAAMO,KAAKC,EAAI,OACjE,GAAG5E,KAAKK,cAAcyE,kBAAoB,EACxC,OACF9E,KAAKqC,QAAU,IAAInE,KACnB,GAAG8B,KAAKwC,OAAS,KAAM,CACrBC,cAAczC,KAAKwC,cACZxC,KAAKwC,MAEd,MAAMuC,EAAc/E,KAAKK,cAAcR,cAAkC,oBACzE,GAAGkF,EAAa,CACdA,EAAYjF,UAAUC,OAAO,aAC7BgF,EAAYjB,UAAUtC,QAAQwD,WAAW;AAE3C,MAAMlC,EAAYlH,KAAKmG,IAAI,IAAK/B,KAAKlD,OACrC,MAAMiG,EAAanH,KAAKmG,IAAI,IAAK/B,KAAKhD,QACtCgD,KAAKT,KAAKyD,aAAa,UAAW,OAAOF,KAAaC,KACtD/C,KAAKT,KAAKyD,aAAa,QAASF,EAAUrF,SAAS,KACnDuC,KAAKT,KAAKyD,aAAa,SAAUD,EAAWtF,SAAS,KACrD,EAAAwH,gBAAgBjF,MAGV,cAAckF,EAA6BC,G,MACjD,MAAMC,GAAK,EAAGpF,KAAKK,cAAcR,cAAcsF,MAAK,0BAAEE,QAA4B,cAClF,IAAID,GAASpF,KAAKsF,WAAWF,IAAUA,IAAUF,EAC/C,OAAOA,EACT,MAAMK,EAAKL,EAAQpB,UAAUtC,QAC7B,IAAI+D,EAAGC,cAAe,OAAON,EAC7B,MAAMO,EAAKL,EAAMtB,UAAUtC,QAC3B,IAAIiE,EAAGD,cAAe,OAAON,EAC7B,MAAMQ,EAAKH,EAAGI,QAAQ,GAAGC,OACzB,MAAMC,EAAKJ,EAAGE,QAAQ,GAAGC,OACzB,GAAGhK,KAAKoG,MAAM0D,EAAGI,EAAID,EAAGC,IAAM,GAAKJ,EAAGK,EAAIF,EAAGE,IAAM,GAAK/F,KAAKN,SAC3D,OAAOwF,EACT,MAAMc,EAAiBd,EAAQpF,UAAUmG,SAAS,SAClD,MAAMC,EAAed,EAAMtF,UAAUmG,SAAS,SAC9C,GAAGD,EAAgB,CACjB,GAAGE,EAAc,CACf,IAAI,MAAMC,KAASC,MAAMC,KAAKjB,EAAMkB,YAClCpB,EAAQ/B,YAAYgD,GACtBf,EAAMrF,aACD,CACLqF,EAAMtF,UAAUC,OAAO,aACvB0F,EAAGT,WAAW,GACdE,EAAQ/B,YAAYiC,GAEtB,OAAOF,EAET,GAAGgB,EAAc,CACfhB,EAAQpF,UAAUC,OAAO,aACzBwF,EAAGP,WAAW,GACdI,EAAMjC,YAAY+B,GAClB,OAAOE;AAET,MAAMmB,EAAWrB,EAAQR,WAAYvB,YAAYnD,KAAKR,SAAS4D,gBAAgB,EAAA3H,OAAQ,MACvF8K,EAASzG,UAAUwD,IAAI,YAAa,SACpCiD,EAASpD,YAAY+B,GACrBA,EAAQpF,UAAUC,OAAO,aACzBwG,EAASpD,YAAYiC,GACrBA,EAAMtF,UAAUC,OAAO,aACvB,MAAMtF,EAAIgL,EAAGE,QAAQ,GACrBJ,EAAGP,WAAW,GACdS,EAAGT,WAAW,GACduB,EAASzC,UAAUtC,QAAQuC,WAAWtJ,GACtC,OAAO8L,EAGD,WAAWnC,GACjB,OAAO,MAGD,aACNpE,KAAKpC,KAAOM,KAAKsI,MAAQxG,KAAKsC,WAAYmE,UAAYzG,KAAKP,SAC3DO,KAAKM,SAASiC,YAAc,EAAA5E,WAAWqC,KAAKpC,MAGtC,OACNoC,KAAKQ,UAAUV,UAAUwD,IAAI,QAGvB,OACN,MAAMoD,EAA0BC,KAAKC,MAAM5G,KAAKO,YAAYgC,aAAe,QAC3E,GAAGmE,GAAQ,KACT,OACF1G,KAAKlD,MAAQ4J,EAAK5J,MAClBkD,KAAKhD,OAAS0J,EAAK1J,OACnBgD,KAAKP,SAAWiH,EAAK9I,KACrBoC,KAAKL,IAAM+G,EAAKG,OAChB7G,KAAKJ,IAAM8G,EAAKI,OAChB,GAAGJ,EAAKvE,WAAa,KACnBnC,KAAKmC,UAAY,IAAIjE,KAAKwI,EAAKvE,WACjC,GAAGuE,EAAKrE,SAAW,KACjBrC,KAAKqC,QAAU,IAAInE,KAAKwI,EAAKrE,SAC/BrC,KAAKoC,oBAGC,O,QACN,GAAGpC,KAAKsC,YAAc,KAAMtC,KAAKuE,aACjCvE,KAAKO,YAAYgC,YAAcoE,KAAKI,UAAU,CAC5CjK,MAAOkD,KAAKlD,MACZE,OAAQgD,KAAKhD,OACb6J,OAAQ7G,KAAKL,IACbmH,OAAQ9G,KAAKJ;AACbuC,WAAS,EAAEnC,KAAKmC,aAAS,0BAAEsE,UAC3BpE,SAAO,EAAErC,KAAKqC,WAAO,0BAAEoE,UACvB7I,KAAMoC,KAAKpC,OAEb,OAAO,EAAAoJ,iBAAiBhH,KAAKT,KAAM,UAAUrB,KAAKsI,aAG5C,wBACN,MAAM,MAAES,GAAUjH,KAAKY,cACvB,IAAIqG,IAAUA,EAAM/H,OAAQ,OAC5B,MAAMgI,EAAOD,EAAME,KAAK,SAClBnH,KAAKoH,YAAYF,GACvBlH,KAAKc,YAAYuG,cAAgBrH,KAAK6G,OAASjL,KAAKD,MAAMqE,KAAKlD,MAAQ,KACvEkD,KAAKgB,YAAYqG,cAAgBrH,KAAK8G,OACtC,GAAG9G,KAAKkB,aAAavE,IAAI2K,WAAW,SAClCC,IAAIC,gBAAgBxH,KAAKkB,aAAavE,KACxCqD,KAAKkB,aAAavE,IAAM4K,IAAIE,gBAAgBP,GAGtC,cACNlH,KAAK6G,OAAS7G,KAAKc,YAAYuG,cAC/BrH,KAAKgB,YAAYqG,cAAgBrH,KAAK8G,OAGhC,cACN9G,KAAK8G,OAAS9G,KAAKgB,YAAYqG,cAC/BrH,KAAKc,YAAYuG,cAAgBrH,KAAK6G,OAGhC,mBAAmBf,GACzBA,EAAE4B,iBACF,IAAI1H,KAAKsB,SAAU,OACnBtB,KAAK2H,OACL3H,KAAKS,SAASmH,QAGR,cACN,GAAG5H,KAAKkB,aAAavE,IAAI2K,WAAW,SAClCC,IAAIC,gBAAgBxH,KAAKkB,aAAavE,KACxCqD,KAAKkB,aAAavE,IAAM;CACxBqD,KAAKQ,UAAUV,UAAUC,OAAO,SA/TpC,gBAmUA,IAAIT,G,yGCrVJ,aASA,MAAMuI,EAA2C,CAC/CC,EAAG,EAAGnO,EAAG,EACToO,EAAG,EAAGvO,EAAG,EACTwO,EAAG,EAAGnE,EAAG,EACToE,EAAG,EAAGC,EAAG,EACTC,EAAG,EAAGvO,EAAG,EACTwO,EAAG,EAAG5M,EAAG,EACT6M,EAAG,EAAGC,EAAG,EACTC,EAAG,EAAG9N,EAAG,EACT+N,EAAG,EAAGC,EAAG,EACTC,EAAG,GAGL,MAAa/F,EAkBX,YACS7F,EACAE,EACA6J,EACAC,EACA9H,EACA2J,EAAkB,GAClBC,EAAiB,IACjBC,EAAiB,G,MAPjB,KAAA/L,QACA,KAAAE,SACA,KAAA6J,SACA,KAAAC,SACA,KAAA9H,OACA,KAAA2J,UACA,KAAAC,SACA,KAAAC,SAvBD,KAAAC,QAAU,IAAIC,IACd,KAAAN,EAAY,EACZ,KAAAO,EAAY,EACZ,KAAApP,EAAY,EACZ,KAAAC,EAAY,EACZ,KAAAiM,EAAY,EACZ,KAAAmD,KAAgB,MAmBtBjJ,KAAKhB,KAAO,EAAAD,QAAQC,IAAI,MAAJA,SAAI,EAAJA,EAAQpD,KAAKsN,MAAMtN,KAAKsI,SAAWrI,OAAOsN,mBAC9DnJ,KAAK6I,OAASjN,KAAKwN,IAAIpJ,KAAK6I,OAAQ7I,KAAKqJ,GAAIrJ,KAAKsJ,IAElDtJ,KAAKuJ,SAAW,MAChB,IAAIvJ,KAAKwJ,GAAK,EAAGxJ,KAAKwJ,GAAKxJ,KAAK8G,OAAQ9G,KAAKwJ,KAAM,CACjDxJ,KAAKyJ,QACL,IAAIzJ,KAAK0J,GAAK,EAAG1J,KAAK0J,GAAK1J,KAAK6G,OAAQ7G,KAAK0J,KAAM,CACjD1J,KAAKmF,OACLnF,KAAK2J,WAAW3J,KAAK0J,GAAK1J,KAAK6G,QAAU7G,KAAKwJ,GAAK,GAAIxJ,KAAK4J,eAAe,OAC3E5J,KAAK2J,WAAW3J,KAAK0J,GAAK1J,KAAK6G,OAAS7G,KAAKwJ,GAAIxJ,KAAK4J,mBAI1D5J,KAAKuJ,SAAW,KAChB,IAAIvJ,KAAK0J,GAAK,EAAG1J,KAAK0J,GAAK1J,KAAK6G,OAAQ7G,KAAK0J,KAAM,CACjD1J,KAAKyJ;CACL,IAAIzJ,KAAKwJ,GAAK,EAAGxJ,KAAKwJ,GAAKxJ,KAAK8G,OAAQ9G,KAAKwJ,KAAM,CACjDxJ,KAAKmF,OACLnF,KAAK2J,WAAW3J,KAAK0J,GAAK,EAAI1J,KAAK6G,OAAS7G,KAAKwJ,GAAIxJ,KAAK4J,kBAC1D5J,KAAK2J,WAAW3J,KAAK0J,GAAK1J,KAAK6G,OAAS7G,KAAKwJ,GAAIxJ,KAAK4J,eAAe,QAIzE5J,KAAKuJ,SAAW,MAChBvJ,KAAK2J,WAAW,EAAG,CACjBE,OAAQ,CACN,EAAG,EAAAlO,MAAMqE,KAAKsJ,GAAI,GAClB,EAAGtJ,KAAK6I,OACR7I,KAAK6I,OAAQ7I,KAAK6I,OAAQ,EAAG,EAAG,EAChC7I,KAAK6I,OAAQ,GAEfiB,KAAM,CAAC,IAAK,IAAK,OAGnB9J,KAAKuJ,SAAW,KAChBvJ,KAAK2J,WAAW3J,KAAK6G,OAAS,EAAG,CAC/BgD,OAAQ,CACN,EAAAlO,MAAMqE,KAAKlD,MAAQkD,KAAKsJ,IAAK,EAC7BtJ,KAAKlD,MAAQkD,KAAK6I,OAAQ,EAC1B7I,KAAK6I,OAAQ7I,KAAK6I,OAAQ,EAAG,EAAG,EAChC7I,KAAKlD,MAAOkD,KAAK6I,QAEnBiB,KAAM,CAAC,IAAK,IAAK,OAGnB9J,KAAKuJ,SAAW,MAChBvJ,KAAK2J,WAAW3J,KAAK6G,OAAS7G,KAAK8G,OAAS,EAAG,CAC7C+C,OAAQ,CACN7J,KAAKlD,MAAO,EAAAnB,MAAMqE,KAAKhD,OAASgD,KAAKsJ,GAAI,GACzCtJ,KAAKlD,MAAOkD,KAAKhD,OAASgD,KAAK6I,OAC/B7I,KAAK6I,OAAQ7I,KAAK6I,OAAQ,EAAG,EAAG,EAChC7I,KAAKlD,MAAQkD,KAAK6I,OAAQ7I,KAAKhD,QAEjC8M,KAAM,CAAC,IAAK,IAAK,OAGnB9J,KAAKuJ,SAAW,KAChBvJ,KAAK2J,WAAW3J,KAAK6G,QAAU7G,KAAK8G,OAAS,GAAI,CAC/C+C,OAAQ,CACN,EAAAlO,MAAMqE,KAAKsJ,GAAI,GAAItJ,KAAKhD,OACxBgD,KAAK6I,OAAQ7I,KAAKhD,OAClBgD,KAAK6I,OAAQ7I,KAAK6I,OAAQ,EAAG,EAAG,EAAG,EACnC7I,KAAKhD,OAASgD,KAAK6I,QAErBiB,KAAM,CAAC,IAAK,IAAK,OAGnB9J,KAAK+J,MAAQ,GACb,IAAI,MAAOxQ,EAAGyQ,KAAWhK,KAAK8I,QAAS;AACrC,MAAMlE,EAAIhJ,KAAKsN,MAAM3P,EAAIyG,KAAK6G,UAC9B,EAAC7G,KAAK+J,MAAMnF,MAAE,mBAAK5E,KAAK+J,MAAMnF,GAAK,IAAKrL,EAAIyG,KAAK6G,QAAU7G,KAAKiK,oBAAoBD,GAGtFhK,KAAK8I,QAAQoB,QAxFf,SAAmB,OAAOlK,KAAKuJ,SAAWvJ,KAAKhD,OAASgD,KAAK8G,OAAS9G,KAAKlD,MAAQkD,KAAK6G,OACxF,SAAmB,OAAO7G,KAAKuJ,SAAWvJ,KAAKlD,MAAQkD,KAAK6G,OAAS7G,KAAKhD,OAASgD,KAAK8G,OACxF,SAAmB,OAAO9G,KAAKqJ,IAAMrJ,KAAKuJ,SAAWvJ,KAAKwJ,GAAKxJ,KAAK0J,IACpE,SAAmB,OAAO1J,KAAKsJ,IAAMtJ,KAAKuJ,SAAWvJ,KAAK0J,GAAK1J,KAAKwJ,IAwFpE,cAAchK,EAAoB2K,GAChC,MAAM3N,EAA2B,GACjC,IAAI,IAAIoI,EAAI,EAAGA,EAAI5E,KAAK+J,MAAM7K,OAAQ0F,IAAK,CACzC,MAAMwF,EAAMpK,KAAK+J,MAAMnF,GACvB,IAAI,IAAID,EAAI,EAAGA,EAAIyF,EAAIlL,OAAQyF,IAAK,CAClC,MAAM0F,EAAM7K,EAAS4D,gBAAgB,EAAA3H,OAAQ,QAC7C4O,EAAIrH,aAAa,IAAKoH,EAAIzF,IAC1B0F,EAAIhH,GAAK,KAAKsB,KAAKC,IACnBpI,EAAO8N,KAAKD,GACZF,IAAM,MAANA,SAAM,SAANA,EAAQhH,YAAYkH,IAGxB,OAAO7N,EAGD,eAAe+N,GACrB,MAAM,EAAE9B,EAAC,EAAEO,EAAC,EAAEpP,EAAC,EAAEC,EAAC,EAAEiM,EAAC,QAAE6C,GAAY3I,KACnC,MAAMwK,EAAMxK,KAAKxG,EAAE,GACnB,MAAMiR,EAAMzK,KAAK4D,EAAE,GACnB,MAAM8G,EAAM1K,KAAKxG,EAAE,IACnB,MAAMmR,EAAM3K,KAAK4D,EAAE6E,GACnB,MAAMmC,EAAM5K,KAAKxG,EAAE,GAAMwP,EAAInP,GAC7B,MAAMgR,EAAM7K,KAAK4D,GAAG+E,EAAU/O,GAC9B,MAAMkR,EAAM9K,KAAKxG,EAAE,GAAMmP,EAAUK,GACnC,MAAM+B,EAAM/K,KAAK4D,EAAE+E,EAAU/O,GAC7B,MAAMoR,EAAMhL,KAAKxG,EAAE,GAAM,EAAImP,EAAUK,EAAInP,GAC3C,MAAMoR,EAAMjL,KAAK4D,EAAE,EAAI+E,EAAU/O,GACjC,MAAMsR,EAAMlL,KAAKxG,EAAE,GAAM,EAAImP,EAAUK,EAAInP,GAC3C,MAAMsR,EAAMnL,KAAK4D,EAAE,EAAI+E,EAAU/O;CACjC,MAAMwR,EAAMpL,KAAKxG,EAAE,GAAMmP,EAAUK,GACnC,MAAMqC,EAAMrL,KAAK4D,EAAE+E,EAAU/O,GAC7B,MAAM0R,EAAMtL,KAAKxG,EAAE,GAAMwP,EAAInP,GAC7B,MAAM0R,EAAMvL,KAAK4D,GAAG+E,EAAU/O,GAC9B,MAAM4R,EAAMxL,KAAKxG,EAAE,IACnB,MAAMiS,EAAMzL,KAAK4D,EAAEkC,GACnB,MAAM4F,EAAM1L,KAAKxG,EAAE,GACnB,MAAMmS,EAAM3L,KAAK4D,EAAE,GACnB,MAAO,CACLiG,OAAQ7J,KAAKuJ,SAAWgB,EAAU,CAChCoB,EAAKD,EAAKD,EAAKD,EAAKD,EAAKD,EAAKD,EAAKD,EACnCD,EAAKD,EAAKD,EAAKD,EAAKD,EAAKD,EAAKD,EAAKD,EACnCD,EAAKD,EAAKD,EAAKD,GACb,CACFC,EAAKD,EAAKG,EAAKD,EAAKG,EAAKD,EAAKG,EAAKD,EACnCG,EAAKD,EAAKG,EAAKD,EAAKG,EAAKD,EAAKG,EAAKD,EACnCG,EAAKD,EAAKG,EAAKD,GACbnB,EAAU,CACZmB,EAAKC,EAAKH,EAAKC,EAAKH,EAAKC,EAAKH,EAAKC,EACnCH,EAAKC,EAAKH,EAAKC,EAAKH,EAAKC,EAAKH,EAAKC,EACnCH,EAAKC,EAAKH,EAAKC,GACb,CACFD,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACnCC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACnCC,EAAKC,EAAKC,EAAKC,GAEjB7B,KAAM,CAAC,IAAK,IAAK,IAAK,MAIlB,SACN,MAAMnF,EAAI/I,KAAKgQ,IAAI5L,KAAKhB,QAAU,IAClC,OAAO2F,EAAI/I,KAAKmC,MAAM4G,GAGhB,aACN,OAAO3E,KAAKkE,SAAWlE,KAAK4I,OAAS,EAAI5I,KAAK4I,OAGxC,QACN5I,KAAK8F,EAAI9F,KAAK6L,aAGR,OACN,MAAMC,EAAO9L,KAAKiJ,KAClBjJ,KAAKiJ,KAAOjJ,KAAKkE,UAAY,GAC7BlE,KAAKyI,EAAKzI,KAAKiJ,OAAS6C,GAAQ9L,KAAK8F,EAAI9F,KAAK8F,EAC9C9F,KAAKgJ,EAAIhJ,KAAK6L,aACd7L,KAAKpG,EAAIoG,KAAK6L,aACd7L,KAAKnG,EAAImG,KAAK6L,aACd7L,KAAK8F,EAAI9F,KAAK6L,aAGR,EAAE3D,GACR,OAAO,EAAAvM,MAAMqE,KAAK+L,GAAK/L,KAAKqJ,GAAKnB,EAAG,GAG9B,EAAEA,GACR,OAAO,EAAAvM,MAAMqE,KAAKgM,GAAKhM,KAAKsJ,GAAKpB,GAAKlI,KAAKiJ,MAAQ,EAAI,GAAI,GAGrD,WAAW1P,EAAWyQ,GAC5B,MAAMlB,EAAU9I,KAAK8I,QAAQ1O,IAAIb,GACjC,GAAGuP,EACDA,EAAQwB,KAAKN,QAEbhK,KAAK8I,QAAQmD,IAAI1S,EAAG,CAACyQ,IAGjB,oBAAoBlB,GAC1B,GAAGA,GAAW,OAASA,EAAQ5J,OAC7B,MAAO,GACT,GAAG4J,EAAQ5J,OAAS,EAAG,CACrB,MAAMgN,EAAY,IAAIC,IAAIrD,GAC1B,MAAMtM,EAAiB;AAAEqN,OAAQ,GAAIC,KAAM,IAC3C,MAAMoC,EAAUE,KAAM,CACpB,IAAIC,EAAQ,MACZ,IAAI,MAAMjH,KAAS8G,EACjB,IAAI1P,EAAOqN,OAAO3K,OAAQ,CACxB1C,EAAOqN,OAASzE,EAAMyE,OACtBrN,EAAOsN,KAAO1E,EAAM0E,KACpBuC,EAAQ,KACRH,EAAUI,OAAOlH,GACjB,WACK,GACLxJ,KAAKkC,IAAItB,EAAOqN,OAAO,GAAKzE,EAAMyE,OAAOzE,EAAMyE,OAAO3K,OAAS,IAAM,GACrEtD,KAAKkC,IAAItB,EAAOqN,OAAO,GAAKzE,EAAMyE,OAAOzE,EAAMyE,OAAO3K,OAAS,IAAM,EACrE,CACA1C,EAAOqN,OAAO0C,OAAO,EAAG,KAAMnH,EAAMyE,QACpCrN,EAAOsN,KAAKyC,OAAO,EAAG,KAAMnH,EAAM0E,MAClCuC,EAAQ,KACRH,EAAUI,OAAOlH,GACjB,WACK,GACLxJ,KAAKkC,IAAIsH,EAAMyE,OAAO,GAAKrN,EAAOqN,OAAOrN,EAAOqN,OAAO3K,OAAS,IAAM,GACtEtD,KAAKkC,IAAIsH,EAAMyE,OAAO,GAAKrN,EAAOqN,OAAOrN,EAAOqN,OAAO3K,OAAS,IAAM,EACtE,CACAkG,EAAMyE,OAAO0C,OAAO,EAAG,KAAM/P,EAAOqN,QACpCzE,EAAM0E,KAAKyC,OAAO,EAAG,KAAM/P,EAAOsN,MAClCtN,EAAOqN,OAASzE,EAAMyE,OACtBrN,EAAOsN,KAAO1E,EAAM0E,KACpBuC,EAAQ,KACRH,EAAUI,OAAOlH,GACjB,MAEJ,IAAIiH,EACF,MAEJvD,EAAU,CAACtM,GAEb,MAAM,OAAEqN,EAAM,KAAEC,GAAShB,EAAQ,GACjC,IAAI0D,EAAI,EACR,IAAIhQ,EAAS,GACb,IAAI,MAAMjD,KAAKuQ,EAAM,CACnBtN,GAAUjD,EACV,MAAMK,EAAIiO,EAAatO,GACvB,GAAGK,EAAG4C,GAAUqN,EAAO4C,MAAMD,EAAGA,GAAK5S,GAAG8S,KAAK,KAE/C,OAAOlQ,EAAS,KA3PpB,qB,2GCbA,SAAgBkF,EACdnC,EAA4BC,SAC5BmC,EACAC,EACA+K,EAAiB,aAAcC,EAAe,YAE9C,MAAMC,EAAmB,IAAI9D,IAC7B,MAAM+D,EAAS,IAAI/D,IAEnBxJ,EAAKhD,iBAAiB,YAAawQ,EAAa,MAChDxN,EAAKhD,iBAAiB,YAAayQ;CACnCzN,EAAKhD,iBAAiB,UAAW0Q,GACjC1N,EAAKhD,iBAAiB,aAAc0Q,GACpC1N,EAAKhD,iBAAiB,aAAcwQ,EAAa,CAAEG,QAAS,KAAMC,QAAS,QAC3E5N,EAAKhD,iBAAiB,YAAayQ,EAAY,CAAEG,QAAS,QAC1D5N,EAAKhD,iBAAiB,WAAY0Q,EAAW,CAAEE,QAAS,QACxD5N,EAAKhD,iBAAiB,cAAe0Q,EAAW,CAAEE,QAAS,QAE3D,SAASC,EAAStH,GAChB,MAAMtB,EAAQsI,EAAO1S,IAAK0L,EAAYuH,YACtC,OAAO7I,GAAUA,EAAM6I,YAAc,OAAWvH,aAAawH,WAAc9I,EAAQ,KAGrF,SAASuI,EAAYjH,G,gBACnB,IAAIrB,GAAU,GAAJ,EAAIqB,EAAErB,UAAkB,0BAAEY,WAAO,iCAAG,GAAGsH,KAAkBC,MAAiBD,IAAiBC,KACrG,KAAKnI,aAAkB8I,oBAAqB,OAC5C,MAAMhO,EAAOkF,EAAO+I,gBACpB,IAAIC,EACJ,IAAIJ,EACJ,MAAM,cAAEK,GAAkB5H,EAC1B,GAAG4H,EAAe,CAChB,IAAIC,EAAyClJ,EAC7C,MAAMmJ,GAAO,GAAJ,KAAInJ,EAAOC,cAAiC,0BAAEmJ,gBAAY,+DAAMC,UACzE,MAAMH,EAAY,CAChB,GAAGA,aAAsBI,cAAe,CACtCJ,EAAapO,EAAKM,cAAc8N,EAAWpM,KAAKC,SAChD,SAEF,GAAGmM,aAAsBK,mBAAoB,CAC3C,IAAI,IAAIzU,EAAI,EAAGA,EAAImU,EAAcxO,OAAQ3F,IAAK,CAC5C,MAAM0U,EAAQP,EAAcnU,GAC5B,MAAM2U,EAAKC,EAAc5O,EAAM0O,EAAOL;CACtC,GAAGD,EAAWS,cAAcF,IAAOP,EAAWU,gBAAgBH,GAAK,CACjEb,EAAaY,EAAMZ,WACnBI,EAAUQ,EACV,aAGC,GAAGN,aAAsBJ,mBAAoB,CAClD,MAAMe,EAAO7J,EAAO8J,UACpB,IAAI,IAAIhV,EAAI,EAAGA,EAAImU,EAAcxO,OAAQ3F,IAAK,CAC5C,MAAM0U,EAAQP,EAAcnU,GAC5B,MAAM2U,EAAKC,EAAc5O,EAAM0O,EAAOL,GACtC,GAAGU,EAAKE,MAAQN,EAAGvJ,GAAK2J,EAAKG,MAAQP,EAAGvJ,GACtC2J,EAAKI,KAAOR,EAAGtJ,GAAK0J,EAAKK,OAAST,EAAGtJ,EAAG,CACxCyI,EAAaY,EAAMZ,WACnBI,EAAUQ,EACV,QAIN,WAEG,CACL,GAAInI,EAAiB8I,SAAW,EAC9B,OACFnB,EAAU3H,EAEZ,IAAI2H,EAAS,OACb,MAAMrJ,EAAUK,EAAOoK,QAAQlC,GAAkBlI,EAASA,IAAM,MAANA,SAAM,SAANA,EAAQY,QAA4BsH,GAC9F,GAAGE,EAAiBiC,IAAI1K,GAAU,OAClC,MAAM2K,EAAa3K,EAAQN,UAAUtC,QACrC,IAAIuN,EAAWvJ,eAAiBuJ,EAAWpJ,QAAQ,GAAGqJ,OAASC,aAAaC,wBAAyB,CACnG,MAAMpL,EAAYvE,EAAKyE,qBACvBF,EAAUG,aAAa,EAAG,GAC1B8K,EAAWI,iBAAiBrL,EAAW,GAEzC,MAAMA,EAAYiL,EAAWpJ,QAAQ,GACrC,MAAMyJ,EAASjB,EACb5O,EAAMkO,EAASrJ,EAAQM,YACvB2K,gBAAgBvL,EAAU8B,OAAOkI,WACnC,MAAMtJ,EAAuB,CAC3BJ,UAASK,SAAQ4I,aAAYvJ,YAC7BwL,QAASF,EAAOzK,EAChB4K,QAASH,EAAOxK,GAElBiI,EAAiBZ,IAAI7H,EAASI,GAC9BsI,EAAOb,IAAIoB,EAAY7I,IACvB,EAAAJ,EAAQM,cAAU,0BAAEvB,YAAYiB,GAChCoL,EAAe1J,GACfnE,IAAM,MAANA,SAAM,SAANA,EAASyC,GAGX,SAAS4I,EAAWlH,GAClB,IAAIgH,EAAOV,KAAM,OACjB,MAAM,eAAEqD,GAAmB3J,EAC3B,GAAG2J,EACDrJ,MAAM/K,UAAUqU,IAAIhW,KAAK+V,EAAgBE,GAAYC,SAAS,MAC5D9J,EAAiB8I,SAAW,GAAKe,EAAW7J,GAC9C0J,EAAe1J,GAGnB,SAAS6J,EAAW7J;AAClB,MAAMtB,EAAQ4I,EAAStH,GACvB,IAAItB,EAAO,OAAO,MAClB,MAAMqL,EAAQ1B,EACZ3J,EAAMJ,QAAQoJ,gBAAkB1H,EAChCtB,EAAMJ,QAAQM,YAEhB,IAAImL,EAAO,OAAO,MAClBrL,EAAMV,UAAUG,aACd4L,EAAMlL,EAAIH,EAAM8K,QAChBO,EAAMjL,EAAIJ,EAAM+K,SAElB,OAAO,KAGT,SAAStC,EAAUnH,GACjB,IAAIgH,EAAOV,KAAM,OACjB,MAAM,eAAEqD,GAAmB3J,EAC3B,GAAG2J,EACDrJ,MAAM/K,UAAUqU,IAAIhW,KAAK+V,EAAgBK,GAAeF,SAAS,MACjEE,EAAchK,GACd0J,EAAe1J,GAGnB,SAASgK,EAAchK,GACrB,MAAMtB,EAAQ4I,EAAStH,GACvB,IAAItB,EAAO,OAAO,MAClBqI,EAAiBP,OAAO9H,EAAMJ,SAC9B0I,EAAOR,OAAO9H,EAAM6I,YACpBzL,IAAM,MAANA,SAAM,SAANA,EAAS4C,GACT,OAAO,KAGT,MAAO,CACL,WAAWJ,GACT,OAAOyI,EAAiBiC,IAAI1K,KAzIlC,sBA8IA,SAAS+J,EACP5O,EACAkO,EACAhK,GAEA,MAAMlI,EAAIgE,EAAKwQ,iBACfxU,EAAEoJ,EAAI8I,EAAQuC,QACdzU,EAAEqJ,EAAI6I,EAAQwC,QACd,OAAOxM,GAAQ,KAAOlI,EAAE8T,gBACtB5L,aAAgB8J,mBAChB9J,EAAKoK,eAAgBC,UACrBrK,GACElI,EAGN,SAASiU,EAAe1J,GACtB,GAAGA,EAAEoK,aAAepK,EAAEqK,iBACpBrK,EAAE4B,iBACJ5B,EAAEsK,oB,0GCzKJ,aAEOC,eAAerJ,EAAiBrK,EAAc7C,GACnD,MAAM0F,EAAW7C,EAAIuD,cACrB,MAAMX,EAAOC,EAAS8Q,eAAeC,eAAe,EAAA9U,OAAQ,MAAO,MACnE,MAAM+U,EAAQjR,EAAKkR,WAAW9T,EAAK;CACnC4C,EAAKmR,aAAaF,EAAOjR,EAAKjC,kBACxBrB,QAAQ0U,IAAIvK,MAAM/K,UAAUqU,IAAIhW,KAAK8W,EAAMtO,iBAAiB,UAAW0O,IAC7E,MAAM5U,EAAO,IAAI8F,KAAK,EAAC,IAAI+O,eAAgBC,kBAAkBvR,IAAQ,CAAEyP,KAAM,kBAC7E,MAAM5K,EAAU5E,EAAS4D,gBAAgB,EAAA1H,SAAU,KACnD0I,EAAQ7C,KAAOgG,IAAIE,gBAAgBzL,GACnCoI,EAAQ2M,SAAWjX,EACnBsK,EAAQ4M,QACRzJ,IAAIC,gBAAgBpD,EAAQ7C,MAX9B,qBAcA8O,eAAeO,EAAcK,GAC3B,GAAGA,aAAkBC,kBAAmB,CACtC,MAAM,IAAEvU,GAAQsU,EAChB,IAAItU,EAAK,OACTsU,EAAOE,gBAAgB,OACvBF,EAAO1O,wBAA2B6O,MAAMzU,IAAM0U,YACzC,GAAGJ,aAAkBK,iBAAkB,CAC5C,MAAM/P,EAAO0P,EAAO1P,KAAKC,QACzB,IAAID,EAAM,OACV0P,EAAOE,gBAAgB,QACvBF,EAAO9N,YAAY8N,EAAO/Q,cAAcqR,+BAAgCH,MAAM7P,IAAO8P,Y,0HCzBzF,aAEA,MAAMG,EAAchS,SAASK,cAAc,gBAC3C,MAAM4R,EAAmBD,EAAY3R,cAA8B,mBACnE,MAAM6R,EAAiBF,EAAY3R,cAA8B,iBACjE,MAAM8R,EAAkBH,EAAY3R,cAA8B,kBAClE,MAAM+R,EAAoBJ,EAAY3R,cAA8B;CAEpE,SAAgBoF,EAAgB4M,GAC9BL,EAAY1R,UAAUwD,IAAI,QAC1BkO,EAAYxO,aAAa,aAAc,WACvCwO,EAAYxO,aAAa,iBAAkB,WAC3CyO,EAAiBlP,YAAc,EAAAvE,eAAe6T,EAAY1P,WAC1DuP,EAAenP,YAAc,EAAAvE,eAAe6T,EAAYxP,SACxDsP,EAAgBpP,YAAc,EAAA5E,WAAWkU,EAAYjU,MACrDgU,EAAkBrP,YAAc,GAAGsP,EAAYhL,UAAUgL,EAAY/K,WAAW+K,EAAYhL,OAASgL,EAAY/K,iBAPnH,oBAUA,SAAgBgL,IACdN,EAAY1R,UAAUC,OAAO,QAC7B0R,EAAiBlP,YAAc,GAC/BmP,EAAenP,YAAc,GAC7BoP,EAAgBpP,YAAc,GAC9BqP,EAAkBrP,YAAc,GALlC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const NS_SVG = 'http://www.w3.org/2000/svg';\r\nexport const NS_XHTML = 'http://www.w3.org/1999/xhtml';\r\n\r\nexport function round(n: number, c = 0) {\r\n  c = 10 ** c;\r\n  return Math.round((n + Number.EPSILON) * c) / c;\r\n}\r\n\r\nexport function getUrl(blob: Blob) {\r\n  return new Promise<string>((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(blob);\r\n    reader.addEventListener('loadend', () =>\r\n      resolve(reader.result as string));\r\n    reader.addEventListener('error', () =>\r\n      reject(new Error('Unable to get URL from blob.')));\r\n  });\r\n}\r\n\r\nexport function getImageDimensions(src: string) {\r\n  return new Promise<{ width: number; height: number; }>((resolve, reject) => {\r\n    const img = new Image();\r\n    img.src = src;\r\n    img.addEventListener('load', () => resolve({\r\n      width: img.naturalWidth,\r\n      height: img.naturalHeight,\r\n    }));\r\n    img.addEventListener('error', () =>\r\n      reject(new Error('Could not load image from src.')));\r\n  });\r\n}\r\n\r\nexport function clearChildren(node: Node) {\r\n  while(node.hasChildNodes())\r\n    node.removeChild(node.firstChild!);\r\n}\r\n\r\nexport function formatNumber(n: number, digits: number) {\r\n  return n.toString(10).padStart(digits, '0');\r\n}\r\n\r\nexport function formatTime(time: number) {\r\n  const absTime = Math.abs(time);\r\n  let result = `${\r\n    formatNumber(Math.floor(absTime / 6e4 % 60), 2)\r\n  }:${\r\n    formatNumber(Math.floor(absTime / 1e3 % 60), 2)\r\n  }`;\r\n  if(time < 36e5) return (time < 0 ? '-' : '') + result;\r\n  result = `${\r\n    formatNumber(Math.floor(absTime / 36e5 % 24), 2)\r\n  }:${result}`;\r\n  if(time < 864e5) return (time < 0 ? '-' : '') + result;\r\n  return `${\r\n    formatNumber(Math.floor(time / 864e5), 2)\r\n  }d ${result}`;\r\n}\r\n\r\nexport function formatDateTime(date: Date = new Date()) {\r\n  const yr = date.getFullYear();\r\n  const mo = date.getMonth();\r\n  const dy = date.getDate();\r\n  const hr = date.getHours();\r\n  const mi = date.getMinutes();\r\n  const se = date.getSeconds();\r\n  return `${\r\n    formatNumber(dy, 2)\r\n  }/${\r\n    formatNumber(mo + 1, 2)\r\n  }/${\r\n    formatNumber(yr, 4)\r\n  } ${\r\n    formatNumber(hr % 12 || 12, 2)\r\n  }:${\r\n    formatNumber(mi, 2)\r\n  }:${\r\n    formatNumber(se, 2)\r\n  } ${hr >= 12 ? 'PM' : 'AM'}`;\r\n}\r\n\r\nexport function getSeed(seed: any): number {\r\n  switch(typeof seed) {\r\n    case 'undefined':\r\n    case 'object':\r\n      if(seed == null)\r\n        seed = '';\r\n    default:\r\n      seed = seed.toString();\r\n    case 'string': {\r\n      let hash = 0;\r\n      for(let i = 0; i < seed.length; i++)\r\n        hash = Math.imul(31, hash) + seed.charCodeAt(i) | 0;\r\n      seed = hash;\r\n    }\r\n  }\r\n  return seed;\r\n}\r\n","import { JigsawGenerator } from './puzzle-generator';\r\nimport { registerDraggable, DraggingState } from './drag-handler';\r\nimport { formatTime, getUrl, getImageDimensions, clearChildren, NS_SVG } from './utils';\r\nimport { downloadDocument } from './xml-clone';\r\nimport { showCertificate } from './certificate';\r\n\r\nconst pathIdMatcher = /^p-(\\d+)-(\\d+)/;\r\n\r\ninterface StoredData {\r\n  width: number;\r\n  height: number;\r\n  xCount: number;\r\n  yCount: number;\r\n  time: number;\r\n  startTime?: number;\r\n  endTime?: number;\r\n}\r\n\r\nexport class MainHandler {\r\n  document: Document;\r\n  root: SVGSVGElement;\r\n  defsElement: SVGDefsElement;\r\n  imageElement: SVGImageElement;\r\n  pathGroup: SVGGElement;\r\n  instanceGroup: SVGGElement;\r\n  timeDisp: SVGTextElement;\r\n  dataElement: SVGScriptElement;\r\n  menuGroup: SVGGElement;\r\n  menuForm: HTMLFormElement;\r\n  imageSelector: HTMLInputElement;\r\n  imagePreview: HTMLImageElement;\r\n  colSelector: HTMLInputElement;\r\n  rowSelector: HTMLInputElement;\r\n\r\n  imageUrl: string;\r\n  width: number = 1;\r\n  height: number = 1;\r\n  baseTime: number = 0;\r\n  theshold: number = 3;\r\n  time: number = 0;\r\n  startTime?: Date;\r\n  endTime?: Date;\r\n  resumeTime?: Date;\r\n  private _xc: number = 1;\r\n  private _yc: number = 1;\r\n  private timer?: number;\r\n\r\n  get xCount() {\r\n    return this._xc;\r\n  }\r\n  set xCount(value: number) {\r\n    this._xc = value;\r\n    this._yc = Math.round(value / this.width * this.height);\r\n  } \r\n\r\n  get yCount() {\r\n    return this._yc;\r\n  }\r\n  set yCount(value: number) {\r\n    this._yc = value;\r\n    this._xc = Math.round(value / this.height * this.width);\r\n  }\r\n\r\n  constructor(root: GlobalEventHandlers & ParentNode = document) {\r\n    root.querySelector('.noscript')?.classList.remove('noscript');\r\n    this.root = root.querySelector('svg')!;\r\n    this.document = root instanceof Document ? root : this.root.ownerDocument;\r\n    this.defsElement = root.querySelector('defs')!;\r\n    this.pathGroup = root.querySelector<SVGGElement>('g#ps')!;\r\n    this.instanceGroup = root.querySelector<SVGGElement>('g#ins')!;\r\n    this.timeDisp = root.querySelector<SVGTextElement>('text#time')!;\r\n    this.dataElement = root.querySelector<SVGScriptElement>('script#data')!;\r\n    this.menuGroup = root.querySelector<SVGGElement>('#menu')!;\r\n    this.menuForm = root.querySelector<HTMLFormElement>('form#menuform')!;\r\n    this.menuForm.addEventListener('submit', this.onMenuSubmit.bind(this));\r\n    this.menuForm.addEventListener('reset', this.onMenuReset.bind(this));\r\n    this.imageSelector = this.menuForm.querySelector<HTMLInputElement>('input#image-input')!;\r\n    this.imageSelector.addEventListener('change', this.onImageSelected.bind(this));\r\n    this.colSelector = this.menuForm.querySelector<HTMLInputElement>('input#col-input')!;\r\n    const onColChange = this.onColChange.bind(this);\r\n    this.colSelector.addEventListener('change', onColChange);\r\n    this.colSelector.addEventListener('blur', onColChange);\r\n    this.rowSelector = this.menuForm.querySelector<HTMLInputElement>('input#row-input')!;\r\n    const onRowChange = this.onRowChange.bind(this);\r\n    this.rowSelector.addEventListener('change', onRowChange);\r\n    this.rowSelector.addEventListener('blur', onRowChange);\r\n    this.imagePreview = this.menuForm.querySelector<HTMLImageElement>('img#preview')!;\r\n    this.root.querySelector('#new-game')?.addEventListener('click', this.menu.bind(this));\r\n    this.root.querySelector('#save-game')?.addEventListener('click', this.save.bind(this));\r\n    this.imageElement = root.querySelector<SVGImageElement>('image#img')!;\r\n    this.imageUrl = this.imageElement.href.baseVal;\r\n    Object.assign(this, registerDraggable(\r\n      root, this.onDrag.bind(this), this.onDrop.bind(this),\r\n    ));\r\n    this.load();\r\n  }\r\n\r\n  async updateImage(src: string | Blob) {\r\n    if(src instanceof Blob)\r\n      src = await getUrl(src);\r\n    const { width, height } = await getImageDimensions(src);\r\n    this.imageUrl = src;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._xc = Math.round(width / 100);\r\n    this._yc = Math.round(height / 100);\r\n  }\r\n\r\n  calculateTheshold() {\r\n    this.theshold = Math.max(3, Math.sqrt((this.width / this._xc) ** 2 + (this.height / this._yc) ** 2) / 20);\r\n  }\r\n\r\n  init() {\r\n    clearChildren(this.pathGroup);\r\n    clearChildren(this.instanceGroup);\r\n    for(const oldMask of this.defsElement.querySelectorAll('mask.puzzle-mask'))\r\n      oldMask.remove();\r\n    this.time = 0;\r\n    this.baseTime = 0;\r\n    this.startTime = new Date();\r\n    this.calculateTheshold();\r\n    delete this.endTime;\r\n    delete this.resumeTime;\r\n    this.timeDisp.textContent = '--:--';\r\n    if(this.timer != null) {\r\n      clearInterval(this.timer);\r\n      delete this.timer;\r\n    }\r\n    const paths = new JigsawGenerator(\r\n      this.width, this.height,\r\n      this._xc, this._yc,\r\n      undefined, undefined, undefined,\r\n      10,\r\n    ).toSvgElements(this.document, this.pathGroup);\r\n    const viewWidth = Math.max(640, this.width * 1.5);\r\n    const viewHeight = Math.max(480, this.height * 1.5);\r\n    this.root.setAttribute('viewbox', `0 0 ${viewWidth} ${viewHeight}`);\r\n    this.root.setAttribute('width', viewWidth.toString(10));\r\n    this.root.setAttribute('height', viewHeight.toString(10));\r\n    this.imageElement.href.baseVal = this.imageUrl;\r\n    this.imageElement.setAttribute('width', this.width.toString());\r\n    this.imageElement.setAttribute('height', this.height.toString());\r\n    for(const path of paths) {\r\n      const mask = this.defsElement.appendChild(this.document.createElementNS(NS_SVG, 'mask'));\r\n      mask.id = `${path.id}-m`;\r\n      mask.classList.add('puzzle-mask');\r\n\r\n      const maskPath = mask.appendChild(this.document.createElementNS(NS_SVG, 'use'));\r\n      maskPath.href.baseVal = `#${path.id}`;\r\n      maskPath.setAttribute('fill', 'white');\r\n\r\n      const instance = this.instanceGroup.appendChild(this.document.createElementNS(NS_SVG, 'g'));\r\n      instance.id = `${path.id}-i`;\r\n      instance.classList.add('draggable');\r\n\r\n      const base = instance.appendChild(this.document.createElementNS(NS_SVG, 'use'));\r\n      base.href.baseVal = `#${this.imageElement.id}`;\r\n      base.setAttribute('mask', `url(#${mask.id})`);\r\n\r\n      const decoPath = instance.appendChild(this.document.createElementNS(NS_SVG, 'use'));\r\n      decoPath.classList.add('handler');\r\n      decoPath.href.baseVal = `#${path.id}`;\r\n      decoPath.setAttribute('stroke', 'black');\r\n      decoPath.setAttribute('fill', 'transparent');\r\n\r\n      const m = pathIdMatcher.exec(path.id);\r\n      if(m) {\r\n        const w = this.width / this._xc;\r\n        const h = this.height / this._yc;\r\n        instance.transform.baseVal.appendItem(this.root.createSVGTransform()).setTranslate(\r\n          Math.round(Math.random() * (viewWidth - w) - parseInt(m[1], 10) * w),\r\n          Math.round(Math.random() * (viewHeight - h) - parseInt(m[2], 10) * h),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private onDrag(element: SVGElement) {\r\n    element.classList.add('grabbing');\r\n    if(this.timer != null) return;\r\n    this.resumeTime = new Date();\r\n    this.timer = window.setInterval(this.updateTime.bind(this), 1000);\r\n    this.updateTime();\r\n  }\r\n\r\n  private onDrop(state: DraggingState) {\r\n    state.element.classList.remove('grabbing');\r\n    const { id } = state.target.parentNode as Element;\r\n    const m = pathIdMatcher.exec(id);\r\n    if(!m) return;\r\n    const x = parseInt(m[1], 10);\r\n    const y = parseInt(m[2], 10);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x + 1}-${y}-i`);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x - 1}-${y}-i`);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x}-${y + 1}-i`);\r\n    state.element = this.checkAndMerge(state.element, `#p-${x}-${y - 1}-i`);\r\n    if(this.instanceGroup.childElementCount > 1)\r\n      return;\r\n    this.endTime = new Date();\r\n    if(this.timer != null) {\r\n      clearInterval(this.timer);\r\n      delete this.timer;\r\n    }\r\n    const lastElement = this.instanceGroup.querySelector<SVGGraphicsElement>('.draggable.group');\r\n    if(lastElement) {\r\n      lastElement.classList.remove('draggable');\r\n      lastElement.transform.baseVal.removeItem(0);\r\n    }\r\n    const viewWidth = Math.max(640, this.width);\r\n    const viewHeight = Math.max(480, this.height);\r\n    this.root.setAttribute('viewbox', `0 0 ${viewWidth} ${viewHeight}`);\r\n    this.root.setAttribute('width', viewWidth.toString(10));\r\n    this.root.setAttribute('height', viewHeight.toString(10));\r\n    showCertificate(this);\r\n  }\r\n\r\n  private checkAndMerge(current: SVGGraphicsElement, next: string) {\r\n    const other = this.instanceGroup.querySelector(next)?.closest<SVGGraphicsElement>('.draggable');\r\n    if(!other || this.isDragging(other) || other === current)\r\n      return current;\r\n    const t1 = current.transform.baseVal;\r\n    if(!t1.numberOfItems) return current;\r\n    const t2 = other.transform.baseVal;\r\n    if(!t2.numberOfItems) return current;\r\n    const m1 = t1.getItem(0).matrix;\r\n    const m2 = t2.getItem(0).matrix;\r\n    if(Math.sqrt((m1.e - m2.e) ** 2 + (m1.f - m2.f) ** 2) > this.theshold)\r\n      return current;\r\n    const currentIsGroup = current.classList.contains('group');\r\n    const otherIsGroup = other.classList.contains('group');\r\n    if(currentIsGroup) {\r\n      if(otherIsGroup) {\r\n        for(const child of Array.from(other.childNodes))\r\n          current.appendChild(child);\r\n        other.remove();\r\n      } else {\r\n        other.classList.remove('draggable');\r\n        t2.removeItem(0);\r\n        current.appendChild(other);\r\n      }\r\n      return current;\r\n    }\r\n    if(otherIsGroup) {\r\n      current.classList.remove('draggable');\r\n      t1.removeItem(0);\r\n      other.appendChild(current);\r\n      return other;\r\n    }\r\n    const newGroup = current.parentNode!.appendChild(this.document.createElementNS(NS_SVG, 'g'));\r\n    newGroup.classList.add('draggable', 'group');\r\n    newGroup.appendChild(current);\r\n    current.classList.remove('draggable');\r\n    newGroup.appendChild(other);\r\n    other.classList.remove('draggable');\r\n    const t = t2.getItem(0);\r\n    t1.removeItem(0);\r\n    t2.removeItem(0);\r\n    newGroup.transform.baseVal.appendItem(t);\r\n    return newGroup;\r\n  }\r\n\r\n  private isDragging(element: SVGElement) {\r\n    return false;\r\n  }\r\n\r\n  private updateTime() {\r\n    this.time = Date.now() - this.resumeTime!.getTime() + this.baseTime;\r\n    this.timeDisp.textContent = formatTime(this.time);\r\n  }\r\n\r\n  private menu() {\r\n    this.menuGroup.classList.add('show');\r\n  }\r\n\r\n  private load() {\r\n    const data: StoredData | null = JSON.parse(this.dataElement.textContent || 'null');\r\n    if(data == null)\r\n      return;\r\n    this.width = data.width;\r\n    this.height = data.height;\r\n    this.baseTime = data.time;\r\n    this._xc = data.xCount;\r\n    this._yc = data.yCount;\r\n    if(data.startTime != null)\r\n      this.startTime = new Date(data.startTime);\r\n    if(data.endTime != null)\r\n      this.endTime = new Date(data.endTime);\r\n    this.calculateTheshold();\r\n  }\r\n\r\n  private save() {\r\n    if(this.resumeTime != null) this.updateTime();\r\n    this.dataElement.textContent = JSON.stringify({\r\n      width: this.width,\r\n      height: this.height,\r\n      xCount: this._xc,\r\n      yCount: this._yc,\r\n      startTime: this.startTime?.getTime(),\r\n      endTime: this.endTime?.getTime(),\r\n      time: this.time,\r\n    } as StoredData);\r\n    return downloadDocument(this.root, `puzzle-${Date.now()}.svg`);\r\n  }\r\n\r\n  private async onImageSelected() {\r\n    const { files } = this.imageSelector;\r\n    if(!files || !files.length) return;\r\n    const file = files.item(0)!;\r\n    await this.updateImage(file);\r\n    this.colSelector.valueAsNumber = this.xCount = Math.round(this.width / 100);\r\n    this.rowSelector.valueAsNumber = this.yCount;\r\n    if(this.imagePreview.src.startsWith('blob:'))\r\n      URL.revokeObjectURL(this.imagePreview.src);\r\n    this.imagePreview.src = URL.createObjectURL(file);\r\n  }\r\n\r\n  private onColChange() {\r\n    this.xCount = this.colSelector.valueAsNumber;\r\n    this.rowSelector.valueAsNumber = this.yCount;\r\n  }\r\n\r\n  private onRowChange() {\r\n    this.yCount = this.rowSelector.valueAsNumber;\r\n    this.colSelector.valueAsNumber = this.xCount;\r\n  }\r\n\r\n  private async onMenuSubmit(e: Event) {\r\n    e.preventDefault();\r\n    if(!this.imageUrl) return;\r\n    this.init();\r\n    this.menuForm.reset();\r\n  }\r\n\r\n  private onMenuReset() {\r\n    if(this.imagePreview.src.startsWith('blob:'))\r\n      URL.revokeObjectURL(this.imagePreview.src);\r\n    this.imagePreview.src = '';\r\n    this.menuGroup.classList.remove('show');\r\n  }\r\n}\r\n\r\nnew MainHandler();\r\n","import { NS_SVG, getSeed, round } from './utils';\r\n// Modified from https://gist.github.com/Draradech/35d36347312ca6d0887aa7d55f366e30\r\n// Changes: Outputs per-puzzle path instead of one for all.\r\n\r\ninterface Stroke {\r\n  points: number[];\r\n  inst: string[];\r\n}\r\n\r\nconst svgArgsCount: { [arg: string]: number; } = {\r\n  M: 2, m: 2,\r\n  L: 2, l: 2,\r\n  H: 1, h: 1,\r\n  V: 1, v: 1,\r\n  C: 6, c: 6,\r\n  S: 4, s: 4,\r\n  Q: 4, q: 4,\r\n  T: 2, t: 2,\r\n  A: 7, a: 7,\r\n  z: 0,\r\n};\r\n\r\nexport class JigsawGenerator {\r\n  cells: string[][];\r\n\r\n  private strokes = new Map<number, Stroke[]>();\r\n  private a: number = 0;\r\n  private b: number = 0;\r\n  private c: number = 0;\r\n  private d: number = 0;\r\n  private e: number = 0;\r\n  private flip: boolean = false;\r\n  private xi: number;\r\n  private yi: number;\r\n  private vertical: boolean;\r\n  private get sl() { return this.vertical ? this.height / this.yCount : this.width / this.xCount; }\r\n  private get sw() { return this.vertical ? this.width / this.xCount : this.height / this.yCount; }\r\n  private get ol() { return this.sl * (this.vertical ? this.yi : this.xi); }\r\n  private get ow() { return this.sw * (this.vertical ? this.xi : this.yi); }\r\n\r\n  constructor(\r\n    public width: number,\r\n    public height: number,\r\n    public xCount: number,\r\n    public yCount: number,\r\n    public seed?: any,\r\n    public tabSize: number = 0.1,\r\n    public jitter: number = 0.04,\r\n    public radius: number = 0,\r\n  ) {\r\n    this.seed = getSeed(seed ?? Math.trunc(Math.random() * Number.MAX_SAFE_INTEGER));\r\n    this.radius = Math.min(this.radius, this.sl, this.sw);\r\n\r\n    this.vertical = false;\r\n    for(this.yi = 1; this.yi < this.yCount; this.yi++) {\r\n      this.first();\r\n      for(this.xi = 0; this.xi < this.xCount; this.xi++) {\r\n        this.next();\r\n        this.pushStroke(this.xi + this.xCount * (this.yi - 1), this.generateStroke(true));\r\n        this.pushStroke(this.xi + this.xCount * this.yi, this.generateStroke());\r\n      }\r\n    }\r\n\r\n    this.vertical = true;\r\n    for(this.xi = 1; this.xi < this.xCount; this.xi++) {\r\n      this.first();\r\n      for(this.yi = 0; this.yi < this.yCount; this.yi++) {\r\n        this.next();\r\n        this.pushStroke(this.xi - 1 + this.xCount * this.yi, this.generateStroke());\r\n        this.pushStroke(this.xi + this.xCount * this.yi, this.generateStroke(true));\r\n      }\r\n    }\r\n\r\n    this.vertical = false;\r\n    this.pushStroke(0, {\r\n      points: [\r\n        0, round(this.sw, 3),\r\n        0, this.radius,\r\n        this.radius, this.radius, 0, 0, 1,\r\n        this.radius, 0,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.vertical = true;\r\n    this.pushStroke(this.xCount - 1, {\r\n      points: [\r\n        round(this.width - this.sw), 0,\r\n        this.width - this.radius, 0,\r\n        this.radius, this.radius, 0, 0, 1,\r\n        this.width, this.radius,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.vertical = false;\r\n    this.pushStroke(this.xCount * this.yCount - 1, {\r\n      points: [\r\n        this.width, round(this.height - this.sw, 3),\r\n        this.width, this.height - this.radius,\r\n        this.radius, this.radius, 0, 0, 1,\r\n        this.width - this.radius, this.height,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.vertical = true;\r\n    this.pushStroke(this.xCount * (this.yCount - 1), {\r\n      points: [\r\n        round(this.sw, 3), this.height,\r\n        this.radius, this.height,\r\n        this.radius, this.radius, 0, 0, 1, 0,\r\n        this.height - this.radius,\r\n      ],\r\n      inst: ['M', 'L', 'A'],\r\n    });\r\n\r\n    this.cells = [];\r\n    for(const [i, stroke] of this.strokes) {\r\n      const y = Math.trunc(i / this.xCount);\r\n      (this.cells[y] ?? (this.cells[y] = []))[i % this.xCount] = this.getNormalizedStroke(stroke);\r\n    }\r\n\r\n    this.strokes.clear();\r\n  }\r\n\r\n  toSvgElements(document: Document, parent?: SVGElement) {\r\n    const result: SVGPathElement[] = [];\r\n    for(let y = 0; y < this.cells.length; y++) {\r\n      const row = this.cells[y];\r\n      for(let x = 0; x < row.length; x++) {\r\n        const elm = document.createElementNS(NS_SVG, 'path');\r\n        elm.setAttribute('d', row[x]);\r\n        elm.id = `p-${x}-${y}`;\r\n        result.push(elm);\r\n        parent?.appendChild(elm);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private generateStroke(reverse?: boolean): Stroke {\r\n    const { a, b, c, d, e, tabSize } = this;\r\n    const p0l = this.l(0);\r\n    const p0w = this.w(0);\r\n    const p1l = this.l(0.2);\r\n    const p1w = this.w(a);\r\n    const p2l = this.l(0.5 + b + d);\r\n    const p2w = this.w(-tabSize + c);\r\n    const p3l = this.l(0.5 - tabSize + b);\r\n    const p3w = this.w(tabSize + c);\r\n    const p4l = this.l(0.5 - 2 * tabSize + b - d);\r\n    const p4w = this.w(3 * tabSize + c);\r\n    const p5l = this.l(0.5 + 2 * tabSize + b - d);\r\n    const p5w = this.w(3 * tabSize + c);\r\n    const p6l = this.l(0.5 + tabSize + b);\r\n    const p6w = this.w(tabSize + c);\r\n    const p7l = this.l(0.5 + b + d);\r\n    const p7w = this.w(-tabSize + c);\r\n    const p8l = this.l(0.8);\r\n    const p8w = this.w(e);\r\n    const p9l = this.l(1);\r\n    const p9w = this.w(0);\r\n    return {\r\n      points: this.vertical ? reverse ? [\r\n        p9w, p9l, p8w, p8l, p7w, p7l, p6w, p6l,\r\n        p5w, p5l, p4w, p4l, p3w, p3l, p2w, p2l,\r\n        p1w, p1l, p0w, p0l,\r\n      ] : [\r\n        p0w, p0l, p1w, p1l, p2w, p2l, p3w, p3l,\r\n        p4w, p4l, p5w, p5l, p6w, p6l, p7w, p7l,\r\n        p8w, p8l, p9w, p9l,\r\n      ] : reverse ? [\r\n        p9l, p9w, p8l, p8w, p7l, p7w, p6l, p6w,\r\n        p5l, p5w, p4l, p4w, p3l, p3w, p2l, p2w,\r\n        p1l, p1w, p0l, p0w,\r\n      ] : [\r\n        p0l, p0w, p1l, p1w, p2l, p2w, p3l, p3w,\r\n        p4l, p4w, p5l, p5w, p6l, p6w, p7l, p7w,\r\n        p8l, p8w, p9l, p9w,\r\n      ],\r\n      inst: ['M', 'C', 'C', 'C'],\r\n    };\r\n  }\r\n\r\n  private random() {\r\n    const x = Math.sin(this.seed++) * 10000;\r\n    return x - Math.floor(x);\r\n  }\r\n\r\n  private nextJitter() {\r\n    return this.random() * this.jitter * 2 - this.jitter;\r\n  }\r\n\r\n  private first() {\r\n    this.e = this.nextJitter();\r\n  }\r\n\r\n  private next() {\r\n    const filp = this.flip;\r\n    this.flip = this.random() >= 0.5;\r\n    this.a = (this.flip === filp ? -this.e : this.e);\r\n    this.b = this.nextJitter();\r\n    this.c = this.nextJitter();\r\n    this.d = this.nextJitter();\r\n    this.e = this.nextJitter();\r\n  }\r\n\r\n  private l(v: number) {\r\n    return round(this.ol + this.sl * v, 3);\r\n  }\r\n\r\n  private w(v: number) {\r\n    return round(this.ow + this.sw * v * (this.flip ? -1 : 1), 3);\r\n  }\r\n\r\n  private pushStroke(i: number, stroke: Stroke) {\r\n    const strokes = this.strokes.get(i);\r\n    if(strokes)\r\n      strokes.push(stroke);\r\n    else\r\n      this.strokes.set(i, [stroke]);\r\n  }\r\n\r\n  private getNormalizedStroke(strokes: Stroke[]) {\r\n    if(strokes == null || !strokes.length)\r\n      return '';\r\n    if(strokes.length > 1) {\r\n      const strokeSet = new Set(strokes);\r\n      const result: Stroke = { points: [], inst: [] };\r\n      while(strokeSet.size) {\r\n        let found = false;\r\n        for(const other of strokeSet)\r\n          if(!result.points.length) {\r\n            result.points = other.points;\r\n            result.inst = other.inst;\r\n            found = true;\r\n            strokeSet.delete(other);\r\n            break;\r\n          } else if(\r\n            Math.abs(result.points[0] - other.points[other.points.length - 2]) < 1 &&\r\n            Math.abs(result.points[1] - other.points[other.points.length - 1]) < 1\r\n          ) {\r\n            result.points.splice(0, 2, ...other.points);\r\n            result.inst.splice(0, 1, ...other.inst);\r\n            found = true;\r\n            strokeSet.delete(other);\r\n            break;\r\n          } else if(\r\n            Math.abs(other.points[0] - result.points[result.points.length - 2]) < 1 &&\r\n            Math.abs(other.points[1] - result.points[result.points.length - 1]) < 1\r\n          ) {\r\n            other.points.splice(0, 2, ...result.points);\r\n            other.inst.splice(0, 1, ...result.inst);\r\n            result.points = other.points;\r\n            result.inst = other.inst;\r\n            found = true;\r\n            strokeSet.delete(other);\r\n            break;\r\n          }\r\n        if(!found)\r\n          break;\r\n      }\r\n      strokes = [result];\r\n    }\r\n    const { points, inst } = strokes[0];\r\n    let j = 0;\r\n    let result = '';\r\n    for(const i of inst) {\r\n      result += i;\r\n      const c = svgArgsCount[i];\r\n      if(c) result += points.slice(j, j += c).join(' ');\r\n    }\r\n    return result + 'z';\r\n  }\r\n}\r\n","export interface DraggingState {\r\n  target: SVGGraphicsElement;\r\n  element: SVGGraphicsElement;\r\n  identifier?: number;\r\n  transform: SVGTransform;\r\n  offsetX: number;\r\n  offsetY: number;\r\n}\r\n\r\nexport function registerDraggable(\r\n  root: GlobalEventHandlers = document,\r\n  onDrag?: (element: SVGElement) => void,\r\n  onDrop?: (state: DraggingState) => void,\r\n  draggableClass = '.draggable', handlerClass = '.handler',\r\n) {\r\n  const draggingElements = new Map<SVGElement, DraggingState>();\r\n  const states = new Map<number | undefined, DraggingState>();\r\n\r\n  root.addEventListener('mousedown', onStartDrag, true);\r\n  root.addEventListener('mousemove', onDragging);\r\n  root.addEventListener('mouseup', onEndDrag);\r\n  root.addEventListener('mouseleave', onEndDrag);\r\n  root.addEventListener('touchstart', onStartDrag, { capture: true, passive: false });\r\n  root.addEventListener('touchmove', onDragging, { passive: false });\r\n  root.addEventListener('touchend', onEndDrag, { passive: false });\r\n  root.addEventListener('touchcancel', onEndDrag, { passive: false });\r\n\r\n  function getState(e: MouseEvent | Touch) {\r\n    const state = states.get((e as Touch).identifier);\r\n    return state && (state.identifier == null) === (e instanceof MouseEvent) ? state : null;\r\n  }\r\n\r\n  function onStartDrag(e: MouseEvent | TouchEvent) {\r\n    let target = (e.target as Element)?.closest?.(`${draggableClass} ${handlerClass}, ${draggableClass}${handlerClass}`);\r\n    if(!(target instanceof SVGGraphicsElement)) return;\r\n    const root = target.ownerSVGElement!;\r\n    let pointer: Touch | MouseEvent | undefined;\r\n    let identifier: number | undefined;\r\n    const { targetTouches } = e as TouchEvent;\r\n    if(targetTouches) {\r\n      let srcElement: Element | null | undefined = target;\r\n      const ctm = (target.parentNode as SVGGraphicsElement)?.getScreenCTM?.()?.inverse();\r\n      while(srcElement) {\r\n        if(srcElement instanceof SVGUseElement) {\r\n          srcElement = root.querySelector(srcElement.href.baseVal);\r\n          continue;\r\n        }\r\n        if(srcElement instanceof SVGGeometryElement) {\r\n          for(let i = 0; i < targetTouches.length; i++) {\r\n            const touch = targetTouches[i];\r\n            const lp = getLocalPoint(root, touch, ctm);\r\n            if(srcElement.isPointInFill(lp) || srcElement.isPointInStroke(lp)) {\r\n              identifier = touch.identifier;\r\n              pointer = touch;\r\n              break;\r\n            }\r\n          }\r\n        } else if(srcElement instanceof SVGGraphicsElement) {\r\n          const bbox = target.getBBox();\r\n          for(let i = 0; i < targetTouches.length; i++) {\r\n            const touch = targetTouches[i];\r\n            const lp = getLocalPoint(root, touch, ctm);\r\n            if(bbox.left <= lp.x && bbox.right > lp.x &&\r\n              bbox.top <= lp.y && bbox.bottom > lp.y) {\r\n              identifier = touch.identifier;\r\n              pointer = touch;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    } else {\r\n      if((e as MouseEvent).button !== 0)\r\n        return;\r\n      pointer = e as MouseEvent;\r\n    }\r\n    if(!pointer) return;\r\n    const element = target.matches(draggableClass) ? target : target?.closest<SVGGraphicsElement>(draggableClass) as SVGGraphicsElement;\r\n    if(draggingElements.has(element)) return;\r\n    const transforms = element.transform.baseVal;\r\n    if(!transforms.numberOfItems || transforms.getItem(0).type !== SVGTransform.SVG_TRANSFORM_TRANSLATE) {\r\n      const transform = root.createSVGTransform();\r\n      transform.setTranslate(0, 0);\r\n      transforms.insertItemBefore(transform, 0);\r\n    }\r\n    const transform = transforms.getItem(0);\r\n    const offset = getLocalPoint(\r\n      root, pointer, element.parentNode! as SVGGraphicsElement,\r\n    ).matrixTransform(transform.matrix.inverse());\r\n    const state: DraggingState = {\r\n      element, target, identifier, transform,\r\n      offsetX: offset.x,\r\n      offsetY: offset.y,\r\n    };\r\n    draggingElements.set(element, state);\r\n    states.set(identifier, state);\r\n    element.parentNode?.appendChild(element);\r\n    interceptEvent(e);\r\n    onDrag?.(element);\r\n  }\r\n  \r\n  function onDragging(e: MouseEvent | TouchEvent) {\r\n    if(!states.size) return;\r\n    const { changedTouches } = e as TouchEvent;\r\n    if(changedTouches ?\r\n      Array.prototype.map.call(changedTouches, handleDrag).includes(true) :\r\n      ((e as MouseEvent).button === 0 && handleDrag(e as MouseEvent)))\r\n      interceptEvent(e);\r\n  }\r\n  \r\n  function handleDrag(e: MouseEvent | Touch) {\r\n    const state = getState(e);\r\n    if(!state) return false;\r\n    const coord = getLocalPoint(\r\n      state.element.ownerSVGElement!, e,\r\n      state.element.parentNode! as SVGGraphicsElement,\r\n    );\r\n    if(!coord) return false;\r\n    state.transform.setTranslate(\r\n      coord.x - state.offsetX,\r\n      coord.y - state.offsetY,\r\n    );\r\n    return true;\r\n  }\r\n  \r\n  function onEndDrag(e: MouseEvent | TouchEvent) {\r\n    if(!states.size) return;\r\n    const { changedTouches } = e as TouchEvent;\r\n    if(changedTouches ?\r\n      Array.prototype.map.call(changedTouches, handleEndDrag).includes(true) :\r\n      handleEndDrag(e as MouseEvent))\r\n      interceptEvent(e);\r\n  }\r\n  \r\n  function handleEndDrag(e: MouseEvent | Touch) {\r\n    const state = getState(e);\r\n    if(!state) return false;\r\n    draggingElements.delete(state.element);\r\n    states.delete(state.identifier);\r\n    onDrop?.(state);\r\n    return true;\r\n  }\r\n\r\n  return {\r\n    isDragging(element: SVGElement) {\r\n      return draggingElements.has(element);\r\n    },\r\n  };\r\n}\r\n\r\nfunction getLocalPoint(\r\n  root: SVGSVGElement,\r\n  pointer: MouseEvent | Touch,\r\n  base?: DOMMatrix | SVGGraphicsElement | null,\r\n) {\r\n  const p = root.createSVGPoint();\r\n  p.x = pointer.clientX;\r\n  p.y = pointer.clientY;\r\n  return base != null ? p.matrixTransform(\r\n    base instanceof SVGGraphicsElement ?\r\n    base.getScreenCTM()!.inverse() :\r\n    base,\r\n  ) : p;\r\n}\r\n\r\nfunction interceptEvent(e: Event) {\r\n  if(e.cancelable && !e.defaultPrevented)\r\n    e.preventDefault();\r\n  e.stopPropagation();\r\n}","import { NS_SVG, NS_XHTML } from './utils';\r\n\r\nexport async function downloadDocument(src: Element, name: string) {\r\n  const document = src.ownerDocument;\r\n  const root = document.implementation.createDocument(NS_SVG, 'svg', null);\r\n  const clone = root.importNode(src, true);\r\n  root.replaceChild(clone, root.firstChild!);\r\n  await Promise.all(Array.prototype.map.call(clone.querySelectorAll('script'), resolveScript));\r\n  const blob = new Blob([new XMLSerializer().serializeToString(root)], { type: 'image/svg+xml' });\r\n  const element = document.createElementNS(NS_XHTML, 'a') as HTMLAnchorElement;\r\n  element.href = URL.createObjectURL(blob);\r\n  element.download = name;\r\n  element.click();\r\n  URL.revokeObjectURL(element.href);\r\n}\r\n\r\nasync function resolveScript(script: Element) {\r\n  if(script instanceof HTMLScriptElement) {\r\n    const { src } = script;\r\n    if(!src) return;\r\n    script.removeAttribute('src');\r\n    script.textContent = await (await fetch(src)).text();\r\n  } else if(script instanceof SVGScriptElement) {\r\n    const href = script.href.baseVal;\r\n    if(!href) return;\r\n    script.removeAttribute('href');\r\n    script.appendChild(script.ownerDocument.createCDATASection(await (await fetch(href)).text()));\r\n  }\r\n}","import { MainHandler } from '.';\r\nimport { formatTime, formatDateTime } from './utils';\r\n\r\nconst certificate = document.querySelector('#certificate')!;\r\nconst timeStartElement = certificate.querySelector<SVGTextElement>('text#time-start')!;\r\nconst timeEndElement = certificate.querySelector<SVGTextElement>('text#time-end')!;\r\nconst timeUsedElement = certificate.querySelector<SVGTextElement>('text#time-used')!;\r\nconst puzzleSizeElement = certificate.querySelector<SVGTextElement>('text#puzzle-size')!;\r\n\r\nexport function showCertificate(mainHandler: MainHandler) {\r\n  certificate.classList.add('show');\r\n  certificate.setAttribute('visibility', 'visible');\r\n  certificate.setAttribute('pointer-events', 'visible');\r\n  timeStartElement.textContent = formatDateTime(mainHandler.startTime);\r\n  timeEndElement.textContent = formatDateTime(mainHandler.endTime);\r\n  timeUsedElement.textContent = formatTime(mainHandler.time);\r\n  puzzleSizeElement.textContent = `${mainHandler.xCount}×${mainHandler.yCount} (${mainHandler.xCount * mainHandler.yCount} Pieces)`;\r\n}\r\n\r\nexport function hideCetificate() {\r\n  certificate.classList.remove('show');\r\n  timeStartElement.textContent = '';\r\n  timeEndElement.textContent = '';\r\n  timeUsedElement.textContent = '';\r\n  puzzleSizeElement.textContent = '';\r\n}"],"sourceRoot":""}